{"version":3,"sources":["../node_modules/bn.js/lib/bn.js","../../node_modules/@solana/buffer-layout/src/Layout.ts","../../node_modules/file-uri-to-path/index.js","../../node_modules/bindings/bindings.js","../../node_modules/bigint-buffer/dist/node.js","../../node_modules/@metaplex-foundation/umi-options/src/common.ts","../../node_modules/@metaplex-foundation/umi-options/src/unwrapOption.ts","../../node_modules/@metaplex-foundation/umi-options/src/unwrapOptionRecursively.ts","../../node_modules/@metaplex-foundation/umi-options/dist/cjs/index.cjs","../../node_modules/@metaplex-foundation/umi-serializers-encodings/src/errors.ts","../../node_modules/@metaplex-foundation/umi-serializers-encodings/src/baseX.ts","../../node_modules/@metaplex-foundation/umi-serializers-encodings/src/base10.ts","../../node_modules/@metaplex-foundation/umi-serializers-encodings/src/base16.ts","../../node_modules/@metaplex-foundation/umi-serializers-encodings/src/base58.ts","../../node_modules/@metaplex-foundation/umi-serializers-core/src/bytes.ts","../../node_modules/@metaplex-foundation/umi-serializers-core/src/errors.ts","../../node_modules/@metaplex-foundation/umi-serializers-core/src/fixSerializer.ts","../../node_modules/@metaplex-foundation/umi-serializers-core/src/mapSerializer.ts","../../node_modules/@metaplex-foundation/umi-serializers-core/src/reverseSerializer.ts","../../node_modules/@metaplex-foundation/umi-serializers-core/dist/cjs/index.cjs","../../node_modules/@metaplex-foundation/umi-serializers-encodings/src/baseXReslice.ts","../../node_modules/@metaplex-foundation/umi-serializers-encodings/src/base64.ts","../../node_modules/@metaplex-foundation/umi-serializers-encodings/src/nullCharacters.ts","../../node_modules/@metaplex-foundation/umi-serializers-encodings/src/utf8.ts","../../node_modules/@metaplex-foundation/umi-serializers-encodings/dist/cjs/index.cjs","../../node_modules/@metaplex-foundation/umi-public-keys/src/errors.ts","../../node_modules/@metaplex-foundation/umi-public-keys/src/common.ts","../../node_modules/@metaplex-foundation/umi-public-keys/dist/cjs/index.cjs","../../node_modules/@metaplex-foundation/umi-serializers-numbers/src/common.ts","../../node_modules/@metaplex-foundation/umi-serializers-numbers/src/errors.ts","../../node_modules/@metaplex-foundation/umi-serializers-numbers/src/utils.ts","../../node_modules/@metaplex-foundation/umi-serializers-numbers/src/f32.ts","../../node_modules/@metaplex-foundation/umi-serializers-numbers/src/f64.ts","../../node_modules/@metaplex-foundation/umi-serializers-numbers/src/i8.ts","../../node_modules/@metaplex-foundation/umi-serializers-numbers/src/i16.ts","../../node_modules/@metaplex-foundation/umi-serializers-numbers/src/i32.ts","../../node_modules/@metaplex-foundation/umi-serializers-numbers/src/i64.ts","../../node_modules/@metaplex-foundation/umi-serializers-numbers/src/i128.ts","../../node_modules/@metaplex-foundation/umi-serializers-numbers/src/u8.ts","../../node_modules/@metaplex-foundation/umi-serializers-numbers/src/u16.ts","../../node_modules/@metaplex-foundation/umi-serializers-numbers/src/u32.ts","../../node_modules/@metaplex-foundation/umi-serializers-numbers/src/u64.ts","../../node_modules/@metaplex-foundation/umi-serializers-numbers/src/u128.ts","../../node_modules/@metaplex-foundation/umi-serializers-numbers/src/shortU16.ts","../../node_modules/@metaplex-foundation/umi-serializers-numbers/dist/cjs/index.cjs","../../node_modules/@metaplex-foundation/umi-serializers/src/errors.ts","../../node_modules/@metaplex-foundation/umi-serializers/src/sumSerializerSizes.ts","../../node_modules/@metaplex-foundation/umi-serializers/src/utils.ts","../../node_modules/@metaplex-foundation/umi-serializers/src/array.ts","../../node_modules/@metaplex-foundation/umi-serializers/src/bitArray.ts","../../node_modules/@metaplex-foundation/umi-serializers/src/bool.ts","../../node_modules/@metaplex-foundation/umi-serializers/src/bytes.ts","../../node_modules/@metaplex-foundation/umi-serializers/src/maxSerializerSizes.ts","../../node_modules/@metaplex-foundation/umi-serializers/src/dataEnum.ts","../../node_modules/@metaplex-foundation/umi-serializers/src/map.ts","../../node_modules/@metaplex-foundation/umi-serializers/src/nullable.ts","../../node_modules/@metaplex-foundation/umi-serializers/src/option.ts","../../node_modules/@metaplex-foundation/umi-serializers/src/publicKey.ts","../../node_modules/@metaplex-foundation/umi-serializers/src/scalarEnum.ts","../../node_modules/@metaplex-foundation/umi-serializers/src/set.ts","../../node_modules/@metaplex-foundation/umi-serializers/src/string.ts","../../node_modules/@metaplex-foundation/umi-serializers/src/struct.ts","../../node_modules/@metaplex-foundation/umi-serializers/src/tuple.ts","../../node_modules/@metaplex-foundation/umi-serializers/src/unit.ts","../../node_modules/@metaplex-foundation/umi-serializers/dist/cjs/index.cjs","../../node_modules/@metaplex-foundation/umi/src/serializersInternal.ts","../../node_modules/@metaplex-foundation/umi/src/errors/UmiError.ts","../../node_modules/@metaplex-foundation/umi/src/errors/SdkError.ts","../../node_modules/@metaplex-foundation/umi/src/errors/UnexpectedAccountError.ts","../../node_modules/@metaplex-foundation/umi/src/errors/AccountNotFoundError.ts","../../node_modules/@metaplex-foundation/umi/src/Account.ts","../../node_modules/@metaplex-foundation/umi/src/BigInt.ts","../../node_modules/@metaplex-foundation/umi/src/errors/UnexpectedAmountError.ts","../../node_modules/@metaplex-foundation/umi/src/errors/AmountMismatchError.ts","../../node_modules/@metaplex-foundation/umi/src/Amount.ts","../../node_modules/@metaplex-foundation/umi/src/Cluster.ts","../../node_modules/@metaplex-foundation/umi/src/errors/InterfaceImplementationMissingError.ts","../../node_modules/@metaplex-foundation/umi/src/DownloaderInterface.ts","../../node_modules/@metaplex-foundation/umi/src/EddsaInterface.ts","../../node_modules/@metaplex-foundation/umi/src/HttpInterface.ts","../../node_modules/@metaplex-foundation/umi/src/ProgramRepositoryInterface.ts","../../node_modules/@metaplex-foundation/umi/src/RpcInterface.ts","../../node_modules/@metaplex-foundation/umi/src/SerializerInterface.ts","../../node_modules/@metaplex-foundation/umi/src/utils/arrays.ts","../../node_modules/@metaplex-foundation/umi/src/Signer.ts","../../node_modules/@metaplex-foundation/umi/src/TransactionFactoryInterface.ts","../../node_modules/@metaplex-foundation/umi/src/UploaderInterface.ts","../../node_modules/@metaplex-foundation/umi/src/Context.ts","../../node_modules/@metaplex-foundation/umi/src/DateTime.ts","../../node_modules/@metaplex-foundation/umi/src/utils/randomStrings.ts","../../node_modules/@metaplex-foundation/umi/src/GenericFile.ts","../../node_modules/@metaplex-foundation/umi/src/GpaBuilder.ts","../../node_modules/@metaplex-foundation/umi/src/HttpRequest.ts","../../node_modules/@metaplex-foundation/umi/src/Transaction.ts","../../node_modules/@metaplex-foundation/umi/src/Keypair.ts","../../node_modules/@metaplex-foundation/umi/src/Program.ts","../../node_modules/@metaplex-foundation/umi/src/SignerPlugins.ts","../../node_modules/@metaplex-foundation/umi/src/TransactionBuilder.ts","../../node_modules/@metaplex-foundation/umi/src/TransactionBuilderGroup.ts","../../node_modules/@metaplex-foundation/umi/src/Umi.ts","../../node_modules/@metaplex-foundation/umi/src/errors/InvalidBaseStringError.ts","../../node_modules/@metaplex-foundation/umi/src/errors/ProgramError.ts","../../node_modules/@metaplex-foundation/umi/dist/cjs/index.cjs","../../node_modules/@metaplex-foundation/umi/dist/cjs/serializers.cjs","../../node_modules/@metaplex-foundation/mpl-core/src/generated/accounts/assetSigner.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/addBlocker.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/attribute.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/attributes.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/autograph.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/autographSignature.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/baseAppData.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/baseAppDataInitInfo.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/baseAppDataUpdateInfo.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/baseDataSection.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/baseDataSectionInitInfo.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/baseDataSectionUpdateInfo.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/baseExternalPluginAdapterInitInfo.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/baseExternalPluginAdapterKey.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/baseExternalPluginAdapterUpdateInfo.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/baseExtraAccount.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/baseLifecycleHook.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/baseLifecycleHookInitInfo.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/baseLifecycleHookUpdateInfo.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/baseLinkedAppData.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/baseLinkedAppDataInitInfo.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/baseLinkedAppDataUpdateInfo.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/baseLinkedDataKey.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/baseLinkedLifecycleHook.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/baseLinkedLifecycleHookInitInfo.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/baseLinkedLifecycleHookUpdateInfo.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/baseMasterEdition.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/baseOracle.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/baseOracleInitInfo.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/baseOracleUpdateInfo.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/basePluginAuthority.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/baseRoyalties.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/baseRuleSet.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/baseSeed.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/baseUpdateAuthority.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/baseValidationResultsOffset.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/bubblegumV2.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/burnDelegate.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/compressionProof.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/creator.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/dataState.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/edition.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/externalCheckResult.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/externalPluginAdapter.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/externalPluginAdapterSchema.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/externalPluginAdapterType.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/externalRegistryRecord.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/externalValidationResult.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/freezeDelegate.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/hashablePluginSchema.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/hashedAssetSchema.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/hookableLifecycleEvent.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/immutableMetadata.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/key.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/oracleValidation.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/permanentBurnDelegate.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/permanentFreezeDelegate.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/permanentTransferDelegate.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/plugin.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/pluginAuthorityPair.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/pluginType.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/registryRecord.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/transferDelegate.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/updateDelegate.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/updateType.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/validationResult.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/verifiedCreators.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/verifiedCreatorsSignature.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/index.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/assetV1AccountData.ts","../../node_modules/@metaplex-foundation/mpl-core/src/plugins/royalties.ts","../../node_modules/@msgpack/msgpack/src/utils/utf8.ts","../../node_modules/@msgpack/msgpack/src/ExtData.ts","../../node_modules/@msgpack/msgpack/src/DecodeError.ts","../../node_modules/@msgpack/msgpack/src/utils/int.ts","../../node_modules/@msgpack/msgpack/src/timestamp.ts","../../node_modules/@msgpack/msgpack/src/ExtensionCodec.ts","../../node_modules/@msgpack/msgpack/src/utils/typedArrays.ts","../../node_modules/@msgpack/msgpack/src/Encoder.ts","../../node_modules/@msgpack/msgpack/src/encode.ts","../../node_modules/@msgpack/msgpack/src/utils/prettyByte.ts","../../node_modules/@msgpack/msgpack/src/CachedKeyDecoder.ts","../../node_modules/@msgpack/msgpack/src/Decoder.ts","../../node_modules/@msgpack/msgpack/src/decode.ts","../../node_modules/@msgpack/msgpack/src/utils/stream.ts","../../node_modules/@msgpack/msgpack/src/decodeAsync.ts","../../node_modules/@msgpack/msgpack/src/index.ts","../../node_modules/@metaplex-foundation/mpl-core/src/utils.ts","../../node_modules/@metaplex-foundation/mpl-core/src/plugins/pluginAuthority.ts","../../node_modules/@metaplex-foundation/mpl-core/src/plugins/masterEdition.ts","../../node_modules/@metaplex-foundation/mpl-core/src/plugins/lib.ts","../../node_modules/@metaplex-foundation/mpl-core/src/plugins/appData.ts","../../node_modules/@metaplex-foundation/mpl-core/src/plugins/lifecycleChecks.ts","../../node_modules/@metaplex-foundation/mpl-core/src/plugins/seed.ts","../../node_modules/@metaplex-foundation/mpl-core/src/plugins/extraAccount.ts","../../node_modules/@metaplex-foundation/mpl-core/src/plugins/lifecycleHook.ts","../../node_modules/@metaplex-foundation/mpl-core/src/plugins/validationResultsOffset.ts","../../node_modules/@metaplex-foundation/mpl-core/src/plugins/oracle.ts","../../node_modules/@metaplex-foundation/mpl-core/src/plugins/linkedDataKey.ts","../../node_modules/@metaplex-foundation/mpl-core/src/plugins/externalPluginAdapterKey.ts","../../node_modules/@metaplex-foundation/mpl-core/dist/src/plugins/externalPluginAdapterManifest.js","../../node_modules/@metaplex-foundation/mpl-core/src/plugins/types.ts","../../node_modules/@metaplex-foundation/mpl-core/src/plugins/linkedAppData.ts","../../node_modules/@metaplex-foundation/mpl-core/src/plugins/dataSection.ts","../../node_modules/@metaplex-foundation/mpl-core/src/plugins/linkedLifecycleHook.ts","../../node_modules/@metaplex-foundation/mpl-core/src/plugins/externalPluginAdapters.ts","../../node_modules/@metaplex-foundation/mpl-core/src/plugins/updateAuthority.ts","../../node_modules/@metaplex-foundation/mpl-core/src/plugins/index.ts","../../node_modules/@metaplex-foundation/mpl-core/src/hooked/pluginRegistryV1Data.ts","../../node_modules/@metaplex-foundation/mpl-core/src/hooked/assetAccountData.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/types/collectionV1AccountData.ts","../../node_modules/@metaplex-foundation/mpl-core/src/hooked/collectionAccountData.ts","../../node_modules/@metaplex-foundation/mpl-core/src/hooked/index.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/accounts/assetV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/accounts/collectionV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/accounts/hashedAssetV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/accounts/pluginHeaderV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/accounts/pluginRegistryV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/accounts/index.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/errors/mplCore.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/errors/index.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/shared/index.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/addCollectionExternalPluginAdapterV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/addCollectionPluginV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/addExternalPluginAdapterV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/addPluginV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/approveCollectionPluginAuthorityV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/approvePluginAuthorityV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/burnCollectionV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/burnV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/collect.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/compressV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/createCollectionV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/createCollectionV2.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/createV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/createV2.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/decompressV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/executeV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/removeCollectionExternalPluginAdapterV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/removeCollectionPluginV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/removeExternalPluginAdapterV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/removePluginV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/revokeCollectionPluginAuthorityV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/revokePluginAuthorityV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/transferV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/updateCollectionExternalPluginAdapterV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/updateCollectionInfoV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/updateCollectionPluginV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/updateCollectionV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/updateExternalPluginAdapterV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/updatePluginV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/updateV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/updateV2.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/writeCollectionExternalPluginAdapterDataV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/writeExternalPluginAdapterDataV1.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/instructions/index.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/programs/mplCore.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/programs/index.ts","../../node_modules/@metaplex-foundation/mpl-core/src/generated/index.ts","../../node_modules/@metaplex-foundation/mpl-core/src/plugin.ts","../../node_modules/@noble/hashes/src/_u64.ts","../../node_modules/@noble/hashes/src/cryptoNode.ts","../../node_modules/@noble/hashes/src/utils.ts","../../node_modules/@noble/hashes/src/sha3.ts","../../node_modules/@metaplex-foundation/mpl-core/src/hash.ts","../../node_modules/@metaplex-foundation/mpl-core/src/authority.ts","../../node_modules/@metaplex-foundation/mpl-core/src/helpers/state.ts","../../node_modules/@metaplex-foundation/mpl-core/src/helpers/authority.ts","../../node_modules/@metaplex-foundation/mpl-core/src/helpers/plugin.ts","../../node_modules/@metaplex-foundation/mpl-core/src/helpers/lifecycle.ts","../../node_modules/@metaplex-foundation/mpl-core/src/helpers/fetch.ts","../../node_modules/@metaplex-foundation/mpl-core/src/helpers/index.ts","../../node_modules/@metaplex-foundation/mpl-core/src/instructions/errors.ts","../../node_modules/@metaplex-foundation/mpl-core/src/instructions/approvePluginAuthority.ts","../../node_modules/@metaplex-foundation/mpl-core/src/instructions/legacyDelegate.ts","../../node_modules/@metaplex-foundation/mpl-core/src/instructions/legacyRevoke.ts","../../node_modules/@metaplex-foundation/mpl-core/src/instructions/freeze.ts","../../node_modules/@metaplex-foundation/mpl-core/src/instructions/create.ts","../../node_modules/@metaplex-foundation/mpl-core/src/instructions/update.ts","../../node_modules/@metaplex-foundation/mpl-core/src/instructions/transfer.ts","../../node_modules/@metaplex-foundation/mpl-core/src/instructions/burn.ts","../../node_modules/@metaplex-foundation/mpl-core/src/instructions/addPlugin.ts","../../node_modules/@metaplex-foundation/mpl-core/src/instructions/removePlugin.ts","../../node_modules/@metaplex-foundation/mpl-core/src/instructions/updatePlugin.ts","../../node_modules/@metaplex-foundation/mpl-core/src/instructions/revokePluginAuthority.ts","../../node_modules/@metaplex-foundation/mpl-core/src/instructions/collection/addCollectionPlugin.ts","../../node_modules/@metaplex-foundation/mpl-core/src/instructions/collection/approveCollectionPluginAuthority.ts","../../node_modules/@metaplex-foundation/mpl-core/src/instructions/collection/burnCollection.ts","../../node_modules/@metaplex-foundation/mpl-core/src/instructions/collection/createCollection.ts","../../node_modules/@metaplex-foundation/mpl-core/src/instructions/collection/removeCollectionPlugin.ts","../../node_modules/@metaplex-foundation/mpl-core/src/instructions/collection/revokeCollectionPluginAuthority.ts","../../node_modules/@metaplex-foundation/mpl-core/src/instructions/collection/updateCollection.ts","../../node_modules/@metaplex-foundation/mpl-core/src/instructions/collection/updateCollectionPlugin.ts","../../node_modules/@metaplex-foundation/mpl-core/src/instructions/collection/index.ts","../../node_modules/@metaplex-foundation/mpl-core/src/instructions/writeData.ts","../../node_modules/@metaplex-foundation/mpl-core/src/instructions/execute.ts","../../node_modules/@metaplex-foundation/mpl-core/src/instructions/index.ts","../../node_modules/@metaplex-foundation/mpl-core/src/index.ts","../src/index.ts","../src/trade.ts","../src/types/trade.ts","../../node_modules/@solana/spl-token/src/constants.ts","../../node_modules/@solana/buffer-layout-utils/src/base.ts","../../node_modules/@solana/buffer-layout-utils/src/bigint.ts","../../node_modules/bignumber.js/bignumber.mjs","../../node_modules/@solana/buffer-layout-utils/src/decimal.ts","../../node_modules/@solana/buffer-layout-utils/src/native.ts","../../node_modules/@solana/buffer-layout-utils/src/web3.ts","../../node_modules/@solana/spl-token/src/errors.ts","../../node_modules/@solana/spl-token/src/state/mint.ts","../src/types/position.ts","../src/utils/helpers.ts","../src/utils/pda/index.ts","../src/utils/sendVersionedTransaction.ts","../src/utils/getPriorityFee.ts","../src/utils/swap.ts","../src/utils/constants.ts","../src/position.ts","../src/config.ts"],"sourcesContent":["(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    this.length = num === 0 ? 1 : this.length;\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n",null,"\n/**\n * Module dependencies.\n */\n\nvar sep = require('path').sep || '/';\n\n/**\n * Module exports.\n */\n\nmodule.exports = fileUriToPath;\n\n/**\n * File URI to Path function.\n *\n * @param {String} uri\n * @return {String} path\n * @api public\n */\n\nfunction fileUriToPath (uri) {\n  if ('string' != typeof uri ||\n      uri.length <= 7 ||\n      'file://' != uri.substring(0, 7)) {\n    throw new TypeError('must pass in a file:// URI to convert to a file path');\n  }\n\n  var rest = decodeURI(uri.substring(7));\n  var firstSlash = rest.indexOf('/');\n  var host = rest.substring(0, firstSlash);\n  var path = rest.substring(firstSlash + 1);\n\n  // 2.  Scheme Definition\n  // As a special case, <host> can be the string \"localhost\" or the empty\n  // string; this is interpreted as \"the machine from which the URL is\n  // being interpreted\".\n  if ('localhost' == host) host = '';\n\n  if (host) {\n    host = sep + sep + host;\n  }\n\n  // 3.2  Drives, drive letters, mount points, file system root\n  // Drive letters are mapped into the top of a file URI in various ways,\n  // depending on the implementation; some applications substitute\n  // vertical bar (\"|\") for the colon after the drive letter, yielding\n  // \"file:///c|/tmp/test.txt\".  In some cases, the colon is left\n  // unchanged, as in \"file:///c:/tmp/test.txt\".  In other cases, the\n  // colon is simply omitted, as in \"file:///c/tmp/test.txt\".\n  path = path.replace(/^(.+)\\|/, '$1:');\n\n  // for Windows, we need to invert the path separators from what a URI uses\n  if (sep == '\\\\') {\n    path = path.replace(/\\//g, '\\\\');\n  }\n\n  if (/^.+\\:/.test(path)) {\n    // has Windows drive at beginning of path\n  } else {\n    // unix path…\n    path = sep + path;\n  }\n\n  return host + path;\n}\n","/**\n * Module dependencies.\n */\n\nvar fs = require('fs'),\n  path = require('path'),\n  fileURLToPath = require('file-uri-to-path'),\n  join = path.join,\n  dirname = path.dirname,\n  exists =\n    (fs.accessSync &&\n      function(path) {\n        try {\n          fs.accessSync(path);\n        } catch (e) {\n          return false;\n        }\n        return true;\n      }) ||\n    fs.existsSync ||\n    path.existsSync,\n  defaults = {\n    arrow: process.env.NODE_BINDINGS_ARROW || ' → ',\n    compiled: process.env.NODE_BINDINGS_COMPILED_DIR || 'compiled',\n    platform: process.platform,\n    arch: process.arch,\n    nodePreGyp:\n      'node-v' +\n      process.versions.modules +\n      '-' +\n      process.platform +\n      '-' +\n      process.arch,\n    version: process.versions.node,\n    bindings: 'bindings.node',\n    try: [\n      // node-gyp's linked version in the \"build\" dir\n      ['module_root', 'build', 'bindings'],\n      // node-waf and gyp_addon (a.k.a node-gyp)\n      ['module_root', 'build', 'Debug', 'bindings'],\n      ['module_root', 'build', 'Release', 'bindings'],\n      // Debug files, for development (legacy behavior, remove for node v0.9)\n      ['module_root', 'out', 'Debug', 'bindings'],\n      ['module_root', 'Debug', 'bindings'],\n      // Release files, but manually compiled (legacy behavior, remove for node v0.9)\n      ['module_root', 'out', 'Release', 'bindings'],\n      ['module_root', 'Release', 'bindings'],\n      // Legacy from node-waf, node <= 0.4.x\n      ['module_root', 'build', 'default', 'bindings'],\n      // Production \"Release\" buildtype binary (meh...)\n      ['module_root', 'compiled', 'version', 'platform', 'arch', 'bindings'],\n      // node-qbs builds\n      ['module_root', 'addon-build', 'release', 'install-root', 'bindings'],\n      ['module_root', 'addon-build', 'debug', 'install-root', 'bindings'],\n      ['module_root', 'addon-build', 'default', 'install-root', 'bindings'],\n      // node-pre-gyp path ./lib/binding/{node_abi}-{platform}-{arch}\n      ['module_root', 'lib', 'binding', 'nodePreGyp', 'bindings']\n    ]\n  };\n\n/**\n * The main `bindings()` function loads the compiled bindings for a given module.\n * It uses V8's Error API to determine the parent filename that this function is\n * being invoked from, which is then used to find the root directory.\n */\n\nfunction bindings(opts) {\n  // Argument surgery\n  if (typeof opts == 'string') {\n    opts = { bindings: opts };\n  } else if (!opts) {\n    opts = {};\n  }\n\n  // maps `defaults` onto `opts` object\n  Object.keys(defaults).map(function(i) {\n    if (!(i in opts)) opts[i] = defaults[i];\n  });\n\n  // Get the module root\n  if (!opts.module_root) {\n    opts.module_root = exports.getRoot(exports.getFileName());\n  }\n\n  // Ensure the given bindings name ends with .node\n  if (path.extname(opts.bindings) != '.node') {\n    opts.bindings += '.node';\n  }\n\n  // https://github.com/webpack/webpack/issues/4175#issuecomment-342931035\n  var requireFunc =\n    typeof __webpack_require__ === 'function'\n      ? __non_webpack_require__\n      : require;\n\n  var tries = [],\n    i = 0,\n    l = opts.try.length,\n    n,\n    b,\n    err;\n\n  for (; i < l; i++) {\n    n = join.apply(\n      null,\n      opts.try[i].map(function(p) {\n        return opts[p] || p;\n      })\n    );\n    tries.push(n);\n    try {\n      b = opts.path ? requireFunc.resolve(n) : requireFunc(n);\n      if (!opts.path) {\n        b.path = n;\n      }\n      return b;\n    } catch (e) {\n      if (e.code !== 'MODULE_NOT_FOUND' &&\n          e.code !== 'QUALIFIED_PATH_RESOLUTION_FAILED' &&\n          !/not find/i.test(e.message)) {\n        throw e;\n      }\n    }\n  }\n\n  err = new Error(\n    'Could not locate the bindings file. Tried:\\n' +\n      tries\n        .map(function(a) {\n          return opts.arrow + a;\n        })\n        .join('\\n')\n  );\n  err.tries = tries;\n  throw err;\n}\nmodule.exports = exports = bindings;\n\n/**\n * Gets the filename of the JavaScript file that invokes this function.\n * Used to help find the root directory of a module.\n * Optionally accepts an filename argument to skip when searching for the invoking filename\n */\n\nexports.getFileName = function getFileName(calling_file) {\n  var origPST = Error.prepareStackTrace,\n    origSTL = Error.stackTraceLimit,\n    dummy = {},\n    fileName;\n\n  Error.stackTraceLimit = 10;\n\n  Error.prepareStackTrace = function(e, st) {\n    for (var i = 0, l = st.length; i < l; i++) {\n      fileName = st[i].getFileName();\n      if (fileName !== __filename) {\n        if (calling_file) {\n          if (fileName !== calling_file) {\n            return;\n          }\n        } else {\n          return;\n        }\n      }\n    }\n  };\n\n  // run the 'prepareStackTrace' function above\n  Error.captureStackTrace(dummy);\n  dummy.stack;\n\n  // cleanup\n  Error.prepareStackTrace = origPST;\n  Error.stackTraceLimit = origSTL;\n\n  // handle filename that starts with \"file://\"\n  var fileSchema = 'file://';\n  if (fileName.indexOf(fileSchema) === 0) {\n    fileName = fileURLToPath(fileName);\n  }\n\n  return fileName;\n};\n\n/**\n * Gets the root directory of a module, given an arbitrary filename\n * somewhere in the module tree. The \"root directory\" is the directory\n * containing the `package.json` file.\n *\n *   In:  /home/nate/node-native-module/lib/index.js\n *   Out: /home/nate/node-native-module\n */\n\nexports.getRoot = function getRoot(file) {\n  var dir = dirname(file),\n    prev;\n  while (true) {\n    if (dir === '.') {\n      // Avoids an infinite loop in rare cases, like the REPL\n      dir = process.cwd();\n    }\n    if (\n      exists(join(dir, 'package.json')) ||\n      exists(join(dir, 'node_modules'))\n    ) {\n      // Found the 'package.json' file or 'node_modules' dir; we're done\n      return dir;\n    }\n    if (prev === dir) {\n      // Got to the top\n      throw new Error(\n        'Could not find module root given file: \"' +\n          file +\n          '\". Do you have a `package.json` file? '\n      );\n    }\n    // Try the parent dir next\n    prev = dir;\n    dir = join(dir, '..');\n  }\n};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n{\n    try {\n        converter = require('bindings')('bigint_buffer');\n    }\n    catch (e) {\n        console.warn('bigint: Failed to load bindings, pure JS will be used (try npm run rebuild?)');\n    }\n}\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    if (converter === undefined) {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    if (converter === undefined) {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    if (converter === undefined) {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    if (converter === undefined) {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","/**\n * Defines a type `T` that can also be `null`.\n * @category Utils — Options\n */\nexport type Nullable<T> = T | null;\n\n/**\n * Defines a type `T` that can also be `null` or `undefined`.\n * @category Utils — Options\n */\nexport type Nullish<T> = T | null | undefined;\n\n/**\n * An implementation of the Rust Option type in JavaScript.\n * It can be one of the following:\n * - <code>{@link Some}<T></code>: Meaning there is a value of type T.\n * - <code>{@link None}</code>: Meaning there is no value.\n *\n * @category Utils — Options\n */\nexport type Option<T> = Some<T> | None;\n\n/**\n * Defines a looser type that can be used when serializing an {@link Option}.\n * This allows us to pass null or the Option value directly whilst still\n * supporting the Option type for use-cases that need more type safety.\n *\n * @category Utils — Options\n */\nexport type OptionOrNullable<T> = Option<T> | Nullable<T>;\n\n/**\n * Represents an option of type `T` that has a value.\n *\n * @see {@link Option}\n * @category Utils — Options\n */\nexport type Some<T> = { __option: 'Some'; value: T };\n\n/**\n * Represents an option of type `T` that has no value.\n *\n * @see {@link Option}\n * @category Utils — Options\n */\nexport type None = { __option: 'None' };\n\n/**\n * Creates a new {@link Option} of type `T` that has a value.\n *\n * @see {@link Option}\n * @category Utils — Options\n */\nexport const some = <T>(value: T): Option<T> => ({ __option: 'Some', value });\n\n/**\n * Creates a new {@link Option} of type `T` that has no value.\n *\n * @see {@link Option}\n * @category Utils — Options\n */\nexport const none = <T>(): Option<T> => ({ __option: 'None' });\n\n/**\n * Whether the given data is an {@link Option}.\n * @category Utils — Options\n */\nexport const isOption = <T = unknown>(input: any): input is Option<T> =>\n  input &&\n  typeof input === 'object' &&\n  '__option' in input &&\n  ((input.__option === 'Some' && 'value' in input) ||\n    input.__option === 'None');\n\n/**\n * Whether the given {@link Option} is a {@link Some}.\n * @category Utils — Options\n */\nexport const isSome = <T>(option: Option<T>): option is Some<T> =>\n  option.__option === 'Some';\n\n/**\n * Whether the given {@link Option} is a {@link None}.\n * @category Utils — Options\n */\nexport const isNone = <T>(option: Option<T>): option is None =>\n  option.__option === 'None';\n","import { Nullable, Nullish, Option, isSome, none, some } from './common';\n\n/**\n * Unwraps the value of an {@link Option} of type `T`\n * or returns a fallback value that defaults to `null`.\n *\n * @category Utils — Options\n */\nexport function unwrapOption<T>(option: Option<T>): Nullable<T>;\nexport function unwrapOption<T, U>(option: Option<T>, fallback: () => U): T | U;\nexport function unwrapOption<T, U = null>(\n  option: Option<T>,\n  fallback?: () => U\n): T | U {\n  if (isSome(option)) return option.value;\n  return fallback ? fallback() : (null as U);\n}\n\n/**\n * Wraps a nullable value into an {@link Option}.\n *\n * @category Utils — Options\n */\nexport const wrapNullable = <T>(nullable: Nullable<T>): Option<T> =>\n  nullable !== null ? some(nullable) : none<T>();\n\n/**\n * Wraps a nullish value into an {@link Option}.\n *\n * @category Utils — Options\n */\nexport const wrapNullish = <T>(nullish: Nullish<T>): Option<T> =>\n  nullish !== null && nullish !== undefined ? some(nullish) : none<T>();\n\n/**\n * Unwraps the value of an {@link Option} of type `T`.\n * If the option is a {@link Some}, it returns its value,\n * Otherwise, it returns `null`.\n *\n * @category Utils — Options\n * @deprecated Use {@link unwrapOption} instead.\n */\nexport const unwrapSome = <T>(option: Option<T>): Nullable<T> =>\n  isSome(option) ? option.value : null;\n\n/**\n * Unwraps the value of an {@link Option} of type `T`\n * or returns a custom fallback value.\n * If the option is a {@link Some}, it returns its value,\n * Otherwise, it returns the return value of the provided fallback callback.\n *\n * @category Utils — Options\n * @deprecated Use {@link unwrapOption} instead.\n */\nexport const unwrapSomeOrElse = <T, U>(\n  option: Option<T>,\n  fallback: () => U\n): T | U => (isSome(option) ? option.value : fallback());\n","import { None, Some, isOption, isSome } from './common';\n\n/**\n * A type that defines the recursive unwrapping of a type `T`\n * such that all nested {@link Option} types are unwrapped.\n *\n * For each nested {@link Option} type, if the option is a {@link Some},\n * it returns the type of its value, otherwise, it returns the provided\n * fallback type `U` which defaults to `null`.\n *\n * @category Utils — Options\n */\nexport type UnwrappedOption<T, U = null> = T extends Some<infer TValue>\n  ? UnwrappedOption<TValue, U>\n  : T extends None\n  ? U\n  : T extends\n      | string\n      | number\n      | boolean\n      | symbol\n      | bigint\n      | undefined\n      | null\n      | Uint8Array\n      | Date\n  ? T\n  : T extends object\n  ? { [key in keyof T]: UnwrappedOption<T[key], U> }\n  : T extends Array<infer TItem>\n  ? Array<UnwrappedOption<TItem, U>>\n  : T;\n\n/**\n * Recursively go through a type `T`such that all\n * nested {@link Option} types are unwrapped.\n *\n * For each nested {@link Option} type, if the option is a {@link Some},\n * it returns its value, otherwise, it returns the provided fallback value\n * which defaults to `null`.\n *\n * @category Utils — Options\n */\nexport function unwrapOptionRecursively<T>(input: T): UnwrappedOption<T>;\nexport function unwrapOptionRecursively<T, U>(\n  input: T,\n  fallback: () => U\n): UnwrappedOption<T, U>;\nexport function unwrapOptionRecursively<T, U = null>(\n  input: T,\n  fallback?: () => U\n): UnwrappedOption<T, U> {\n  // Types to bypass.\n  if (!input || ArrayBuffer.isView(input)) {\n    return input as UnwrappedOption<T, U>;\n  }\n\n  const next = <X>(x: X) =>\n    (fallback\n      ? unwrapOptionRecursively(x, fallback)\n      : unwrapOptionRecursively(x)) as UnwrappedOption<X, U>;\n\n  // Handle Option.\n  if (isOption(input)) {\n    if (isSome(input)) return next(input.value) as UnwrappedOption<T, U>;\n    return (fallback ? fallback() : null) as UnwrappedOption<T, U>;\n  }\n\n  // Walk.\n  if (Array.isArray(input)) {\n    return input.map(next) as UnwrappedOption<T, U>;\n  }\n  if (typeof input === 'object') {\n    return Object.fromEntries(\n      Object.entries(input).map(([k, v]) => [k, next(v)])\n    ) as UnwrappedOption<T, U>;\n  }\n  return input as UnwrappedOption<T, U>;\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar common = require('./common.cjs');\nvar unwrapOption = require('./unwrapOption.cjs');\nvar unwrapOptionRecursively = require('./unwrapOptionRecursively.cjs');\n\n\n\nexports.isNone = common.isNone;\nexports.isOption = common.isOption;\nexports.isSome = common.isSome;\nexports.none = common.none;\nexports.some = common.some;\nexports.unwrapOption = unwrapOption.unwrapOption;\nexports.unwrapSome = unwrapOption.unwrapSome;\nexports.unwrapSomeOrElse = unwrapOption.unwrapSomeOrElse;\nexports.wrapNullable = unwrapOption.wrapNullable;\nexports.wrapNullish = unwrapOption.wrapNullish;\nexports.unwrapOptionRecursively = unwrapOptionRecursively.unwrapOptionRecursively;\n//# sourceMappingURL=index.cjs.map\n","/** @category Errors */\nexport class InvalidBaseStringError extends Error {\n  readonly name: string = 'InvalidBaseStringError';\n\n  readonly cause?: Error;\n\n  constructor(value: string, base: number, cause?: Error) {\n    const message = `Expected a string of base ${base}, got [${value}].`;\n    super(message);\n    this.cause = cause;\n  }\n}\n","import type { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { InvalidBaseStringError } from './errors';\n\n/**\n * A string serializer that requires a custom alphabet and uses\n * the length of that alphabet as the base. It then divides\n * the input by the base as many times as necessary to get\n * the output. It also supports leading zeroes by using the\n * first character of the alphabet as the zero character.\n *\n * This can be used to create serializers such as base10 or base58.\n *\n * @category Serializers\n */\nexport const baseX = (alphabet: string): Serializer<string> => {\n  const base = alphabet.length;\n  const baseBigInt = BigInt(base);\n  return {\n    description: `base${base}`,\n    fixedSize: null,\n    maxSize: null,\n    serialize(value: string): Uint8Array {\n      // Check if the value is valid.\n      if (!value.match(new RegExp(`^[${alphabet}]*$`))) {\n        throw new InvalidBaseStringError(value, base);\n      }\n      if (value === '') return new Uint8Array();\n\n      // Handle leading zeroes.\n      const chars = [...value];\n      let trailIndex = chars.findIndex((c) => c !== alphabet[0]);\n      trailIndex = trailIndex === -1 ? chars.length : trailIndex;\n      const leadingZeroes = Array(trailIndex).fill(0);\n      if (trailIndex === chars.length) return Uint8Array.from(leadingZeroes);\n\n      // From baseX to base10.\n      const tailChars = chars.slice(trailIndex);\n      let base10Number = 0n;\n      let baseXPower = 1n;\n      for (let i = tailChars.length - 1; i >= 0; i -= 1) {\n        base10Number += baseXPower * BigInt(alphabet.indexOf(tailChars[i]));\n        baseXPower *= baseBigInt;\n      }\n\n      // From base10 to bytes.\n      const tailBytes = [];\n      while (base10Number > 0n) {\n        tailBytes.unshift(Number(base10Number % 256n));\n        base10Number /= 256n;\n      }\n      return Uint8Array.from(leadingZeroes.concat(tailBytes));\n    },\n    deserialize(buffer, offset = 0): [string, number] {\n      if (buffer.length === 0) return ['', 0];\n\n      // Handle leading zeroes.\n      const bytes = buffer.slice(offset);\n      let trailIndex = bytes.findIndex((n) => n !== 0);\n      trailIndex = trailIndex === -1 ? bytes.length : trailIndex;\n      const leadingZeroes = alphabet[0].repeat(trailIndex);\n      if (trailIndex === bytes.length) return [leadingZeroes, buffer.length];\n\n      // From bytes to base10.\n      let base10Number = bytes\n        .slice(trailIndex)\n        .reduce((sum, byte) => sum * 256n + BigInt(byte), 0n);\n\n      // From base10 to baseX.\n      const tailChars = [];\n      while (base10Number > 0n) {\n        tailChars.unshift(alphabet[Number(base10Number % baseBigInt)]);\n        base10Number /= baseBigInt;\n      }\n\n      return [leadingZeroes + tailChars.join(''), buffer.length];\n    },\n  };\n};\n","import type { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { baseX } from './baseX';\n\n/**\n * A string serializer that uses base10 encoding.\n * @category Serializers\n */\nexport const base10: Serializer<string> = baseX('0123456789');\n","import type { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { InvalidBaseStringError } from './errors';\n\n/**\n * A string serializer that uses base16 encoding.\n * @category Serializers\n */\nexport const base16: Serializer<string> = {\n  description: 'base16',\n  fixedSize: null,\n  maxSize: null,\n  serialize(value: string) {\n    const lowercaseValue = value.toLowerCase();\n    if (!lowercaseValue.match(/^[0123456789abcdef]*$/)) {\n      throw new InvalidBaseStringError(value, 16);\n    }\n    const matches = lowercaseValue.match(/.{1,2}/g);\n    return Uint8Array.from(\n      matches ? matches.map((byte: string) => parseInt(byte, 16)) : []\n    );\n  },\n  deserialize(buffer, offset = 0) {\n    const value = buffer\n      .slice(offset)\n      .reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');\n    return [value, buffer.length];\n  },\n};\n","import type { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { baseX } from './baseX';\n\n/**\n * A string serializer that uses base58 encoding.\n * @category Serializers\n */\nexport const base58: Serializer<string> = baseX(\n  '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n);\n","/**\n * Concatenates an array of `Uint8Array`s into a single `Uint8Array`.\n * @category Utils\n */\nexport const mergeBytes = (bytesArr: Uint8Array[]): Uint8Array => {\n  const totalLength = bytesArr.reduce((total, arr) => total + arr.length, 0);\n  const result = new Uint8Array(totalLength);\n  let offset = 0;\n  bytesArr.forEach((arr) => {\n    result.set(arr, offset);\n    offset += arr.length;\n  });\n  return result;\n};\n\n/**\n * Pads a `Uint8Array` with zeroes to the specified length.\n * If the array is longer than the specified length, it is returned as-is.\n * @category Utils\n */\nexport const padBytes = (bytes: Uint8Array, length: number): Uint8Array => {\n  if (bytes.length >= length) return bytes;\n  const paddedBytes = new Uint8Array(length).fill(0);\n  paddedBytes.set(bytes);\n  return paddedBytes;\n};\n\n/**\n * Fixes a `Uint8Array` to the specified length.\n * If the array is longer than the specified length, it is truncated.\n * If the array is shorter than the specified length, it is padded with zeroes.\n * @category Utils\n */\nexport const fixBytes = (bytes: Uint8Array, length: number): Uint8Array =>\n  padBytes(bytes.slice(0, length), length);\n","/** @category Errors */\nexport class DeserializingEmptyBufferError extends Error {\n  readonly name: string = 'DeserializingEmptyBufferError';\n\n  constructor(serializer: string) {\n    super(`Serializer [${serializer}] cannot deserialize empty buffers.`);\n  }\n}\n\n/** @category Errors */\nexport class NotEnoughBytesError extends Error {\n  readonly name: string = 'NotEnoughBytesError';\n\n  constructor(\n    serializer: string,\n    expected: bigint | number,\n    actual: bigint | number\n  ) {\n    super(\n      `Serializer [${serializer}] expected ${expected} bytes, got ${actual}.`\n    );\n  }\n}\n\n/** @category Errors */\nexport class ExpectedFixedSizeSerializerError extends Error {\n  readonly name: string = 'ExpectedFixedSizeSerializerError';\n\n  constructor(message?: string) {\n    message ??= 'Expected a fixed-size serializer, got a variable-size one.';\n    super(message);\n  }\n}\n","import { fixBytes } from './bytes';\nimport { Serializer } from './common';\nimport { NotEnoughBytesError } from './errors';\n\n/**\n * Creates a fixed-size serializer from a given serializer.\n *\n * @param serializer - The serializer to wrap into a fixed-size serializer.\n * @param fixedBytes - The fixed number of bytes to read.\n * @param description - A custom description for the serializer.\n *\n * @category Serializers\n */\nexport function fixSerializer<T, U extends T = T>(\n  serializer: Serializer<T, U>,\n  fixedBytes: number,\n  description?: string\n): Serializer<T, U> {\n  return {\n    description:\n      description ?? `fixed(${fixedBytes}, ${serializer.description})`,\n    fixedSize: fixedBytes,\n    maxSize: fixedBytes,\n    serialize: (value: T) => fixBytes(serializer.serialize(value), fixedBytes),\n    deserialize: (buffer: Uint8Array, offset = 0) => {\n      // Slice the buffer to the fixed size.\n      buffer = buffer.slice(offset, offset + fixedBytes);\n      // Ensure we have enough bytes.\n      if (buffer.length < fixedBytes) {\n        throw new NotEnoughBytesError(\n          'fixSerializer',\n          fixedBytes,\n          buffer.length\n        );\n      }\n      // If the nested serializer is fixed-size, pad and truncate the buffer accordingly.\n      if (serializer.fixedSize !== null) {\n        buffer = fixBytes(buffer, serializer.fixedSize);\n      }\n      // Deserialize the value using the nested serializer.\n      const [value] = serializer.deserialize(buffer, 0);\n      return [value, offset + fixedBytes];\n    },\n  };\n}\n","import { Serializer } from './common';\n\n/**\n * Converts a serializer A to a serializer B by mapping their values.\n * @category Serializers\n */\nexport function mapSerializer<NewFrom, OldFrom, To extends NewFrom & OldFrom>(\n  serializer: Serializer<OldFrom, To>,\n  unmap: (value: NewFrom) => OldFrom\n): Serializer<NewFrom, To>;\nexport function mapSerializer<\n  NewFrom,\n  OldFrom,\n  NewTo extends NewFrom = NewFrom,\n  OldTo extends OldFrom = OldFrom\n>(\n  serializer: Serializer<OldFrom, OldTo>,\n  unmap: (value: NewFrom) => OldFrom,\n  map: (value: OldTo, buffer: Uint8Array, offset: number) => NewTo\n): Serializer<NewFrom, NewTo>;\nexport function mapSerializer<\n  NewFrom,\n  OldFrom,\n  NewTo extends NewFrom = NewFrom,\n  OldTo extends OldFrom = OldFrom\n>(\n  serializer: Serializer<OldFrom, OldTo>,\n  unmap: (value: NewFrom) => OldFrom,\n  map?: (value: OldTo, buffer: Uint8Array, offset: number) => NewTo\n): Serializer<NewFrom, NewTo> {\n  return {\n    description: serializer.description,\n    fixedSize: serializer.fixedSize,\n    maxSize: serializer.maxSize,\n    serialize: (value: NewFrom) => serializer.serialize(unmap(value)),\n    deserialize: (buffer: Uint8Array, offset = 0) => {\n      const [value, length] = serializer.deserialize(buffer, offset);\n      return map\n        ? [map(value, buffer, offset), length]\n        : [value as any, length];\n    },\n  };\n}\n","import { mergeBytes } from './bytes';\nimport { Serializer } from './common';\nimport { ExpectedFixedSizeSerializerError } from './errors';\n\n/**\n * Reverses the bytes of a fixed-size serializer.\n * @category Serializers\n */\nexport function reverseSerializer<T, U extends T = T>(\n  serializer: Serializer<T, U>\n): Serializer<T, U> {\n  if (serializer.fixedSize === null) {\n    throw new ExpectedFixedSizeSerializerError(\n      'Cannot reverse a serializer of variable size.'\n    );\n  }\n  return {\n    ...serializer,\n    serialize: (value: T) => serializer.serialize(value).reverse(),\n    deserialize: (bytes: Uint8Array, offset = 0) => {\n      const fixedSize = serializer.fixedSize as number;\n      const newBytes = mergeBytes([\n        bytes.slice(0, offset),\n        bytes.slice(offset, offset + fixedSize).reverse(),\n        bytes.slice(offset + fixedSize),\n      ]);\n      return serializer.deserialize(newBytes, offset);\n    },\n  };\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar bytes = require('./bytes.cjs');\nvar errors = require('./errors.cjs');\nvar fixSerializer = require('./fixSerializer.cjs');\nvar mapSerializer = require('./mapSerializer.cjs');\nvar reverseSerializer = require('./reverseSerializer.cjs');\n\n\n\nexports.fixBytes = bytes.fixBytes;\nexports.mergeBytes = bytes.mergeBytes;\nexports.padBytes = bytes.padBytes;\nexports.DeserializingEmptyBufferError = errors.DeserializingEmptyBufferError;\nexports.ExpectedFixedSizeSerializerError = errors.ExpectedFixedSizeSerializerError;\nexports.NotEnoughBytesError = errors.NotEnoughBytesError;\nexports.fixSerializer = fixSerializer.fixSerializer;\nexports.mapSerializer = mapSerializer.mapSerializer;\nexports.reverseSerializer = reverseSerializer.reverseSerializer;\n//# sourceMappingURL=index.cjs.map\n","/* eslint-disable no-restricted-syntax */\n/* eslint-disable no-bitwise */\nimport type { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { InvalidBaseStringError } from './errors';\n\n/**\n * A string serializer that reslices bytes into custom chunks\n * of bits that are then mapped to a custom alphabet.\n *\n * This can be used to create serializers whose alphabet\n * is a power of 2 such as base16 or base64.\n *\n * @category Serializers\n */\nexport const baseXReslice = (\n  alphabet: string,\n  bits: number\n): Serializer<string> => {\n  const base = alphabet.length;\n  const reslice = (\n    input: number[],\n    inputBits: number,\n    outputBits: number,\n    useRemainder: boolean\n  ): number[] => {\n    const output = [];\n    let accumulator = 0;\n    let bitsInAccumulator = 0;\n    const mask = (1 << outputBits) - 1;\n    for (const value of input) {\n      accumulator = (accumulator << inputBits) | value;\n      bitsInAccumulator += inputBits;\n      while (bitsInAccumulator >= outputBits) {\n        bitsInAccumulator -= outputBits;\n        output.push((accumulator >> bitsInAccumulator) & mask);\n      }\n    }\n    if (useRemainder && bitsInAccumulator > 0) {\n      output.push((accumulator << (outputBits - bitsInAccumulator)) & mask);\n    }\n    return output;\n  };\n\n  return {\n    description: `base${base}`,\n    fixedSize: null,\n    maxSize: null,\n    serialize(value: string): Uint8Array {\n      // Check if the value is valid.\n      if (!value.match(new RegExp(`^[${alphabet}]*$`))) {\n        throw new InvalidBaseStringError(value, base);\n      }\n      if (value === '') return new Uint8Array();\n      const charIndices = [...value].map((c) => alphabet.indexOf(c));\n      const bytes = reslice(charIndices, bits, 8, false);\n      return Uint8Array.from(bytes);\n    },\n    deserialize(buffer, offset = 0): [string, number] {\n      if (buffer.length === 0) return ['', 0];\n      const bytes = [...buffer.slice(offset)];\n      const charIndices = reslice(bytes, 8, bits, true);\n      return [charIndices.map((i) => alphabet[i]).join(''), buffer.length];\n    },\n  };\n};\n","import {\n  mapSerializer,\n  type Serializer,\n} from '@metaplex-foundation/umi-serializers-core';\nimport { baseXReslice } from './baseXReslice';\n\n/**\n * A string serializer that uses base64 encoding.\n * @category Serializers\n */\nexport const base64: Serializer<string> = mapSerializer(\n  baseXReslice(\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n    6\n  ),\n  (value) => value.replace(/=/g, ''),\n  (value) => value.padEnd(Math.ceil(value.length / 4) * 4, '=')\n);\n","/**\n * Removes null characters from a string.\n * @category Utils\n */\nexport const removeNullCharacters = (value: string) =>\n  // eslint-disable-next-line no-control-regex\n  value.replace(/\\u0000/g, '');\n\n/**\n * Pads a string with null characters at the end.\n * @category Utils\n */\nexport const padNullCharacters = (value: string, chars: number) =>\n  value.padEnd(chars, '\\u0000');\n","import type { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { removeNullCharacters } from './nullCharacters';\n\n/**\n * A string serializer that uses UTF-8 encoding\n * using the native `TextEncoder` API.\n * @category Serializers\n */\nexport const utf8: Serializer<string> = {\n  description: 'utf8',\n  fixedSize: null,\n  maxSize: null,\n  serialize(value: string) {\n    return new TextEncoder().encode(value);\n  },\n  deserialize(buffer, offset = 0) {\n    const value = new TextDecoder().decode(buffer.slice(offset));\n    return [removeNullCharacters(value), buffer.length];\n  },\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base10 = require('./base10.cjs');\nvar base16 = require('./base16.cjs');\nvar base58 = require('./base58.cjs');\nvar base64 = require('./base64.cjs');\nvar baseX = require('./baseX.cjs');\nvar baseXReslice = require('./baseXReslice.cjs');\nvar errors = require('./errors.cjs');\nvar nullCharacters = require('./nullCharacters.cjs');\nvar utf8 = require('./utf8.cjs');\n\n\n\nexports.base10 = base10.base10;\nexports.base16 = base16.base16;\nexports.base58 = base58.base58;\nexports.base64 = base64.base64;\nexports.baseX = baseX.baseX;\nexports.baseXReslice = baseXReslice.baseXReslice;\nexports.InvalidBaseStringError = errors.InvalidBaseStringError;\nexports.padNullCharacters = nullCharacters.padNullCharacters;\nexports.removeNullCharacters = nullCharacters.removeNullCharacters;\nexports.utf8 = utf8.utf8;\n//# sourceMappingURL=index.cjs.map\n","/** @category Errors */\nexport class InvalidPublicKeyError extends Error {\n  readonly name: string = 'InvalidPublicKeyError';\n\n  readonly invalidPublicKey: string;\n\n  constructor(invalidPublicKey: string, reason?: string) {\n    reason = reason ? `. ${reason}` : '';\n    super(`The provided public key is invalid: ${invalidPublicKey}${reason}`);\n    this.invalidPublicKey = invalidPublicKey;\n  }\n}\n","import { base58 } from '@metaplex-foundation/umi-serializers-encodings';\nimport { InvalidPublicKeyError } from './errors';\n\n/**\n * The amount of bytes in a public key.\n * @category Signers and PublicKeys\n */\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Defines a public key as a base58 string.\n * @category Signers and PublicKeys\n */\nexport type PublicKey<TAddress extends string = string> = TAddress & {\n  readonly __publicKey: unique symbol;\n};\n\n/**\n * Defines a Program-Derived Address.\n *\n * It is a public key with the bump number that was used\n * to ensure the address is not on the ed25519 curve.\n *\n * @category Signers and PublicKeys\n */\nexport type Pda<\n  TAddress extends string = string,\n  TBump extends number = number\n> = [PublicKey<TAddress>, TBump] & { readonly __pda: unique symbol };\n\n/**\n * A Uint8Array that represents a public key.\n * @category Signers and PublicKeys\n */\nexport type PublicKeyBytes = Uint8Array & {\n  readonly __publicKeyBytes: unique symbol;\n};\n\n/**\n * Defines an object that has a public key.\n * @category Signers and PublicKeys\n */\nexport type HasPublicKey<TAddress extends string = string> = {\n  readonly publicKey: PublicKey<TAddress>;\n};\n\n/**\n * Defines an object that can be converted to a base58 public key.\n * @category Signers and PublicKeys\n */\nexport type LegacyWeb3JsPublicKey<TAddress extends string = string> = {\n  toBase58: () => TAddress;\n};\n\n/**\n * Defines all the possible inputs for creating a public key.\n * @category Signers and PublicKeys\n */\nexport type PublicKeyInput<TAddress extends string = string> =\n  | TAddress\n  | Uint8Array\n  | [TAddress, number]\n  | { publicKey: TAddress }\n  | LegacyWeb3JsPublicKey<TAddress>;\n\n/**\n * Defines all the possible safe inputs for creating a public key.\n * That is, they have already been validated to be or\n * to contain a valid public key.\n * @category Signers and PublicKeys\n */\nexport type SafePublicKeyInput<TAddress extends string = string> =\n  | PublicKey<TAddress>\n  | PublicKeyBytes\n  | Pda<TAddress>\n  | HasPublicKey<TAddress>\n  | LegacyWeb3JsPublicKey<TAddress>;\n\n/**\n * Creates a new public key from the given input.\n * @category Signers and PublicKeys\n */\nexport function publicKey<TAddress extends string>(\n  input: PublicKeyInput<TAddress>,\n  assertValidPublicKey?: true\n): PublicKey<TAddress>;\nexport function publicKey<TAddress extends string>(\n  input: SafePublicKeyInput<TAddress>,\n  assertValidPublicKey: false\n): PublicKey<TAddress>;\nexport function publicKey<TAddress extends string>(\n  input: PublicKeyInput<TAddress> | SafePublicKeyInput<TAddress>,\n  assertValidPublicKey: boolean = true\n): PublicKey<TAddress> {\n  const key = ((): string => {\n    if (typeof input === 'string') {\n      return input;\n    }\n    // HasPublicKey.\n    if (typeof input === 'object' && 'publicKey' in input) {\n      return input.publicKey;\n    }\n    // LegacyWeb3JsPublicKey.\n    if (typeof input === 'object' && 'toBase58' in input) {\n      return input.toBase58();\n    }\n    // Pda.\n    if (Array.isArray(input)) {\n      return input[0];\n    }\n    // PublicKeyBytes.\n    return base58.deserialize(input)[0];\n  })();\n\n  if (assertValidPublicKey) {\n    assertPublicKey(key);\n  }\n\n  return key as PublicKey<TAddress>;\n}\n\n/**\n * Creates the default public key which is composed of all zero bytes.\n * @category Signers and PublicKeys\n */\nexport const defaultPublicKey = () =>\n  '11111111111111111111111111111111' as PublicKey<'11111111111111111111111111111111'>;\n\n/**\n * Whether the given value is a valid public key.\n * @category Signers and PublicKeys\n */\nexport const isPublicKey = <TAddress extends string>(\n  value: TAddress\n): value is PublicKey<TAddress> => {\n  try {\n    assertPublicKey(value);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\n/**\n * Whether the given value is a valid program-derived address.\n * @category Signers and PublicKeys\n */\nexport const isPda = <TAddress extends string, TBump extends number>(\n  value: [TAddress, TBump]\n): value is Pda<TAddress, TBump> =>\n  Array.isArray(value) &&\n  value.length === 2 &&\n  typeof value[1] === 'number' &&\n  isPublicKey(value[0]);\n\n/**\n * Ensures the given value is a valid public key.\n * @category Signers and PublicKeys\n */\nexport function assertPublicKey<TAddress extends string>(\n  value: TAddress\n): asserts value is PublicKey<TAddress> {\n  // Check value type.\n  if (typeof value !== 'string') {\n    throw new InvalidPublicKeyError(value, 'Public keys must be strings.');\n  }\n\n  // Check base58 encoding and byte length.\n  publicKeyBytes(value);\n}\n\n/**\n * Deduplicates the given array of public keys.\n * @category Signers and PublicKeys\n */\nexport const uniquePublicKeys = (publicKeys: PublicKey[]): PublicKey[] => [\n  ...new Set(publicKeys),\n];\n\n/**\n * Converts the given public key to a Uint8Array.\n * Throws an error if the public key is an invalid base58 string.\n * @category Signers and PublicKeys\n */\nexport const publicKeyBytes = (value: string): PublicKeyBytes => {\n  // Check string length to avoid unnecessary base58 encoding.\n  if (value.length < 32 || value.length > 44) {\n    throw new InvalidPublicKeyError(\n      value,\n      'Public keys must be between 32 and 44 characters.'\n    );\n  }\n\n  // Check base58 encoding.\n  let bytes: Uint8Array;\n  try {\n    bytes = base58.serialize(value);\n  } catch (error) {\n    throw new InvalidPublicKeyError(\n      value,\n      'Public keys must be base58 encoded.'\n    );\n  }\n\n  // Check byte length.\n  if (bytes.length !== PUBLIC_KEY_LENGTH) {\n    throw new InvalidPublicKeyError(\n      value,\n      `Public keys must be ${PUBLIC_KEY_LENGTH} bytes.`\n    );\n  }\n\n  return bytes as PublicKeyBytes;\n};\n\n/**\n * Converts the given public key to a base58 string.\n * @category Signers and PublicKeys\n * @deprecated Public keys are now represented directly as base58 strings.\n */\nexport const base58PublicKey = (key: PublicKeyInput): string => publicKey(key);\n\n/**\n * Whether the given public keys are the same.\n * @category Signers and PublicKeys\n * @deprecated Use `left === right` instead now that public keys are base58 strings.\n */\nexport const samePublicKey = (\n  left: PublicKeyInput,\n  right: PublicKeyInput\n): boolean => publicKey(left) === publicKey(right);\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar common = require('./common.cjs');\nvar errors = require('./errors.cjs');\n\n\n\nexports.PUBLIC_KEY_LENGTH = common.PUBLIC_KEY_LENGTH;\nexports.assertPublicKey = common.assertPublicKey;\nexports.base58PublicKey = common.base58PublicKey;\nexports.defaultPublicKey = common.defaultPublicKey;\nexports.isPda = common.isPda;\nexports.isPublicKey = common.isPublicKey;\nexports.publicKey = common.publicKey;\nexports.publicKeyBytes = common.publicKeyBytes;\nexports.samePublicKey = common.samePublicKey;\nexports.uniquePublicKeys = common.uniquePublicKeys;\nexports.InvalidPublicKeyError = errors.InvalidPublicKeyError;\n//# sourceMappingURL=index.cjs.map\n","import {\n  BaseSerializerOptions,\n  Serializer,\n} from '@metaplex-foundation/umi-serializers-core';\n\n/**\n * Defines a serializer for numbers and bigints.\n * @category Serializers\n */\nexport type NumberSerializer =\n  | Serializer<number>\n  | Serializer<number | bigint, bigint>;\n\n/**\n * Defines the options for u8 and i8 serializers.\n * @category Serializers\n */\nexport type SingleByteNumberSerializerOptions = BaseSerializerOptions;\n\n/**\n * Defines the options for number serializers that use more than one byte.\n * @category Serializers\n */\nexport type NumberSerializerOptions = BaseSerializerOptions & {\n  /**\n   * Whether the serializer should use little-endian or big-endian encoding.\n   * @defaultValue `Endian.Little`\n   */\n  endian?: Endian;\n};\n\n/**\n * Defines the endianness of a number serializer.\n * @category Serializers\n */\nexport enum Endian {\n  Little = 'le',\n  Big = 'be',\n}\n","/** @category Errors */\nexport class NumberOutOfRangeError extends RangeError {\n  readonly name: string = 'NumberOutOfRangeError';\n\n  constructor(\n    serializer: string,\n    min: number | bigint,\n    max: number | bigint,\n    actual: number | bigint\n  ) {\n    super(\n      `Serializer [${serializer}] expected number to be between ${min} and ${max}, got ${actual}.`\n    );\n  }\n}\n","import {\n  DeserializingEmptyBufferError,\n  NotEnoughBytesError,\n  Serializer,\n} from '@metaplex-foundation/umi-serializers-core';\nimport {\n  Endian,\n  NumberSerializer,\n  NumberSerializerOptions,\n  SingleByteNumberSerializerOptions,\n} from './common';\nimport { NumberOutOfRangeError } from './errors';\n\nexport function numberFactory(input: {\n  name: string;\n  size: number;\n  range?: [number | bigint, number | bigint];\n  set: (view: DataView, value: number | bigint, littleEndian?: boolean) => void;\n  get: (view: DataView, littleEndian?: boolean) => number;\n  options: SingleByteNumberSerializerOptions | NumberSerializerOptions;\n}): Serializer<number>;\nexport function numberFactory(input: {\n  name: string;\n  size: number;\n  range?: [number | bigint, number | bigint];\n  set: (view: DataView, value: number | bigint, littleEndian?: boolean) => void;\n  get: (view: DataView, littleEndian?: boolean) => bigint;\n  options: SingleByteNumberSerializerOptions | NumberSerializerOptions;\n}): Serializer<number | bigint, bigint>;\nexport function numberFactory(input: {\n  name: string;\n  size: number;\n  range?: [number | bigint, number | bigint];\n  set: (view: DataView, value: number | bigint, littleEndian?: boolean) => void;\n  get: (view: DataView, littleEndian?: boolean) => number | bigint;\n  options: SingleByteNumberSerializerOptions | NumberSerializerOptions;\n}): NumberSerializer {\n  let littleEndian: boolean | undefined;\n  let defaultDescription: string = input.name;\n\n  if (input.size > 1) {\n    littleEndian =\n      !('endian' in input.options) || input.options.endian === Endian.Little;\n    defaultDescription += littleEndian ? '(le)' : '(be)';\n  }\n\n  return {\n    description: input.options.description ?? defaultDescription,\n    fixedSize: input.size,\n    maxSize: input.size,\n    serialize(value: number | bigint): Uint8Array {\n      if (input.range) {\n        assertRange(input.name, input.range[0], input.range[1], value);\n      }\n      const buffer = new ArrayBuffer(input.size);\n      input.set(new DataView(buffer), value, littleEndian);\n      return new Uint8Array(buffer);\n    },\n    deserialize(bytes, offset = 0): [number | bigint, number] {\n      const slice = bytes.slice(offset, offset + input.size);\n      assertEnoughBytes('i8', slice, input.size);\n      const view = toDataView(slice);\n      return [input.get(view, littleEndian), offset + input.size];\n    },\n  } as NumberSerializer;\n}\n\n/**\n * Helper function to ensure that the array buffer is converted properly from a uint8array\n * Source: https://stackoverflow.com/questions/37228285/uint8array-to-arraybuffer\n * @param {Uint8Array} array Uint8array that's being converted into an array buffer\n * @returns {ArrayBuffer} An array buffer that's necessary to construct a data view\n */\nexport const toArrayBuffer = (array: Uint8Array): ArrayBuffer =>\n  array.buffer.slice(array.byteOffset, array.byteLength + array.byteOffset);\n\nexport const toDataView = (array: Uint8Array): DataView =>\n  new DataView(toArrayBuffer(array));\n\nexport const assertRange = (\n  serializer: string,\n  min: number | bigint,\n  max: number | bigint,\n  value: number | bigint\n) => {\n  if (value < min || value > max) {\n    throw new NumberOutOfRangeError(serializer, min, max, value);\n  }\n};\n\nexport const assertEnoughBytes = (\n  serializer: string,\n  bytes: Uint8Array,\n  expected: number\n) => {\n  if (bytes.length === 0) {\n    throw new DeserializingEmptyBufferError(serializer);\n  }\n  if (bytes.length < expected) {\n    throw new NotEnoughBytesError(serializer, expected, bytes.length);\n  }\n};\n","import { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { NumberSerializerOptions } from './common';\nimport { numberFactory } from './utils';\n\nexport const f32 = (\n  options: NumberSerializerOptions = {}\n): Serializer<number> =>\n  numberFactory({\n    name: 'f32',\n    size: 4,\n    set: (view, value, le) => view.setFloat32(0, Number(value), le),\n    get: (view, le) => view.getFloat32(0, le),\n    options,\n  });\n","import { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { NumberSerializerOptions } from './common';\nimport { numberFactory } from './utils';\n\nexport const f64 = (\n  options: NumberSerializerOptions = {}\n): Serializer<number> =>\n  numberFactory({\n    name: 'f64',\n    size: 8,\n    set: (view, value, le) => view.setFloat64(0, Number(value), le),\n    get: (view, le) => view.getFloat64(0, le),\n    options,\n  });\n","import { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { SingleByteNumberSerializerOptions } from './common';\nimport { numberFactory } from './utils';\n\nexport const i8 = (\n  options: SingleByteNumberSerializerOptions = {}\n): Serializer<number> =>\n  numberFactory({\n    name: 'i8',\n    size: 1,\n    range: [-Number('0x7f') - 1, Number('0x7f')],\n    set: (view, value) => view.setInt8(0, Number(value)),\n    get: (view) => view.getInt8(0),\n    options,\n  });\n","import { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { NumberSerializerOptions } from './common';\nimport { numberFactory } from './utils';\n\nexport const i16 = (\n  options: NumberSerializerOptions = {}\n): Serializer<number> =>\n  numberFactory({\n    name: 'i16',\n    size: 2,\n    range: [-Number('0x7fff') - 1, Number('0x7fff')],\n    set: (view, value, le) => view.setInt16(0, Number(value), le),\n    get: (view, le) => view.getInt16(0, le),\n    options,\n  });\n","import { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { NumberSerializerOptions } from './common';\nimport { numberFactory } from './utils';\n\nexport const i32 = (\n  options: NumberSerializerOptions = {}\n): Serializer<number> =>\n  numberFactory({\n    name: 'i32',\n    size: 4,\n    range: [-Number('0x7fffffff') - 1, Number('0x7fffffff')],\n    set: (view, value, le) => view.setInt32(0, Number(value), le),\n    get: (view, le) => view.getInt32(0, le),\n    options,\n  });\n","import { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { NumberSerializerOptions } from './common';\nimport { numberFactory } from './utils';\n\nexport const i64 = (\n  options: NumberSerializerOptions = {}\n): Serializer<number | bigint, bigint> =>\n  numberFactory({\n    name: 'i64',\n    size: 8,\n    range: [-BigInt('0x7fffffffffffffff') - 1n, BigInt('0x7fffffffffffffff')],\n    set: (view, value, le) => view.setBigInt64(0, BigInt(value), le),\n    get: (view, le) => view.getBigInt64(0, le),\n    options,\n  });\n","/* eslint-disable no-bitwise */\nimport { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { NumberSerializerOptions } from './common';\nimport { numberFactory } from './utils';\n\nexport const i128 = (\n  options: NumberSerializerOptions = {}\n): Serializer<number | bigint, bigint> =>\n  numberFactory({\n    name: 'i128',\n    size: 16,\n    range: [\n      -BigInt('0x7fffffffffffffffffffffffffffffff') - 1n,\n      BigInt('0x7fffffffffffffffffffffffffffffff'),\n    ],\n    set: (view, value, le) => {\n      const leftOffset = le ? 8 : 0;\n      const rightOffset = le ? 0 : 8;\n      const rightMask = 0xffffffffffffffffn;\n      view.setBigInt64(leftOffset, BigInt(value) >> 64n, le);\n      view.setBigUint64(rightOffset, BigInt(value) & rightMask, le);\n    },\n    get: (view, le) => {\n      const leftOffset = le ? 8 : 0;\n      const rightOffset = le ? 0 : 8;\n      const left = view.getBigInt64(leftOffset, le);\n      const right = view.getBigUint64(rightOffset, le);\n      return (left << 64n) + right;\n    },\n    options,\n  });\n","import { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { SingleByteNumberSerializerOptions } from './common';\nimport { numberFactory } from './utils';\n\nexport const u8 = (\n  options: SingleByteNumberSerializerOptions = {}\n): Serializer<number> =>\n  numberFactory({\n    name: 'u8',\n    size: 1,\n    range: [0, Number('0xff')],\n    set: (view, value) => view.setUint8(0, Number(value)),\n    get: (view) => view.getUint8(0),\n    options,\n  });\n","import { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { NumberSerializerOptions } from './common';\nimport { numberFactory } from './utils';\n\nexport const u16 = (\n  options: NumberSerializerOptions = {}\n): Serializer<number> =>\n  numberFactory({\n    name: 'u16',\n    size: 2,\n    range: [0, Number('0xffff')],\n    set: (view, value, le) => view.setUint16(0, Number(value), le),\n    get: (view, le) => view.getUint16(0, le),\n    options,\n  });\n","import { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { NumberSerializerOptions } from './common';\nimport { numberFactory } from './utils';\n\nexport const u32 = (\n  options: NumberSerializerOptions = {}\n): Serializer<number> =>\n  numberFactory({\n    name: 'u32',\n    size: 4,\n    range: [0, Number('0xffffffff')],\n    set: (view, value, le) => view.setUint32(0, Number(value), le),\n    get: (view, le) => view.getUint32(0, le),\n    options,\n  });\n","import { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { NumberSerializerOptions } from './common';\nimport { numberFactory } from './utils';\n\nexport const u64 = (\n  options: NumberSerializerOptions = {}\n): Serializer<number | bigint, bigint> =>\n  numberFactory({\n    name: 'u64',\n    size: 8,\n    range: [0, BigInt('0xffffffffffffffff')],\n    set: (view, value, le) => view.setBigUint64(0, BigInt(value), le),\n    get: (view, le) => view.getBigUint64(0, le),\n    options,\n  });\n","/* eslint-disable no-bitwise */\nimport { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { NumberSerializerOptions } from './common';\nimport { numberFactory } from './utils';\n\nexport const u128 = (\n  options: NumberSerializerOptions = {}\n): Serializer<number | bigint, bigint> =>\n  numberFactory({\n    name: 'u128',\n    size: 16,\n    range: [0, BigInt('0xffffffffffffffffffffffffffffffff')],\n    set: (view, value, le) => {\n      const leftOffset = le ? 8 : 0;\n      const rightOffset = le ? 0 : 8;\n      const rightMask = 0xffffffffffffffffn;\n      view.setBigUint64(leftOffset, BigInt(value) >> 64n, le);\n      view.setBigUint64(rightOffset, BigInt(value) & rightMask, le);\n    },\n    get: (view, le) => {\n      const leftOffset = le ? 8 : 0;\n      const rightOffset = le ? 0 : 8;\n      const left = view.getBigUint64(leftOffset, le);\n      const right = view.getBigUint64(rightOffset, le);\n      return (left << 64n) + right;\n    },\n    options,\n  });\n","/* eslint-disable no-bitwise */\nimport {\n  BaseSerializerOptions,\n  Serializer,\n} from '@metaplex-foundation/umi-serializers-core';\nimport { assertRange } from './utils';\n\n/**\n * Defines the options for the shortU16 serializer.\n * @category Serializers\n */\nexport type ShortU16SerializerOptions = BaseSerializerOptions;\n\n/**\n * Same as u16, but serialized with 1 to 3 bytes.\n *\n * If the value is above 0x7f, the top bit is set and the remaining\n * value is stored in the next bytes. Each byte follows the same\n * pattern until the 3rd byte. The 3rd byte, if needed, uses\n * all 8 bits to store the last byte of the original value.\n *\n * @category Serializers\n */\nexport const shortU16 = (\n  options: ShortU16SerializerOptions = {}\n): Serializer<number> => ({\n  description: options.description ?? 'shortU16',\n  fixedSize: null,\n  maxSize: 3,\n  serialize: (value: number): Uint8Array => {\n    assertRange('shortU16', 0, 65535, value);\n    const bytes = [0];\n    for (let ii = 0; ; ii += 1) {\n      // Shift the bits of the value over such that the next 7 bits are at the right edge.\n      const alignedValue = value >> (ii * 7);\n      if (alignedValue === 0) {\n        // No more bits to consume.\n        break;\n      }\n      // Extract those 7 bits using a mask.\n      const nextSevenBits = 0b1111111 & alignedValue;\n      bytes[ii] = nextSevenBits;\n      if (ii > 0) {\n        // Set the continuation bit of the previous slice.\n        bytes[ii - 1] |= 0b10000000;\n      }\n    }\n    return new Uint8Array(bytes);\n  },\n  deserialize: (bytes: Uint8Array, offset = 0): [number, number] => {\n    let value = 0;\n    let byteCount = 0;\n    while (\n      ++byteCount // eslint-disable-line no-plusplus\n    ) {\n      const byteIndex = byteCount - 1;\n      const currentByte = bytes[offset + byteIndex];\n      const nextSevenBits = 0b1111111 & currentByte;\n      // Insert the next group of seven bits into the correct slot of the output value.\n      value |= nextSevenBits << (byteIndex * 7);\n      if ((currentByte & 0b10000000) === 0) {\n        // This byte does not have its continuation bit set. We're done.\n        break;\n      }\n    }\n    return [value, offset + byteCount];\n  },\n});\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar common = require('./common.cjs');\nvar errors = require('./errors.cjs');\nvar f32 = require('./f32.cjs');\nvar f64 = require('./f64.cjs');\nvar i8 = require('./i8.cjs');\nvar i16 = require('./i16.cjs');\nvar i32 = require('./i32.cjs');\nvar i64 = require('./i64.cjs');\nvar i128 = require('./i128.cjs');\nvar u8 = require('./u8.cjs');\nvar u16 = require('./u16.cjs');\nvar u32 = require('./u32.cjs');\nvar u64 = require('./u64.cjs');\nvar u128 = require('./u128.cjs');\nvar shortU16 = require('./shortU16.cjs');\n\n\n\nObject.defineProperty(exports, 'Endian', {\n\tenumerable: true,\n\tget: function () { return common.Endian; }\n});\nexports.NumberOutOfRangeError = errors.NumberOutOfRangeError;\nexports.f32 = f32.f32;\nexports.f64 = f64.f64;\nexports.i8 = i8.i8;\nexports.i16 = i16.i16;\nexports.i32 = i32.i32;\nexports.i64 = i64.i64;\nexports.i128 = i128.i128;\nexports.u8 = u8.u8;\nexports.u16 = u16.u16;\nexports.u32 = u32.u32;\nexports.u64 = u64.u64;\nexports.u128 = u128.u128;\nexports.shortU16 = shortU16.shortU16;\n//# sourceMappingURL=index.cjs.map\n","/** @category Errors */\nexport class InvalidNumberOfItemsError extends Error {\n  readonly name = 'InvalidNumberOfItemsError';\n\n  constructor(\n    serializer: string,\n    expected: number | bigint,\n    actual: number | bigint\n  ) {\n    super(`Expected [${serializer}] to have ${expected} items, got ${actual}.`);\n  }\n}\n\n/** @category Errors */\nexport class InvalidArrayLikeRemainderSizeError extends Error {\n  readonly name = 'InvalidArrayLikeRemainderSizeError';\n\n  constructor(remainderSize: number | bigint, itemSize: number | bigint) {\n    super(\n      `The remainder of the buffer (${remainderSize} bytes) cannot be split into chunks of ${itemSize} bytes. ` +\n        `Serializers of \"remainder\" size must have a remainder that is a multiple of its item size. ` +\n        `In other words, ${remainderSize} modulo ${itemSize} should be equal to zero.`\n    );\n  }\n}\n\n/** @category Errors */\nexport class UnrecognizedArrayLikeSerializerSizeError extends Error {\n  readonly name = 'UnrecognizedArrayLikeSerializerSizeError';\n\n  constructor(size: never) {\n    super(`Unrecognized array-like serializer size: ${JSON.stringify(size)}`);\n  }\n}\n\n/** @category Errors */\nexport class InvalidDataEnumVariantError extends Error {\n  readonly name = 'InvalidDataEnumVariantError';\n\n  constructor(invalidVariant: string, validVariants: string[]) {\n    super(\n      `Invalid data enum variant. ` +\n        `Expected one of [${validVariants.join(', ')}], ` +\n        `got \"${invalidVariant}\".`\n    );\n  }\n}\n\n/** @category Errors */\nexport class InvalidScalarEnumVariantError extends Error {\n  readonly name = 'InvalidScalarEnumVariantError';\n\n  constructor(\n    invalidVariant: string | number | bigint,\n    validVariants: string[],\n    min: number | bigint,\n    max: number | bigint\n  ) {\n    super(\n      `Invalid scalar enum variant. ` +\n        `Expected one of [${validVariants.join(', ')}] ` +\n        `or a number between ${min} and ${max}, ` +\n        `got \"${invalidVariant}\".`\n    );\n  }\n}\n\n/** @category Errors */\nexport class EnumDiscriminatorOutOfRangeError extends RangeError {\n  readonly name = 'EnumDiscriminatorOutOfRangeError';\n\n  constructor(\n    discriminator: number | bigint,\n    min: number | bigint,\n    max: number | bigint\n  ) {\n    super(\n      `Enum discriminator out of range. ` +\n        `Expected a number between ${min} and ${max}, got ${discriminator}.`\n    );\n  }\n}\n","export function sumSerializerSizes(sizes: (number | null)[]): number | null {\n  return sizes.reduce(\n    (all, size) => (all === null || size === null ? null : all + size),\n    0 as number | null\n  );\n}\n","import type { NumberSerializer } from '@metaplex-foundation/umi-serializers-numbers';\nimport { ArrayLikeSerializerSize } from './arrayLikeSerializerSize';\nimport { UnrecognizedArrayLikeSerializerSizeError } from './errors';\nimport { sumSerializerSizes } from './sumSerializerSizes';\n\nexport function getResolvedSize(\n  size: number | NumberSerializer,\n  bytes: Uint8Array,\n  offset: number\n): [number | bigint, number] {\n  if (typeof size === 'number') {\n    return [size, offset];\n  }\n\n  if (typeof size === 'object') {\n    return size.deserialize(bytes, offset);\n  }\n\n  throw new UnrecognizedArrayLikeSerializerSizeError(size);\n}\n\nexport function getSizeDescription(\n  size: ArrayLikeSerializerSize | string\n): string {\n  return typeof size === 'object' ? size.description : `${size}`;\n}\n\nexport function getSizeFromChildren(\n  size: ArrayLikeSerializerSize,\n  childrenSizes: (number | null)[]\n): number | null {\n  if (typeof size !== 'number') return null;\n  if (size === 0) return 0;\n  const childrenSize = sumSerializerSizes(childrenSizes);\n  return childrenSize === null ? null : childrenSize * size;\n}\n\nexport function getSizePrefix(\n  size: ArrayLikeSerializerSize,\n  realSize: number\n): Uint8Array {\n  return typeof size === 'object' ? size.serialize(realSize) : new Uint8Array();\n}\n","import {\n  BaseSerializerOptions,\n  Serializer,\n  mergeBytes,\n} from '@metaplex-foundation/umi-serializers-core';\nimport { u32 } from '@metaplex-foundation/umi-serializers-numbers';\nimport { ArrayLikeSerializerSize } from './arrayLikeSerializerSize';\nimport { InvalidNumberOfItemsError } from './errors';\nimport {\n  getResolvedSize,\n  getSizeDescription,\n  getSizeFromChildren,\n  getSizePrefix,\n} from './utils';\n\n/**\n * Defines the options for array serializers.\n * @category Serializers\n */\nexport type ArraySerializerOptions = BaseSerializerOptions & {\n  /**\n   * The size of the array.\n   * @defaultValue `u32()`\n   */\n  size?: ArrayLikeSerializerSize;\n};\n\n/**\n * Creates a serializer for an array of items.\n *\n * @param item - The serializer to use for the array's items.\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nexport function array<T, U extends T = T>(\n  item: Serializer<T, U>,\n  options: ArraySerializerOptions = {}\n): Serializer<T[], U[]> {\n  const size = options.size ?? u32();\n  return {\n    description:\n      options.description ??\n      `array(${item.description}; ${getSizeDescription(size)})`,\n    fixedSize: getSizeFromChildren(size, [item.fixedSize]),\n    maxSize: getSizeFromChildren(size, [item.maxSize]),\n    serialize: (value: T[]) => {\n      if (typeof size === 'number' && value.length !== size) {\n        throw new InvalidNumberOfItemsError('array', size, value.length);\n      }\n      return mergeBytes([\n        getSizePrefix(size, value.length),\n        ...value.map((v) => item.serialize(v)),\n      ]);\n    },\n    deserialize: (bytes: Uint8Array, offset = 0) => {\n      const values: U[] = [];\n      if (typeof size === 'object' && bytes.slice(offset).length === 0) {\n        return [values, offset];\n      }\n      if (size === 'remainder') {\n        while (offset < bytes.length) {\n          const [value, newOffset] = item.deserialize(bytes, offset);\n          values.push(value);\n          offset = newOffset;\n        }\n        return [values, offset];\n      }\n      const [resolvedSize, newOffset] = getResolvedSize(size, bytes, offset);\n      offset = newOffset;\n      for (let i = 0; i < resolvedSize; i += 1) {\n        const [value, newOffset] = item.deserialize(bytes, offset);\n        values.push(value);\n        offset = newOffset;\n      }\n      return [values, offset];\n    },\n  };\n}\n","/* eslint-disable no-bitwise */\nimport {\n  BaseSerializerOptions,\n  NotEnoughBytesError,\n  Serializer,\n} from '@metaplex-foundation/umi-serializers-core';\n\n/**\n * Defines the options for bitArray serializers.\n * @category Serializers\n */\nexport type BitArraySerializerOptions = BaseSerializerOptions & {\n  /**\n   * Whether to read the bits in reverse order.\n   * @defaultValue `false`\n   */\n  backward?: boolean;\n};\n\n/**\n * An array of boolean serializer that\n * converts booleans to bits and vice versa.\n *\n * @param size - The amount of bytes to use for the bit array.\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nexport const bitArray = (\n  size: number,\n  options: BitArraySerializerOptions | boolean = {}\n): Serializer<boolean[]> => {\n  const parsedOptions: BitArraySerializerOptions =\n    typeof options === 'boolean' ? { backward: options } : options;\n  const backward = parsedOptions.backward ?? false;\n  const backwardSuffix = backward ? '; backward' : '';\n  return {\n    description:\n      parsedOptions.description ?? `bitArray(${size}${backwardSuffix})`,\n    fixedSize: size,\n    maxSize: size,\n    serialize(value: boolean[]) {\n      const bytes: number[] = [];\n\n      for (let i = 0; i < size; i += 1) {\n        let byte = 0;\n        for (let j = 0; j < 8; j += 1) {\n          const feature = Number(value[i * 8 + j] ?? 0);\n          byte |= feature << (backward ? j : 7 - j);\n        }\n        if (backward) {\n          bytes.unshift(byte);\n        } else {\n          bytes.push(byte);\n        }\n      }\n\n      return new Uint8Array(bytes);\n    },\n    deserialize(bytes, offset = 0) {\n      const booleans: boolean[] = [];\n      let slice = bytes.slice(offset, offset + size);\n      slice = backward ? slice.reverse() : slice;\n      if (slice.length !== size) {\n        throw new NotEnoughBytesError('bitArray', size, slice.length);\n      }\n\n      slice.forEach((byte) => {\n        for (let i = 0; i < 8; i += 1) {\n          if (backward) {\n            booleans.push(Boolean(byte & 1));\n            byte >>= 1;\n          } else {\n            booleans.push(Boolean(byte & 0b1000_0000));\n            byte <<= 1;\n          }\n        }\n      });\n\n      return [booleans, offset + size];\n    },\n  };\n};\n","import {\n  BaseSerializerOptions,\n  DeserializingEmptyBufferError,\n  ExpectedFixedSizeSerializerError,\n  Serializer,\n} from '@metaplex-foundation/umi-serializers-core';\nimport {\n  NumberSerializer,\n  u8,\n} from '@metaplex-foundation/umi-serializers-numbers';\n\n/**\n * Defines the options for boolean serializers.\n * @category Serializers\n */\nexport type BoolSerializerOptions = BaseSerializerOptions & {\n  /**\n   * The number serializer to delegate to.\n   * @defaultValue `u8()`\n   */\n  size?: NumberSerializer;\n};\n\n/**\n * Creates a boolean serializer.\n *\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nexport function bool(options: BoolSerializerOptions = {}): Serializer<boolean> {\n  const size = options.size ?? u8();\n  if (size.fixedSize === null) {\n    throw new ExpectedFixedSizeSerializerError(\n      'Serializer [bool] requires a fixed size.'\n    );\n  }\n  return {\n    description: options.description ?? `bool(${size.description})`,\n    fixedSize: size.fixedSize,\n    maxSize: size.fixedSize,\n    serialize: (value: boolean) => size.serialize(value ? 1 : 0),\n    deserialize: (bytes: Uint8Array, offset = 0) => {\n      if (bytes.slice(offset).length === 0) {\n        throw new DeserializingEmptyBufferError('bool');\n      }\n      const [value, vOffset] = size.deserialize(bytes, offset);\n      return [value === 1, vOffset];\n    },\n  };\n}\n","import {\n  BaseSerializerOptions,\n  DeserializingEmptyBufferError,\n  NotEnoughBytesError,\n  Serializer,\n  fixSerializer,\n  mergeBytes,\n} from '@metaplex-foundation/umi-serializers-core';\nimport { NumberSerializer } from '@metaplex-foundation/umi-serializers-numbers';\nimport { getSizeDescription } from './utils';\n\n/**\n * Defines the options for bytes serializers.\n * @category Serializers\n */\nexport type BytesSerializerOptions = BaseSerializerOptions & {\n  /**\n   * The size of the buffer. It can be one of the following:\n   * - a {@link NumberSerializer} that prefixes the buffer with its size.\n   * - a fixed number of bytes.\n   * - or `'variable'` to use the rest of the buffer.\n   * @defaultValue `'variable'`\n   */\n  size?: NumberSerializer | number | 'variable';\n};\n\n/**\n * Creates a serializer that passes the buffer as-is.\n *\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nexport function bytes(\n  options: BytesSerializerOptions = {}\n): Serializer<Uint8Array> {\n  const size = options.size ?? 'variable';\n  const description =\n    options.description ?? `bytes(${getSizeDescription(size)})`;\n\n  const byteSerializer: Serializer<Uint8Array> = {\n    description,\n    fixedSize: null,\n    maxSize: null,\n    serialize: (value: Uint8Array) => new Uint8Array(value),\n    deserialize: (bytes: Uint8Array, offset = 0) => {\n      const slice = bytes.slice(offset);\n      return [slice, offset + slice.length];\n    },\n  };\n\n  if (size === 'variable') {\n    return byteSerializer;\n  }\n\n  if (typeof size === 'number') {\n    return fixSerializer(byteSerializer, size, description);\n  }\n\n  return {\n    description,\n    fixedSize: null,\n    maxSize: null,\n    serialize: (value: Uint8Array) => {\n      const contentBytes = byteSerializer.serialize(value);\n      const lengthBytes = size.serialize(contentBytes.length);\n      return mergeBytes([lengthBytes, contentBytes]);\n    },\n    deserialize: (buffer: Uint8Array, offset = 0) => {\n      if (buffer.slice(offset).length === 0) {\n        throw new DeserializingEmptyBufferError('bytes');\n      }\n      const [lengthBigInt, lengthOffset] = size.deserialize(buffer, offset);\n      const length = Number(lengthBigInt);\n      offset = lengthOffset;\n      const contentBuffer = buffer.slice(offset, offset + length);\n      if (contentBuffer.length < length) {\n        throw new NotEnoughBytesError('bytes', length, contentBuffer.length);\n      }\n      const [value, contentOffset] = byteSerializer.deserialize(contentBuffer);\n      offset += contentOffset;\n      return [value, offset];\n    },\n  };\n}\n","export function maxSerializerSizes(sizes: (number | null)[]): number | null {\n  return sizes.reduce(\n    (all, size) => (all === null || size === null ? null : Math.max(all, size)),\n    0 as number | null\n  );\n}\n","import {\n  BaseSerializerOptions,\n  DeserializingEmptyBufferError,\n  Serializer,\n  mergeBytes,\n} from '@metaplex-foundation/umi-serializers-core';\nimport {\n  NumberSerializer,\n  u8,\n} from '@metaplex-foundation/umi-serializers-numbers';\nimport {\n  EnumDiscriminatorOutOfRangeError,\n  InvalidDataEnumVariantError,\n} from './errors';\nimport { maxSerializerSizes } from './maxSerializerSizes';\nimport { sumSerializerSizes } from './sumSerializerSizes';\n\n/**\n * Defines a data enum using discriminated union types.\n *\n * @example\n * ```ts\n * type WebPageEvent =\n *   | { __kind: 'pageview', url: string }\n *   | { __kind: 'click', x: number, y: number };\n * ```\n *\n * @category Serializers\n */\nexport type DataEnum = { __kind: string };\n\n/**\n * Extracts a variant from a data enum.\n *\n * @example\n * ```ts\n * type WebPageEvent =\n *   | { __kind: 'pageview', url: string }\n *   | { __kind: 'click', x: number, y: number };\n * type ClickEvent = GetDataEnumKind<WebPageEvent, 'click'>;\n * // -> { __kind: 'click', x: number, y: number }\n * ```\n *\n * @category Serializers\n */\nexport type GetDataEnumKind<\n  T extends DataEnum,\n  K extends T['__kind']\n> = Extract<T, { __kind: K }>;\n\n/**\n * Extracts a variant from a data enum without its discriminator.\n *\n * @example\n * ```ts\n * type WebPageEvent =\n *   | { __kind: 'pageview', url: string }\n *   | { __kind: 'click', x: number, y: number };\n * type ClickEvent = GetDataEnumKindContent<WebPageEvent, 'click'>;\n * // -> { x: number, y: number }\n * ```\n *\n * @category Serializers\n */\nexport type GetDataEnumKindContent<\n  T extends DataEnum,\n  K extends T['__kind']\n> = Omit<Extract<T, { __kind: K }>, '__kind'>;\n\n/**\n * Get the name and serializer of each variant in a data enum.\n * @category Serializers\n */\nexport type DataEnumToSerializerTuple<T extends DataEnum, U extends T> = Array<\n  T extends any\n    ? [\n        T['__kind'],\n        keyof Omit<T, '__kind'> extends never\n          ? Serializer<Omit<T, '__kind'>, Omit<U, '__kind'>> | Serializer<void>\n          : Serializer<Omit<T, '__kind'>, Omit<U, '__kind'>>\n      ]\n    : never\n>;\n\n/**\n * Defines the options for data enum serializers.\n * @category Serializers\n */\nexport type DataEnumSerializerOptions = BaseSerializerOptions & {\n  /**\n   * The serializer to use for the enum discriminator prefixing the variant.\n   * @defaultValue `u8()`\n   */\n  size?: NumberSerializer;\n};\n\n/**\n * Creates a data enum serializer.\n *\n * @param variants - The variant serializers of the data enum.\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nexport function dataEnum<T extends DataEnum, U extends T = T>(\n  variants: DataEnumToSerializerTuple<T, U>,\n  options: DataEnumSerializerOptions = {}\n): Serializer<T, U> {\n  const prefix = options.size ?? u8();\n  const fieldDescriptions = variants\n    .map(\n      ([name, serializer]) =>\n        `${String(name)}${serializer ? `: ${serializer.description}` : ''}`\n    )\n    .join(', ');\n  const allVariantHaveTheSameFixedSize = variants.every(\n    (one, i, all) => one[1].fixedSize === all[0][1].fixedSize\n  );\n  const fixedVariantSize = allVariantHaveTheSameFixedSize\n    ? variants[0][1].fixedSize\n    : null;\n  const maxVariantSize = maxSerializerSizes(\n    variants.map(([, field]) => field.maxSize)\n  );\n  return {\n    description:\n      options.description ??\n      `dataEnum(${fieldDescriptions}; ${prefix.description})`,\n    fixedSize:\n      variants.length === 0\n        ? prefix.fixedSize\n        : sumSerializerSizes([prefix.fixedSize, fixedVariantSize]),\n    maxSize:\n      variants.length === 0\n        ? prefix.maxSize\n        : sumSerializerSizes([prefix.maxSize, maxVariantSize]),\n    serialize: (variant: T) => {\n      const discriminator = variants.findIndex(\n        ([key]) => variant.__kind === key\n      );\n      if (discriminator < 0) {\n        throw new InvalidDataEnumVariantError(\n          variant.__kind,\n          variants.map(([key]) => key)\n        );\n      }\n      const variantPrefix = prefix.serialize(discriminator);\n      const variantSerializer = variants[discriminator][1];\n      const variantBytes = variantSerializer.serialize(variant as any);\n      return mergeBytes([variantPrefix, variantBytes]);\n    },\n    deserialize: (bytes: Uint8Array, offset = 0) => {\n      if (bytes.slice(offset).length === 0) {\n        throw new DeserializingEmptyBufferError('dataEnum');\n      }\n      const [discriminator, dOffset] = prefix.deserialize(bytes, offset);\n      offset = dOffset;\n      const variantField = variants[Number(discriminator)] ?? null;\n      if (!variantField) {\n        throw new EnumDiscriminatorOutOfRangeError(\n          discriminator,\n          0,\n          variants.length - 1\n        );\n      }\n      const [variant, vOffset] = variantField[1].deserialize(bytes, offset);\n      offset = vOffset;\n      return [{ __kind: variantField[0], ...(variant ?? {}) } as U, offset];\n    },\n  };\n}\n","import {\n  BaseSerializerOptions,\n  mergeBytes,\n  Serializer,\n} from '@metaplex-foundation/umi-serializers-core';\nimport { u32 } from '@metaplex-foundation/umi-serializers-numbers';\nimport { ArrayLikeSerializerSize } from './arrayLikeSerializerSize';\nimport { InvalidNumberOfItemsError } from './errors';\nimport {\n  getResolvedSize,\n  getSizeDescription,\n  getSizeFromChildren,\n  getSizePrefix,\n} from './utils';\n\n/**\n * Defines the options for `Map` serializers.\n * @category Serializers\n */\nexport type MapSerializerOptions = BaseSerializerOptions & {\n  /**\n   * The size of the map.\n   * @defaultValue `u32()`\n   */\n  size?: ArrayLikeSerializerSize;\n};\n\n/**\n * Creates a serializer for a map.\n *\n * @param key - The serializer to use for the map's keys.\n * @param value - The serializer to use for the map's values.\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nexport function map<TK, TV, UK extends TK = TK, UV extends TV = TV>(\n  key: Serializer<TK, UK>,\n  value: Serializer<TV, UV>,\n  options: MapSerializerOptions = {}\n): Serializer<Map<TK, TV>, Map<UK, UV>> {\n  const size = options.size ?? u32();\n  return {\n    description:\n      options.description ??\n      `map(${key.description}, ${value.description}; ${getSizeDescription(\n        size\n      )})`,\n    fixedSize: getSizeFromChildren(size, [key.fixedSize, value.fixedSize]),\n    maxSize: getSizeFromChildren(size, [key.maxSize, value.maxSize]),\n    serialize: (map: Map<TK, TV>) => {\n      if (typeof size === 'number' && map.size !== size) {\n        throw new InvalidNumberOfItemsError('map', size, map.size);\n      }\n      const itemBytes = Array.from(map, ([k, v]) =>\n        mergeBytes([key.serialize(k), value.serialize(v)])\n      );\n      return mergeBytes([getSizePrefix(size, map.size), ...itemBytes]);\n    },\n    deserialize: (bytes: Uint8Array, offset = 0) => {\n      const map: Map<UK, UV> = new Map();\n      if (typeof size === 'object' && bytes.slice(offset).length === 0) {\n        return [map, offset];\n      }\n      if (size === 'remainder') {\n        while (offset < bytes.length) {\n          const [deserializedKey, kOffset] = key.deserialize(bytes, offset);\n          offset = kOffset;\n          const [deserializedValue, vOffset] = value.deserialize(bytes, offset);\n          offset = vOffset;\n          map.set(deserializedKey, deserializedValue);\n        }\n        return [map, offset];\n      }\n      const [resolvedSize, newOffset] = getResolvedSize(size, bytes, offset);\n      offset = newOffset;\n      for (let i = 0; i < resolvedSize; i += 1) {\n        const [deserializedKey, kOffset] = key.deserialize(bytes, offset);\n        offset = kOffset;\n        const [deserializedValue, vOffset] = value.deserialize(bytes, offset);\n        offset = vOffset;\n        map.set(deserializedKey, deserializedValue);\n      }\n      return [map, offset];\n    },\n  };\n}\n","import { Nullable } from '@metaplex-foundation/umi-options';\nimport {\n  BaseSerializerOptions,\n  ExpectedFixedSizeSerializerError,\n  Serializer,\n  mergeBytes,\n} from '@metaplex-foundation/umi-serializers-core';\nimport {\n  NumberSerializer,\n  u8,\n} from '@metaplex-foundation/umi-serializers-numbers';\nimport { sumSerializerSizes } from './sumSerializerSizes';\nimport { getSizeDescription } from './utils';\n\n/**\n * Defines the options for `Nullable` serializers.\n * @category Serializers\n */\nexport type NullableSerializerOptions = BaseSerializerOptions & {\n  /**\n   * The serializer to use for the boolean prefix.\n   * @defaultValue `u8()`\n   */\n  prefix?: NumberSerializer;\n  /**\n   * Whether the item serializer should be of fixed size.\n   *\n   * When this is true, a `null` value will skip the bytes that would\n   * have been used for the item. Note that this will only work if the\n   * item serializer is of fixed size.\n   * @defaultValue `false`\n   */\n  fixed?: boolean;\n};\n\n/**\n * Creates a serializer for an optional value using `null` as the `None` value.\n *\n * @param item - The serializer to use for the value that may be present.\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nexport function nullable<T, U extends T = T>(\n  item: Serializer<T, U>,\n  options: NullableSerializerOptions = {}\n): Serializer<Nullable<T>, Nullable<U>> {\n  const prefix = options.prefix ?? u8();\n  const fixed = options.fixed ?? false;\n  let descriptionSuffix = `; ${getSizeDescription(prefix)}`;\n  let fixedSize = item.fixedSize === 0 ? prefix.fixedSize : null;\n  if (fixed) {\n    if (item.fixedSize === null || prefix.fixedSize === null) {\n      throw new ExpectedFixedSizeSerializerError(\n        'Fixed nullables can only be used with fixed-size serializers'\n      );\n    }\n    descriptionSuffix += '; fixed';\n    fixedSize = prefix.fixedSize + item.fixedSize;\n  }\n  return {\n    description:\n      options.description ??\n      `nullable(${item.description + descriptionSuffix})`,\n    fixedSize,\n    maxSize: sumSerializerSizes([prefix.maxSize, item.maxSize]),\n    serialize: (option: Nullable<T>) => {\n      const prefixByte = prefix.serialize(Number(option !== null));\n      if (fixed) {\n        const itemFixedSize = item.fixedSize as number;\n        const itemBytes =\n          option !== null\n            ? item.serialize(option).slice(0, itemFixedSize)\n            : new Uint8Array(itemFixedSize).fill(0);\n        return mergeBytes([prefixByte, itemBytes]);\n      }\n      const itemBytes =\n        option !== null ? item.serialize(option) : new Uint8Array();\n      return mergeBytes([prefixByte, itemBytes]);\n    },\n    deserialize: (bytes: Uint8Array, offset = 0) => {\n      if (bytes.slice(offset).length === 0) {\n        return [null, offset];\n      }\n      const fixedOffset =\n        offset + (prefix.fixedSize ?? 0) + (item.fixedSize ?? 0);\n      const [isSome, prefixOffset] = prefix.deserialize(bytes, offset);\n      offset = prefixOffset;\n      if (isSome === 0) {\n        return [null, fixed ? fixedOffset : offset];\n      }\n      const [value, newOffset] = item.deserialize(bytes, offset);\n      offset = newOffset;\n      return [value, fixed ? fixedOffset : offset];\n    },\n  };\n}\n","import {\n  Option,\n  OptionOrNullable,\n  isOption,\n  isSome,\n  none,\n  some,\n  wrapNullable,\n} from '@metaplex-foundation/umi-options';\nimport {\n  BaseSerializerOptions,\n  ExpectedFixedSizeSerializerError,\n  Serializer,\n  mergeBytes,\n} from '@metaplex-foundation/umi-serializers-core';\nimport {\n  NumberSerializer,\n  u8,\n} from '@metaplex-foundation/umi-serializers-numbers';\nimport { sumSerializerSizes } from './sumSerializerSizes';\nimport { getSizeDescription } from './utils';\n\n/**\n * Defines the options for `Option` serializers.\n * @category Serializers\n */\nexport type OptionSerializerOptions = BaseSerializerOptions & {\n  /**\n   * The serializer to use for the boolean prefix.\n   * @defaultValue `u8()`\n   */\n  prefix?: NumberSerializer;\n  /**\n   * Whether the item serializer should be of fixed size.\n   *\n   * When this is true, a `None` value will skip the bytes that would\n   * have been used for the item. Note that this will only work if the\n   * item serializer is of fixed size.\n   * @defaultValue `false`\n   */\n  fixed?: boolean;\n};\n\n/**\n * Creates a serializer for an optional value using the {@link Option} type.\n *\n * @param item - The serializer to use for the value that may be present.\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nexport function option<T, U extends T = T>(\n  item: Serializer<T, U>,\n  options: OptionSerializerOptions = {}\n): Serializer<OptionOrNullable<T>, Option<U>> {\n  const prefix = options.prefix ?? u8();\n  const fixed = options.fixed ?? false;\n  let descriptionSuffix = `; ${getSizeDescription(prefix)}`;\n  let fixedSize = item.fixedSize === 0 ? prefix.fixedSize : null;\n  if (fixed) {\n    if (item.fixedSize === null || prefix.fixedSize === null) {\n      throw new ExpectedFixedSizeSerializerError(\n        'Fixed options can only be used with fixed-size serializers'\n      );\n    }\n    descriptionSuffix += '; fixed';\n    fixedSize = prefix.fixedSize + item.fixedSize;\n  }\n  return {\n    description:\n      options.description ?? `option(${item.description + descriptionSuffix})`,\n    fixedSize,\n    maxSize: sumSerializerSizes([prefix.maxSize, item.maxSize]),\n    serialize: (optionOrNullable: OptionOrNullable<T>) => {\n      const option = isOption<T>(optionOrNullable)\n        ? optionOrNullable\n        : wrapNullable(optionOrNullable);\n\n      const prefixByte = prefix.serialize(Number(isSome(option)));\n      if (fixed) {\n        const itemFixedSize = item.fixedSize as number;\n        const itemBytes = isSome(option)\n          ? item.serialize(option.value).slice(0, itemFixedSize)\n          : new Uint8Array(itemFixedSize).fill(0);\n        return mergeBytes([prefixByte, itemBytes]);\n      }\n      const itemBytes = isSome(option)\n        ? item.serialize(option.value)\n        : new Uint8Array();\n      return mergeBytes([prefixByte, itemBytes]);\n    },\n    deserialize: (bytes: Uint8Array, offset = 0) => {\n      if (bytes.slice(offset).length === 0) {\n        return [none(), offset];\n      }\n      const fixedOffset =\n        offset + (prefix.fixedSize ?? 0) + (item.fixedSize ?? 0);\n      const [isSome, prefixOffset] = prefix.deserialize(bytes, offset);\n      offset = prefixOffset;\n      if (isSome === 0) {\n        return [none(), fixed ? fixedOffset : offset];\n      }\n      const [value, newOffset] = item.deserialize(bytes, offset);\n      offset = newOffset;\n      return [some(value), fixed ? fixedOffset : offset];\n    },\n  };\n}\n","import {\n  PUBLIC_KEY_LENGTH,\n  PublicKey,\n  PublicKeyInput,\n  publicKeyBytes,\n  publicKey as toPublicKey,\n} from '@metaplex-foundation/umi-public-keys';\nimport {\n  BaseSerializerOptions,\n  DeserializingEmptyBufferError,\n  NotEnoughBytesError,\n  Serializer,\n} from '@metaplex-foundation/umi-serializers-core';\n\n/**\n * Defines the options for `PublicKey` serializers.\n * @category Serializers\n */\nexport type PublicKeySerializerOptions = BaseSerializerOptions;\n\n/**\n * Creates a serializer for base58 encoded public keys.\n *\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nexport function publicKey(\n  options: PublicKeySerializerOptions = {}\n): Serializer<PublicKeyInput, PublicKey> {\n  return {\n    description: options.description ?? 'publicKey',\n    fixedSize: 32,\n    maxSize: 32,\n    serialize: (value: PublicKeyInput) => publicKeyBytes(toPublicKey(value)),\n    deserialize: (bytes: Uint8Array, offset = 0) => {\n      const pubkeyBytes = bytes.slice(offset, offset + 32);\n      if (pubkeyBytes.length === 0) {\n        throw new DeserializingEmptyBufferError('publicKey');\n      }\n      if (pubkeyBytes.length < PUBLIC_KEY_LENGTH) {\n        throw new NotEnoughBytesError(\n          'publicKey',\n          PUBLIC_KEY_LENGTH,\n          pubkeyBytes.length\n        );\n      }\n      return [toPublicKey(pubkeyBytes), offset + 32];\n    },\n  };\n}\n","import {\n  BaseSerializerOptions,\n  DeserializingEmptyBufferError,\n  Serializer,\n} from '@metaplex-foundation/umi-serializers-core';\nimport {\n  NumberSerializer,\n  u8,\n} from '@metaplex-foundation/umi-serializers-numbers';\nimport {\n  EnumDiscriminatorOutOfRangeError,\n  InvalidScalarEnumVariantError,\n} from './errors';\n\n/**\n * Defines a scalar enum as a type from its constructor.\n *\n * @example\n * ```ts\n * enum Direction { Left, Right };\n * type DirectionType = ScalarEnum<Direction>;\n * ```\n *\n * @category Serializers\n */\nexport type ScalarEnum<T> =\n  | { [key: number | string]: string | number | T }\n  | number\n  | T;\n\n/**\n * Defines the options for scalar enum serializers.\n * @category Serializers\n */\nexport type ScalarEnumSerializerOptions = BaseSerializerOptions & {\n  /**\n   * The serializer to use for the enum discriminator.\n   * @defaultValue `u8()`\n   */\n  size?: NumberSerializer;\n};\n\n/**\n * Creates a scalar enum serializer.\n *\n * @param constructor - The constructor of the scalar enum.\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nexport function scalarEnum<T>(\n  constructor: ScalarEnum<T> & {},\n  options: ScalarEnumSerializerOptions = {}\n): Serializer<T> {\n  const prefix = options.size ?? u8();\n  const enumKeys = Object.keys(constructor);\n  const enumValues = Object.values(constructor);\n  const isNumericEnum = enumValues.some((v) => typeof v === 'number');\n  const valueDescriptions = enumValues\n    .filter((v) => typeof v === 'string')\n    .join(', ');\n  const minRange = 0;\n  const maxRange = isNumericEnum\n    ? enumValues.length / 2 - 1\n    : enumValues.length - 1;\n  const stringValues: string[] = isNumericEnum\n    ? [...enumKeys]\n    : [...new Set([...enumKeys, ...enumValues])];\n  function assertValidVariant(variant: number | string): void {\n    const isInvalidNumber =\n      typeof variant === 'number' && (variant < minRange || variant > maxRange);\n    const isInvalidString =\n      typeof variant === 'string' && !stringValues.includes(variant);\n    if (isInvalidNumber || isInvalidString) {\n      throw new InvalidScalarEnumVariantError(\n        variant,\n        stringValues,\n        minRange,\n        maxRange\n      );\n    }\n  }\n  return {\n    description:\n      options.description ??\n      `enum(${valueDescriptions}; ${prefix.description})`,\n    fixedSize: prefix.fixedSize,\n    maxSize: prefix.maxSize,\n    serialize: (value: T) => {\n      assertValidVariant(value as string | number);\n      if (typeof value === 'number') return prefix.serialize(value);\n      const valueIndex = enumValues.indexOf(value);\n      if (valueIndex >= 0) return prefix.serialize(valueIndex);\n      return prefix.serialize(enumKeys.indexOf(value as string));\n    },\n    deserialize: (bytes: Uint8Array, offset = 0) => {\n      if (bytes.slice(offset).length === 0) {\n        throw new DeserializingEmptyBufferError('enum');\n      }\n      const [value, newOffset] = prefix.deserialize(bytes, offset);\n      const valueAsNumber = Number(value);\n      offset = newOffset;\n      if (valueAsNumber < minRange || valueAsNumber > maxRange) {\n        throw new EnumDiscriminatorOutOfRangeError(\n          valueAsNumber,\n          minRange,\n          maxRange\n        );\n      }\n      return [\n        (isNumericEnum ? valueAsNumber : enumValues[valueAsNumber]) as T,\n        offset,\n      ];\n    },\n  };\n}\n","import {\n  BaseSerializerOptions,\n  mergeBytes,\n  Serializer,\n} from '@metaplex-foundation/umi-serializers-core';\nimport { u32 } from '@metaplex-foundation/umi-serializers-numbers';\nimport { ArrayLikeSerializerSize } from './arrayLikeSerializerSize';\nimport { InvalidNumberOfItemsError } from './errors';\nimport {\n  getResolvedSize,\n  getSizeDescription,\n  getSizeFromChildren,\n  getSizePrefix,\n} from './utils';\n\n/**\n * Defines the options for `Set` serializers.\n * @category Serializers\n */\nexport type SetSerializerOptions = BaseSerializerOptions & {\n  /**\n   * The size of the set.\n   * @defaultValue `u32()`\n   */\n  size?: ArrayLikeSerializerSize;\n};\n\n/**\n * Creates a serializer for a set.\n *\n * @param item - The serializer to use for the set's items.\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nexport function set<T, U extends T = T>(\n  item: Serializer<T, U>,\n  options: SetSerializerOptions = {}\n): Serializer<Set<T>, Set<U>> {\n  const size = options.size ?? u32();\n  return {\n    description:\n      options.description ??\n      `set(${item.description}; ${getSizeDescription(size)})`,\n    fixedSize: getSizeFromChildren(size, [item.fixedSize]),\n    maxSize: getSizeFromChildren(size, [item.maxSize]),\n    serialize: (set: Set<T>) => {\n      if (typeof size === 'number' && set.size !== size) {\n        throw new InvalidNumberOfItemsError('set', size, set.size);\n      }\n      const itemBytes = Array.from(set, (value) => item.serialize(value));\n      return mergeBytes([getSizePrefix(size, set.size), ...itemBytes]);\n    },\n    deserialize: (bytes: Uint8Array, offset = 0) => {\n      const set: Set<U> = new Set();\n      if (typeof size === 'object' && bytes.slice(offset).length === 0) {\n        return [set, offset];\n      }\n      if (size === 'remainder') {\n        while (offset < bytes.length) {\n          const [value, newOffset] = item.deserialize(bytes, offset);\n          set.add(value);\n          offset = newOffset;\n        }\n        return [set, offset];\n      }\n      const [resolvedSize, newOffset] = getResolvedSize(size, bytes, offset);\n      offset = newOffset;\n      for (let i = 0; i < resolvedSize; i += 1) {\n        const [value, newOffset] = item.deserialize(bytes, offset);\n        set.add(value);\n        offset = newOffset;\n      }\n      return [set, offset];\n    },\n  };\n}\n","import {\n  BaseSerializerOptions,\n  DeserializingEmptyBufferError,\n  NotEnoughBytesError,\n  Serializer,\n  fixSerializer,\n  mergeBytes,\n} from '@metaplex-foundation/umi-serializers-core';\nimport { utf8 } from '@metaplex-foundation/umi-serializers-encodings';\nimport {\n  NumberSerializer,\n  u32,\n} from '@metaplex-foundation/umi-serializers-numbers';\nimport { getSizeDescription } from './utils';\n\n/**\n * Defines the options for string serializers.\n * @category Serializers\n */\nexport type StringSerializerOptions = BaseSerializerOptions & {\n  /**\n   * The size of the string. It can be one of the following:\n   * - a {@link NumberSerializer} that prefixes the string with its size.\n   * - a fixed number of bytes.\n   * - or `'variable'` to use the rest of the buffer.\n   * @defaultValue `u32()`\n   */\n  size?: NumberSerializer | number | 'variable';\n  /**\n   * The string serializer to use for encoding and decoding the content.\n   * @defaultValue `utf8`\n   */\n  encoding?: Serializer<string>;\n};\n\n/**\n * Creates a string serializer.\n *\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nexport function string(\n  options: StringSerializerOptions = {}\n): Serializer<string> {\n  const size = options.size ?? u32();\n  const encoding = options.encoding ?? utf8;\n  const description =\n    options.description ??\n    `string(${encoding.description}; ${getSizeDescription(size)})`;\n\n  if (size === 'variable') {\n    return { ...encoding, description };\n  }\n\n  if (typeof size === 'number') {\n    return fixSerializer(encoding, size, description);\n  }\n\n  return {\n    description,\n    fixedSize: null,\n    maxSize: null,\n    serialize: (value: string) => {\n      const contentBytes = encoding.serialize(value);\n      const lengthBytes = size.serialize(contentBytes.length);\n      return mergeBytes([lengthBytes, contentBytes]);\n    },\n    deserialize: (buffer: Uint8Array, offset = 0) => {\n      if (buffer.slice(offset).length === 0) {\n        throw new DeserializingEmptyBufferError('string');\n      }\n      const [lengthBigInt, lengthOffset] = size.deserialize(buffer, offset);\n      const length = Number(lengthBigInt);\n      offset = lengthOffset;\n      const contentBuffer = buffer.slice(offset, offset + length);\n      if (contentBuffer.length < length) {\n        throw new NotEnoughBytesError('string', length, contentBuffer.length);\n      }\n      const [value, contentOffset] = encoding.deserialize(contentBuffer);\n      offset += contentOffset;\n      return [value, offset];\n    },\n  };\n}\n","import {\n  BaseSerializerOptions,\n  Serializer,\n  mergeBytes,\n} from '@metaplex-foundation/umi-serializers-core';\nimport { sumSerializerSizes } from './sumSerializerSizes';\n\n/**\n * Get the name and serializer of each field in a struct.\n * @category Serializers\n */\nexport type StructToSerializerTuple<T extends object, U extends T> = Array<\n  {\n    [K in keyof T]: [K, Serializer<T[K], U[K]>];\n  }[keyof T]\n>;\n\n/**\n * Defines the options for struct serializers.\n * @category Serializers\n */\nexport type StructSerializerOptions = BaseSerializerOptions;\n\n/**\n * Creates a serializer for a custom object.\n *\n * @param fields - The name and serializer of each field.\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nexport function struct<T extends object, U extends T = T>(\n  fields: StructToSerializerTuple<T, U>,\n  options: StructSerializerOptions = {}\n): Serializer<T, U> {\n  const fieldDescriptions = fields\n    .map(([name, serializer]) => `${String(name)}: ${serializer.description}`)\n    .join(', ');\n  return {\n    description: options.description ?? `struct(${fieldDescriptions})`,\n    fixedSize: sumSerializerSizes(fields.map(([, field]) => field.fixedSize)),\n    maxSize: sumSerializerSizes(fields.map(([, field]) => field.maxSize)),\n    serialize: (struct: T) => {\n      const fieldBytes = fields.map(([key, serializer]) =>\n        serializer.serialize(struct[key])\n      );\n      return mergeBytes(fieldBytes);\n    },\n    deserialize: (bytes: Uint8Array, offset = 0) => {\n      const struct: Partial<U> = {};\n      fields.forEach(([key, serializer]) => {\n        const [value, newOffset] = serializer.deserialize(bytes, offset);\n        offset = newOffset;\n        struct[key] = value;\n      });\n      return [struct as U, offset];\n    },\n  };\n}\n","import {\n  WrapInSerializer,\n  Serializer,\n  mergeBytes,\n  BaseSerializerOptions,\n} from '@metaplex-foundation/umi-serializers-core';\nimport { sumSerializerSizes } from './sumSerializerSizes';\nimport { InvalidNumberOfItemsError } from './errors';\n\n/**\n * Defines the options for tuple serializers.\n * @category Serializers\n */\nexport type TupleSerializerOptions = BaseSerializerOptions;\n\n/**\n * Creates a serializer for a tuple-like array.\n *\n * @param items - The serializers to use for each item in the tuple.\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nexport function tuple<T extends any[], U extends T = T>(\n  items: WrapInSerializer<[...T], [...U]>,\n  options: TupleSerializerOptions = {}\n): Serializer<T, U> {\n  const itemDescriptions = items.map((item) => item.description).join(', ');\n  return {\n    description: options.description ?? `tuple(${itemDescriptions})`,\n    fixedSize: sumSerializerSizes(items.map((item) => item.fixedSize)),\n    maxSize: sumSerializerSizes(items.map((item) => item.maxSize)),\n    serialize: (value: T) => {\n      if (value.length !== items.length) {\n        throw new InvalidNumberOfItemsError(\n          'tuple',\n          items.length,\n          value.length\n        );\n      }\n      return mergeBytes(\n        items.map((item, index) => item.serialize(value[index]))\n      );\n    },\n    deserialize: (bytes: Uint8Array, offset = 0) => {\n      const values = [] as any as U;\n      items.forEach((serializer) => {\n        const [newValue, newOffset] = serializer.deserialize(bytes, offset);\n        values.push(newValue);\n        offset = newOffset;\n      });\n      return [values, offset];\n    },\n  };\n}\n","import {\n  BaseSerializerOptions,\n  Serializer,\n} from '@metaplex-foundation/umi-serializers-core';\n\n/**\n * Defines the options for unit serializers.\n * @category Serializers\n */\nexport type UnitSerializerOptions = BaseSerializerOptions;\n\n/**\n * Creates a void serializer.\n *\n * @param options - A set of options for the serializer.\n */\nexport function unit(options: UnitSerializerOptions = {}): Serializer<void> {\n  return {\n    description: options.description ?? 'unit',\n    fixedSize: 0,\n    maxSize: 0,\n    serialize: () => new Uint8Array(),\n    deserialize: (_bytes: Uint8Array, offset = 0) => [undefined, offset],\n  };\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar umiSerializersCore = require('@metaplex-foundation/umi-serializers-core');\nvar umiSerializersEncodings = require('@metaplex-foundation/umi-serializers-encodings');\nvar umiSerializersNumbers = require('@metaplex-foundation/umi-serializers-numbers');\nvar array = require('./array.cjs');\nvar bitArray = require('./bitArray.cjs');\nvar bool = require('./bool.cjs');\nvar bytes = require('./bytes.cjs');\nvar dataEnum = require('./dataEnum.cjs');\nvar errors = require('./errors.cjs');\nvar map = require('./map.cjs');\nvar nullable = require('./nullable.cjs');\nvar option = require('./option.cjs');\nvar publicKey = require('./publicKey.cjs');\nvar scalarEnum = require('./scalarEnum.cjs');\nvar set = require('./set.cjs');\nvar string = require('./string.cjs');\nvar struct = require('./struct.cjs');\nvar tuple = require('./tuple.cjs');\nvar unit = require('./unit.cjs');\nvar maxSerializerSizes = require('./maxSerializerSizes.cjs');\nvar sumSerializerSizes = require('./sumSerializerSizes.cjs');\n\n\n\nexports.array = array.array;\nexports.bitArray = bitArray.bitArray;\nexports.bool = bool.bool;\nexports.bytes = bytes.bytes;\nexports.dataEnum = dataEnum.dataEnum;\nexports.EnumDiscriminatorOutOfRangeError = errors.EnumDiscriminatorOutOfRangeError;\nexports.InvalidArrayLikeRemainderSizeError = errors.InvalidArrayLikeRemainderSizeError;\nexports.InvalidDataEnumVariantError = errors.InvalidDataEnumVariantError;\nexports.InvalidNumberOfItemsError = errors.InvalidNumberOfItemsError;\nexports.InvalidScalarEnumVariantError = errors.InvalidScalarEnumVariantError;\nexports.UnrecognizedArrayLikeSerializerSizeError = errors.UnrecognizedArrayLikeSerializerSizeError;\nexports.map = map.map;\nexports.nullable = nullable.nullable;\nexports.option = option.option;\nexports.publicKey = publicKey.publicKey;\nexports.scalarEnum = scalarEnum.scalarEnum;\nexports.set = set.set;\nexports.string = string.string;\nexports.struct = struct.struct;\nexports.tuple = tuple.tuple;\nexports.unit = unit.unit;\nexports.maxSerializerSizes = maxSerializerSizes.maxSerializerSizes;\nexports.sumSerializerSizes = sumSerializerSizes.sumSerializerSizes;\nObject.keys(umiSerializersCore).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return umiSerializersCore[k]; }\n\t});\n});\nObject.keys(umiSerializersEncodings).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return umiSerializersEncodings[k]; }\n\t});\n});\nObject.keys(umiSerializersNumbers).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return umiSerializersNumbers[k]; }\n\t});\n});\n//# sourceMappingURL=index.cjs.map\n","import {\n  Serializer as _Serializer,\n  NumberSerializer as _NumberSerializer,\n  WrapInSerializer as _WrapInSerializer,\n  mapSerializer as _mapSerializer,\n  fixSerializer as _fixSerializer,\n  reverseSerializer as _reverseSerializer,\n  mergeBytes as _mergeBytes,\n  padBytes as _padBytes,\n  fixBytes as _fixBytes,\n  utf8 as _utf8,\n  baseX as _baseX,\n  base10 as _base10,\n  base58 as _base58,\n  base64 as _base64,\n  base16 as _base16,\n  bitArray as _bitArray,\n  removeNullCharacters as _removeNullCharacters,\n  padNullCharacters as _padNullCharacters,\n  StructToSerializerTuple as _StructToSerializerTuple,\n  DataEnumToSerializerTuple as _DataEnumToSerializerTuple,\n  Endian as _Endian,\n  ArrayLikeSerializerSize as _ArrayLikeSerializerSize,\n  BaseSerializerOptions as _BaseSerializerOptions,\n  TupleSerializerOptions as _TupleSerializerOptions,\n  ArraySerializerOptions as _ArraySerializerOptions,\n  MapSerializerOptions as _MapSerializerOptions,\n  SetSerializerOptions as _SetSerializerOptions,\n  OptionSerializerOptions as _OptionSerializerOptions,\n  NullableSerializerOptions as _NullableSerializerOptions,\n  StructSerializerOptions as _StructSerializerOptions,\n  ScalarEnumSerializerOptions as _ScalarEnumSerializerOptions,\n  DataEnumSerializerOptions as _DataEnumSerializerOptions,\n  StringSerializerOptions as _StringSerializerOptions,\n  BoolSerializerOptions as _BoolSerializerOptions,\n  UnitSerializerOptions as _UnitSerializerOptions,\n  SingleByteNumberSerializerOptions as _SingleByteNumberSerializerOptions,\n  NumberSerializerOptions as _NumberSerializerOptions,\n  BytesSerializerOptions as _BytesSerializerOptions,\n  PublicKeySerializerOptions as _PublicKeySerializerOptions,\n  ScalarEnum as _ScalarEnum,\n  DataEnum as _DataEnum,\n  GetDataEnumKind as _GetDataEnumKind,\n  GetDataEnumKindContent as _GetDataEnumKindContent,\n} from '@metaplex-foundation/umi-serializers';\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type Serializer<From, To extends From = From> = _Serializer<From, To>;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type NumberSerializer = _NumberSerializer;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type WrapInSerializer<From, To extends From = From> = _WrapInSerializer<\n  From,\n  To\n>;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport const mapSerializer = _mapSerializer;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport const fixSerializer = _fixSerializer;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport const reverseSerializer = _reverseSerializer;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport const mergeBytes = _mergeBytes;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport const padBytes = _padBytes;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport const fixBytes = _fixBytes;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport const utf8 = _utf8;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport const baseX = _baseX;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport const base10 = _base10;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport const base58 = _base58;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport const base64 = _base64;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport const base16 = _base16;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport const bitArray = _bitArray;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport const removeNullCharacters = _removeNullCharacters;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport const padNullCharacters = _padNullCharacters;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type StructToSerializerTuple<\n  T extends object,\n  U extends T\n> = _StructToSerializerTuple<T, U>;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type DataEnumToSerializerTuple<\n  T extends _DataEnum,\n  U extends T\n> = _DataEnumToSerializerTuple<T, U>;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport const Endian = _Endian;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type ArrayLikeSerializerSize = _ArrayLikeSerializerSize;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type BaseSerializerOptions = _BaseSerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type TupleSerializerOptions = _TupleSerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type ArraySerializerOptions = _ArraySerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type MapSerializerOptions = _MapSerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type SetSerializerOptions = _SetSerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type OptionSerializerOptions = _OptionSerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type NullableSerializerOptions = _NullableSerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type StructSerializerOptions = _StructSerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type EnumSerializerOptions = _ScalarEnumSerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type DataEnumSerializerOptions = _DataEnumSerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type StringSerializerOptions = _StringSerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type BoolSerializerOptions = _BoolSerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type UnitSerializerOptions = _UnitSerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type SingleByteNumberSerializerOptions =\n  _SingleByteNumberSerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type NumberSerializerOptions = _NumberSerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type BytesSerializerOptions = _BytesSerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type PublicKeySerializerOptions = _PublicKeySerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type ScalarEnum<T> = _ScalarEnum<T>;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type DataEnum = _DataEnum;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type GetDataEnumKind<\n  T extends _DataEnum,\n  K extends T['__kind']\n> = _GetDataEnumKind<T, K>;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type GetDataEnumKindContent<\n  T extends _DataEnum,\n  K extends T['__kind']\n> = _GetDataEnumKindContent<T, K>;\n","/** @category Errors */\nexport class UmiError extends Error {\n  readonly name: string = 'UmiError';\n\n  readonly source: UmiErrorSource;\n\n  readonly sourceDetails?: string;\n\n  readonly cause?: Error;\n\n  constructor(\n    message: string,\n    source: UmiErrorSource,\n    sourceDetails?: string,\n    cause?: Error\n  ) {\n    super(message);\n    this.source = source;\n    this.sourceDetails = sourceDetails;\n    this.cause = cause;\n    this.message = `${this.message}\\n\\nSource: ${this.getFullSource()}${\n      this.cause ? `\\n\\nCaused By: ${this.cause}` : ''\n    }\\n`;\n  }\n\n  getCapitalizedSource(): string {\n    if (this.source === 'sdk' || this.source === 'rpc') {\n      return this.source.toUpperCase();\n    }\n\n    return this.source[0].toUpperCase() + this.source.slice(1);\n  }\n\n  getFullSource(): string {\n    const capitalizedSource = this.getCapitalizedSource();\n    const sourceDetails = this.sourceDetails ? ` > ${this.sourceDetails}` : '';\n\n    return capitalizedSource + sourceDetails;\n  }\n\n  toString() {\n    return `[${this.name}] ${this.message}`;\n  }\n}\n\n/** @category Errors */\nexport type UmiErrorSource = 'sdk' | 'network' | 'rpc' | 'plugin' | 'program';\n","import { UmiError } from './UmiError';\n\n/** @category Errors */\nexport class SdkError extends UmiError {\n  readonly name: string = 'SdkError';\n\n  constructor(message: string, cause?: Error) {\n    super(message, 'sdk', undefined, cause);\n  }\n}\n","import { PublicKey } from '@metaplex-foundation/umi-public-keys';\nimport { SdkError } from './SdkError';\n\n/** @category Errors */\nexport class UnexpectedAccountError extends SdkError {\n  readonly name: string = 'UnexpectedAccountError';\n\n  constructor(publicKey: PublicKey, expectedType: string, cause?: Error) {\n    const message =\n      `The account at the provided address [${publicKey}] ` +\n      `is not of the expected type [${expectedType}].`;\n    super(message, cause);\n  }\n}\n","import { PublicKey } from '@metaplex-foundation/umi-public-keys';\nimport { SdkError } from './SdkError';\n\n/** @category Errors */\nexport class AccountNotFoundError extends SdkError {\n  readonly name: string = 'AccountNotFoundError';\n\n  constructor(publicKey: PublicKey, accountType?: string, solution?: string) {\n    const message = `${\n      accountType\n        ? `The account of type [${accountType}] was not found`\n        : 'No account was found'\n    } at the provided address [${publicKey}].${solution ? ` ${solution}` : ''}`;\n    super(message);\n  }\n}\n","import type { PublicKey } from '@metaplex-foundation/umi-public-keys';\nimport type { Serializer } from '@metaplex-foundation/umi-serializers';\nimport type { SolAmount } from './Amount';\nimport { AccountNotFoundError, UnexpectedAccountError } from './errors';\n\n/**\n * The size of an account header in bytes.\n * @category Accounts\n */\nexport const ACCOUNT_HEADER_SIZE = 128;\n\n/**\n * Describes the header of an account.\n * @category Accounts\n */\nexport type AccountHeader = {\n  executable: boolean;\n  owner: PublicKey;\n  lamports: SolAmount;\n  rentEpoch?: bigint;\n};\n\n/**\n * Describes a raw account that has not been deserialized.\n * @category Accounts\n */\nexport type RpcAccount = AccountHeader & {\n  publicKey: PublicKey;\n  data: Uint8Array;\n};\n\n/**\n * Describes a raw account that may or may not exist.\n * @category Accounts\n */\nexport type MaybeRpcAccount =\n  | ({ exists: true } & RpcAccount)\n  | { exists: false; publicKey: PublicKey };\n\n/**\n * Describes a deserialized account.\n * @category Accounts\n */\nexport type Account<T extends object> = T & {\n  publicKey: PublicKey;\n  header: AccountHeader;\n};\n\n/**\n * Given an account data serializer,\n * returns a deserialized account from a raw account.\n * @category Accounts\n */\nexport function deserializeAccount<From extends object, To extends From = From>(\n  rawAccount: RpcAccount,\n  dataSerializer: Serializer<From, To>\n): Account<To> {\n  const { data, publicKey, ...rest } = rawAccount;\n  try {\n    const [parsedData] = dataSerializer.deserialize(data);\n    return { publicKey, header: rest, ...parsedData };\n  } catch (error: any) {\n    throw new UnexpectedAccountError(\n      publicKey,\n      dataSerializer.description,\n      error\n    );\n  }\n}\n\n/**\n * Ensures an account that may or may not exist actually exists.\n * @category Accounts\n */\nexport function assertAccountExists(\n  account: MaybeRpcAccount,\n  name?: string,\n  solution?: string\n): asserts account is MaybeRpcAccount & { exists: true } {\n  if (!account.exists) {\n    throw new AccountNotFoundError(account.publicKey, name, solution);\n  }\n}\n","/**\n * Defines all the types that can be used to create\n * a BigInt via the <code>{@link createBigInt}</code> function.\n * @category Utils — Amounts\n */\nexport type BigIntInput = number | string | boolean | bigint | Uint8Array;\n\n/**\n * Creates a BigInt from a number, string, boolean, or Uint8Array.\n * @category Utils — Amounts\n */\nexport const createBigInt = (input: BigIntInput): bigint => {\n  input = typeof input === 'object' ? input.toString() : input;\n  return BigInt(input);\n};\n","import type { Amount, AmountDecimals, AmountIdentifier } from '../Amount';\nimport { SdkError } from './SdkError';\n\n/** @category Errors */\nexport class UnexpectedAmountError extends SdkError {\n  readonly name: string = 'UnexpectedAmountError';\n\n  readonly amount: Amount;\n\n  readonly expectedIdentifier: AmountIdentifier;\n\n  readonly expectedDecimals: AmountDecimals;\n\n  constructor(\n    amount: Amount,\n    expectedIdentifier: AmountIdentifier,\n    expectedDecimals: AmountDecimals\n  ) {\n    const message =\n      `Expected amount of type [${expectedIdentifier} with ${expectedDecimals} decimals] ` +\n      `but got [${amount.identifier} with ${amount.decimals} decimals]. ` +\n      `Ensure the provided Amount is of the expected type.`;\n    super(message);\n    this.amount = amount;\n    this.expectedIdentifier = expectedIdentifier;\n    this.expectedDecimals = expectedDecimals;\n  }\n}\n","import type { Amount } from '../Amount';\nimport { SdkError } from './SdkError';\n\n/** @category Errors */\nexport class AmountMismatchError extends SdkError {\n  readonly name: string = 'AmountMismatchError';\n\n  readonly left: Amount;\n\n  readonly right: Amount;\n\n  readonly operation?: string;\n\n  constructor(left: Amount, right: Amount, operation?: string) {\n    const wrappedOperation = operation ? ` [${operation}]` : '';\n    const message =\n      `The SDK tried to execute an operation${wrappedOperation} on two amounts of different types: ` +\n      `[${left.identifier} with ${left.decimals} decimals] and ` +\n      `[${right.identifier} with ${right.decimals} decimals]. ` +\n      `Provide both amounts in the same type to perform this operation.`;\n    super(message);\n    this.left = left;\n    this.right = right;\n    this.operation = operation;\n  }\n}\n","import {\n  NumberSerializer,\n  Serializer,\n  mapSerializer,\n} from '@metaplex-foundation/umi-serializers';\nimport { BigIntInput, createBigInt } from './BigInt';\nimport { AmountMismatchError, UnexpectedAmountError } from './errors';\n\n/**\n * The identifier of an amount.\n * @category Utils — Amounts\n */\nexport type AmountIdentifier = 'SOL' | 'USD' | '%' | 'splToken' | string;\n\n/**\n * The number of decimals in an amount represented using the lowest possible unit.\n * @category Utils — Amounts\n */\nexport type AmountDecimals = number;\n\n/**\n * Describes an amount of any type or currency using the lowest possible unit.\n * It uses a BigInt to represent the basis points of the amount, a decimal number\n * to know how to interpret the basis points, and an identifier to know what\n * type of amount we are dealing with.\n *\n * Custom type parameters can be used to represent specific types of amounts.\n * For example:\n * - Amount<'SOL', 9> represents an amount of SOL in lamports.\n * - Amount<'USD', 2> represents an amount of USD in cents.\n * - Amount<'%', 2> represents a percentage with 2 decimals.\n *\n * @category Utils — Amounts\n */\nexport type Amount<\n  I extends AmountIdentifier = AmountIdentifier,\n  D extends AmountDecimals = AmountDecimals\n> = {\n  /** The amount in its lower possible unit such that it does not contain decimals. */\n  basisPoints: bigint;\n  /** The identifier of the amount. */\n  identifier: I;\n  /** The number of decimals in the amount. */\n  decimals: D;\n};\n\n/**\n * An amount of SOL represented using the lowest possible unit — i.e. lamports.\n * @category Utils — Amounts\n */\nexport type SolAmount = Amount<'SOL', 9>;\n\n/**\n * An amount of US dollars represented using the lowest possible unit — i.e. cents.\n * @category Utils — Amounts\n */\nexport type UsdAmount = Amount<'USD', 2>;\n\n/**\n * An percentage represented in basis points using a given number of decimals.\n * @category Utils — Amounts\n */\nexport type PercentAmount<D extends AmountDecimals> = Amount<'%', D>;\n\n/**\n * Creates an amount from the provided basis points, identifier, and decimals.\n * @category Utils — Amounts\n */\nexport const createAmount = <\n  I extends AmountIdentifier,\n  D extends AmountDecimals\n>(\n  basisPoints: BigIntInput,\n  identifier: I,\n  decimals: D\n): Amount<I, D> => ({\n  basisPoints: createBigInt(basisPoints),\n  identifier,\n  decimals,\n});\n\n/**\n * Creates an amount from a decimal value which will be converted to the lowest\n * possible unit using the provided decimals.\n * @category Utils — Amounts\n */\nexport const createAmountFromDecimals = <\n  I extends AmountIdentifier,\n  D extends AmountDecimals\n>(\n  decimalAmount: number,\n  identifier: I,\n  decimals: D\n): Amount<I, D> => {\n  const exponentAmount = createAmount(\n    BigInt(10) ** BigInt(decimals ?? 0),\n    identifier,\n    decimals\n  );\n\n  return multiplyAmount(exponentAmount, decimalAmount);\n};\n\n/**\n * Creates a percentage amount from the provided decimal value.\n * @category Utils — Amounts\n */\nexport const percentAmount = <D extends AmountDecimals>(\n  percent: number,\n  decimals: D = 2 as D\n): Amount<'%', D> => createAmountFromDecimals(percent, '%', decimals);\n\n/**\n * Creates an amount of SPL tokens from the provided decimal value.\n * @category Utils — Amounts\n */\nexport const tokenAmount = <\n  I extends AmountIdentifier,\n  D extends AmountDecimals\n>(\n  tokens: number,\n  identifier?: I,\n  decimals?: D\n): Amount<I, D> =>\n  createAmountFromDecimals(\n    tokens,\n    (identifier ?? 'splToken') as I,\n    (decimals ?? 0) as D\n  );\n\n/**\n * Creates a {@link SolAmount} from the provided lamports.\n * @category Utils — Amounts\n */\nexport const lamports = (lamports: BigIntInput): SolAmount =>\n  createAmount(lamports, 'SOL', 9);\n\n/**\n * Creates a {@link SolAmount} from the provided decimal value in SOL.\n * @category Utils — Amounts\n */\nexport const sol = (sol: number): SolAmount =>\n  createAmountFromDecimals(sol, 'SOL', 9);\n\n/**\n * Creates a {@link UsdAmount} from the provided decimal value in USD.\n * @category Utils — Amounts\n */\nexport const usd = (usd: number): UsdAmount =>\n  createAmountFromDecimals(usd, 'USD', 2);\n\n/**\n * Determines whether a given amount has the provided identifier and decimals.\n * @category Utils — Amounts\n */\nexport const isAmount = <I extends AmountIdentifier, D extends AmountDecimals>(\n  amount: Amount,\n  identifier: I,\n  decimals: D\n): amount is Amount<I, D> =>\n  amount.identifier === identifier && amount.decimals === decimals;\n\n/**\n * Determines whether a given amount is a {@link SolAmount}.\n * @category Utils — Amounts\n */\nexport const isSolAmount = (amount: Amount): amount is SolAmount =>\n  isAmount(amount, 'SOL', 9);\n\n/**\n * Determines whether two amounts are of the same type.\n * @category Utils — Amounts\n */\nexport const sameAmounts = (left: Amount, right: Amount): boolean =>\n  isAmount(left, right.identifier, right.decimals);\n\n/**\n * Ensures that a given amount has the provided identifier and decimals.\n * @category Utils — Amounts\n */\nexport function assertAmount<\n  I extends AmountIdentifier,\n  D extends AmountDecimals\n>(amount: Amount, identifier: I, decimals: D): asserts amount is Amount<I, D> {\n  if (!isAmount(amount, identifier, decimals)) {\n    throw new UnexpectedAmountError(amount, identifier, decimals);\n  }\n}\n\n/**\n * Ensures that a given amount is a {@link SolAmount}.\n * @category Utils — Amounts\n */\nexport function assertSolAmount(actual: Amount): asserts actual is SolAmount {\n  assertAmount(actual, 'SOL', 9);\n}\n\n/**\n * Ensures that two amounts are of the same type.\n * @category Utils — Amounts\n */\nexport function assertSameAmounts(\n  left: Amount,\n  right: Amount,\n  operation?: string\n) {\n  if (!sameAmounts(left, right)) {\n    throw new AmountMismatchError(left, right, operation);\n  }\n}\n\n/**\n * Adds two amounts of the same type.\n * @category Utils — Amounts\n */\nexport const addAmounts = <\n  I extends AmountIdentifier,\n  D extends AmountDecimals\n>(\n  left: Amount<I, D>,\n  right: Amount<I, D>\n): Amount<I, D> => {\n  assertSameAmounts(left, right, 'add');\n\n  return {\n    ...left,\n    basisPoints: left.basisPoints + right.basisPoints,\n  };\n};\n\n/**\n * Subtracts two amounts of the same type.\n * @category Utils — Amounts\n */\nexport const subtractAmounts = <\n  I extends AmountIdentifier,\n  D extends AmountDecimals\n>(\n  left: Amount<I, D>,\n  right: Amount<I, D>\n): Amount<I, D> => {\n  assertSameAmounts(left, right, 'subtract');\n\n  return {\n    ...left,\n    basisPoints: left.basisPoints - right.basisPoints,\n  };\n};\n\n/**\n * Multiplies an amount by a given multiplier.\n * @category Utils — Amounts\n */\nexport const multiplyAmount = <\n  I extends AmountIdentifier,\n  D extends AmountDecimals\n>(\n  left: Amount<I, D>,\n  multiplier: number | bigint\n): Amount<I, D> => {\n  if (typeof multiplier === 'bigint') {\n    return { ...left, basisPoints: left.basisPoints * multiplier };\n  }\n\n  const [units, decimals] = multiplier.toString().split('.');\n  const multiplierBasisPoints = BigInt(units + (decimals ?? ''));\n  const multiplierExponents = BigInt(10) ** BigInt(decimals?.length ?? 0);\n\n  return {\n    ...left,\n    basisPoints:\n      (left.basisPoints * multiplierBasisPoints) / multiplierExponents,\n  };\n};\n\n/**\n * Divides an amount by a given divisor.\n * @category Utils — Amounts\n */\nexport const divideAmount = <\n  I extends AmountIdentifier,\n  D extends AmountDecimals\n>(\n  left: Amount<I, D>,\n  divisor: number | bigint\n): Amount<I, D> => {\n  if (typeof divisor === 'bigint') {\n    return { ...left, basisPoints: left.basisPoints / divisor };\n  }\n\n  const [units, decimals] = divisor.toString().split('.');\n  const divisorBasisPoints = BigInt(units + (decimals ?? ''));\n  const divisorExponents = BigInt(10) ** BigInt(decimals?.length ?? 0);\n\n  return {\n    ...left,\n    basisPoints: (left.basisPoints * divisorExponents) / divisorBasisPoints,\n  };\n};\n\n/**\n * Returns the absolute value of an amount.\n * @category Utils — Amounts\n */\nexport const absoluteAmount = <\n  I extends AmountIdentifier,\n  D extends AmountDecimals\n>(\n  value: Amount<I, D>\n): Amount<I, D> => {\n  const x = value.basisPoints;\n  return { ...value, basisPoints: x < 0 ? -x : x };\n};\n\n/**\n * Compares two amounts of the same type.\n * @category Utils — Amounts\n */\nexport const compareAmounts = <\n  I extends AmountIdentifier,\n  D extends AmountDecimals\n>(\n  left: Amount<I, D>,\n  right: Amount<I, D>\n): -1 | 0 | 1 => {\n  assertSameAmounts(left, right, 'compare');\n  if (left.basisPoints > right.basisPoints) return 1;\n  if (left.basisPoints < right.basisPoints) return -1;\n  return 0;\n};\n\n/**\n * Determines whether two amounts are equal.\n * An optional tolerance can be provided to allow for small differences.\n * When using {@link SolAmount}, this is usually due to transaction or small storage fees.\n * @category Utils — Amounts\n */\nexport const isEqualToAmount = <\n  I extends AmountIdentifier,\n  D extends AmountDecimals\n>(\n  left: Amount<I, D>,\n  right: Amount<I, D>,\n  tolerance?: Amount<I, D>\n): boolean => {\n  tolerance = tolerance ?? createAmount(0, left.identifier, left.decimals);\n  assertSameAmounts(left, right, 'isEqualToAmount');\n  assertSameAmounts(left, tolerance, 'isEqualToAmount');\n\n  const delta = absoluteAmount(subtractAmounts(left, right));\n\n  return isLessThanOrEqualToAmount(delta, tolerance);\n};\n\n/**\n * Whether the left amount is less than the right amount.\n * @category Utils — Amounts\n */\nexport const isLessThanAmount = <\n  I extends AmountIdentifier,\n  D extends AmountDecimals\n>(\n  left: Amount<I, D>,\n  right: Amount<I, D>\n): boolean => compareAmounts(left, right) < 0;\n\n/**\n * Whether the left amount is less than or equal to the right amount.\n * @category Utils — Amounts\n */\nexport const isLessThanOrEqualToAmount = <\n  I extends AmountIdentifier,\n  D extends AmountDecimals\n>(\n  left: Amount<I, D>,\n  right: Amount<I, D>\n): boolean => compareAmounts(left, right) <= 0;\n\n/**\n * Whether the left amount is greater than the right amount.\n * @category Utils — Amounts\n */\nexport const isGreaterThanAmount = <\n  I extends AmountIdentifier,\n  D extends AmountDecimals\n>(\n  left: Amount<I, D>,\n  right: Amount<I, D>\n): boolean => compareAmounts(left, right) > 0;\n\n/**\n * Whether the left amount is greater than or equal to the right amount.\n * @category Utils — Amounts\n */\nexport const isGreaterThanOrEqualToAmount = <\n  I extends AmountIdentifier,\n  D extends AmountDecimals\n>(\n  left: Amount<I, D>,\n  right: Amount<I, D>\n): boolean => compareAmounts(left, right) >= 0;\n\n/**\n * Whether the amount is zero.\n * @category Utils — Amounts\n */\nexport const isZeroAmount = (value: Amount): boolean =>\n  value.basisPoints === BigInt(0);\n\n/**\n * Whether the amount is positive.\n * @category Utils — Amounts\n */\nexport const isPositiveAmount = (value: Amount): boolean =>\n  value.basisPoints >= BigInt(0);\n\n/**\n * Whether the amount is negative.\n * @category Utils — Amounts\n */\nexport const isNegativeAmount = (value: Amount): boolean =>\n  value.basisPoints < BigInt(0);\n\n/**\n * Converts an amount to a string by using the amount's decimals.\n * @category Utils — Amounts\n */\nexport const amountToString = (value: Amount, maxDecimals?: number): string => {\n  let text = value.basisPoints.toString();\n  if (value.decimals === 0) {\n    return text;\n  }\n\n  const sign = text.startsWith('-') ? '-' : '';\n  text = text.replace('-', '');\n  text = text.padStart(value.decimals + 1, '0');\n  const units = text.slice(0, -value.decimals);\n  let decimals = text.slice(-value.decimals);\n\n  if (maxDecimals !== undefined) {\n    decimals = decimals.slice(0, maxDecimals);\n  }\n\n  return `${sign + units}.${decimals}`;\n};\n\n/**\n * Converts an amount to a number by using the amount's decimals.\n * Note that this may throw an error if the amount is too large to fit in a JavaScript number.\n * @category Utils — Amounts\n */\nexport const amountToNumber = (value: Amount): number =>\n  parseFloat(amountToString(value));\n\n/**\n * Displays an amount as a string by using the amount's decimals and identifier.\n * @category Utils — Amounts\n */\nexport const displayAmount = (value: Amount, maxDecimals?: number): string => {\n  const amountAsString = amountToString(value, maxDecimals);\n\n  switch (value.identifier) {\n    case '%':\n      return `${amountAsString}%`;\n    case 'splToken':\n      return /^1(\\.0+)?$/.test(amountAsString)\n        ? `${amountAsString} Token`\n        : `${amountAsString} Tokens`;\n    default:\n      if (value.identifier.startsWith('splToken.')) {\n        const [, identifier] = value.identifier.split('.');\n        return `${identifier} ${amountAsString}`;\n      }\n      return `${value.identifier} ${amountAsString}`;\n  }\n};\n\n/**\n * Converts a number serializer into an amount serializer\n * by providing an amount identifier and decimals.\n * @category Utils — Amounts\n */\nexport const mapAmountSerializer = <\n  I extends AmountIdentifier = AmountIdentifier,\n  D extends AmountDecimals = AmountDecimals\n>(\n  serializer: NumberSerializer,\n  identifier: I,\n  decimals: D\n): Serializer<Amount<I, D>> =>\n  mapSerializer(\n    serializer as Serializer<number | bigint>,\n    (value: Amount<I, D>): number | bigint =>\n      value.basisPoints > Number.MAX_SAFE_INTEGER\n        ? value.basisPoints\n        : Number(value.basisPoints),\n    (value: number | bigint): Amount<I, D> =>\n      createAmount(value, identifier, decimals)\n  );\n","/**\n * Defines the available Solana clusters.\n * @category Utils — Cluster\n */\nexport type Cluster =\n  | 'mainnet-beta'\n  | 'devnet'\n  | 'testnet'\n  | 'localnet'\n  | 'custom';\n\n/**\n * Helper type to helps the end-user selecting a cluster.\n * They can either provide a specific cluster or use the\n * special values 'current' or '*' to select the current\n * cluster or all clusters respectively.\n * @category Utils — Cluster\n */\nexport type ClusterFilter = Cluster | 'current' | '*';\n\nconst MAINNET_BETA_DOMAINS = [\n  'api.mainnet-beta.solana.com',\n  'ssc-dao.genesysgo.net',\n];\nconst DEVNET_DOMAINS = [\n  'api.devnet.solana.com',\n  'psytrbhymqlkfrhudd.dev.genesysgo.net',\n];\nconst TESTNET_DOMAINS = ['api.testnet.solana.com'];\nconst LOCALNET_DOMAINS = ['localhost', '127.0.0.1'];\n\n/**\n * Helper method that tries its best to resolve a cluster from a given endpoint.\n * @category Utils — Cluster\n */\nexport const resolveClusterFromEndpoint = (endpoint: string): Cluster => {\n  const domain = new URL(endpoint).hostname;\n  if (MAINNET_BETA_DOMAINS.includes(domain)) return 'mainnet-beta';\n  if (DEVNET_DOMAINS.includes(domain)) return 'devnet';\n  if (TESTNET_DOMAINS.includes(domain)) return 'testnet';\n  if (LOCALNET_DOMAINS.includes(domain)) return 'localnet';\n  if (endpoint.includes('mainnet')) return 'mainnet-beta';\n  if (endpoint.includes('devnet')) return 'devnet';\n  if (endpoint.includes('testnet')) return 'testnet';\n  if (endpoint.includes('local')) return 'localnet';\n  return 'custom';\n};\n","import { SdkError } from './SdkError';\n\n/** @category Errors */\nexport class InterfaceImplementationMissingError extends SdkError {\n  readonly name: string = 'InterfaceImplementationMissingError';\n\n  constructor(interfaceName: string, contextVariable: string) {\n    const interfaceBasename = interfaceName.replace(/Interface$/, '');\n    const message =\n      `Tried using ${interfaceName} but no implementation of that interface was found. ` +\n      `Make sure an implementation is registered, ` +\n      `e.g. via \"context.${contextVariable} = new My${interfaceBasename}();\".`;\n    super(message);\n  }\n}\n","import { InterfaceImplementationMissingError } from './errors';\nimport type { GenericAbortSignal } from './GenericAbortSignal';\nimport type { GenericFile } from './GenericFile';\n\n/**\n * Defines the interface for a downloader.\n * It allows us to fetch files from given URIs.\n *\n * @category Context and Interfaces\n */\nexport interface DownloaderInterface {\n  /** Downloads multiple files from a list of URIs. */\n  download: (\n    uris: string[],\n    options?: DownloaderOptions\n  ) => Promise<GenericFile[]>;\n\n  /** Downloads and parses a JSON file from a given URI. */\n  downloadJson: <T>(uri: string, options?: DownloaderOptions) => Promise<T>;\n}\n\n/**\n * Defines the options that can be passed when downloading files. *\n * @category Storage\n */\nexport type DownloaderOptions = {\n  /** An abort signal to cancel the download. */\n  signal?: GenericAbortSignal;\n};\n\n/**\n * An implementation of the {@link DownloaderInterface} that throws an error when called.\n * @category Storage\n */\nexport function createNullDownloader(): DownloaderInterface {\n  const errorHandler = () => {\n    throw new InterfaceImplementationMissingError(\n      'DownloaderInterface',\n      'downloader'\n    );\n  };\n  return { download: errorHandler, downloadJson: errorHandler };\n}\n","import type { Pda, PublicKey } from '@metaplex-foundation/umi-public-keys';\nimport { InterfaceImplementationMissingError } from './errors';\nimport type { Keypair } from './Keypair';\n\n/**\n * Defines the interface for the EdDSA cryptography algorithm.\n * It allows us to create, find and use public keys and keypairs.\n *\n * @category Context and Interfaces\n */\nexport interface EddsaInterface {\n  /** Generates a new keypair. */\n  generateKeypair: () => Keypair;\n  /** Restores a keypair from a secret key. */\n  createKeypairFromSecretKey: (secretKey: Uint8Array) => Keypair;\n  /** Restores a keypair from a seed. */\n  createKeypairFromSeed: (seed: Uint8Array) => Keypair;\n  /** Restores a keypair from a file. */\n  createKeypairFromFile: (path: string) => Keypair;\n  /** Restore a keypair from the solana config file. */\n  createKeypairFromSolanaConfig: (path: string) => Keypair;\n  /** Whether the given public key is on the EdDSA elliptic curve. */\n  isOnCurve: (publicKey: PublicKey) => boolean;\n  /** Finds a Program-Derived Address from the given programId and seeds. */\n  findPda: (programId: PublicKey, seeds: Uint8Array[]) => Pda;\n  /** Signs a message with the given keypair. */\n  sign: (message: Uint8Array, keypair: Keypair) => Uint8Array;\n  /** Verifies a signature for a message with the given public key. */\n  verify: (\n    message: Uint8Array,\n    signature: Uint8Array,\n    publicKey: PublicKey\n  ) => boolean;\n}\n\n/**\n * An implementation of the {@link EddsaInterface} that throws an error when called.\n * @category Signers and PublicKeys\n */\nexport function createNullEddsa(): EddsaInterface {\n  const errorHandler = () => {\n    throw new InterfaceImplementationMissingError('EddsaInterface', 'eddsa');\n  };\n  return {\n    generateKeypair: errorHandler,\n    createKeypairFromSecretKey: errorHandler,\n    createKeypairFromSeed: errorHandler,\n    createKeypairFromFile: errorHandler,\n    createKeypairFromSolanaConfig: errorHandler,\n    isOnCurve: errorHandler,\n    findPda: errorHandler,\n    sign: errorHandler,\n    verify: errorHandler,\n  };\n}\n","import { InterfaceImplementationMissingError } from './errors';\nimport { HttpRequest } from './HttpRequest';\nimport { HttpResponse } from './HttpResponse';\n\n/**\n * Defines the interface for an HTTP client.\n *\n * @category Context and Interfaces\n */\nexport interface HttpInterface {\n  /** Sends a HTTP request and returns its response. */\n  send: <ResponseData, RequestData = any>(\n    request: HttpRequest<RequestData>\n  ) => Promise<HttpResponse<ResponseData>>;\n}\n\n/**\n * An implementation of the {@link HttpInterface} that throws an error when called.\n * @category Http\n */\nexport function createNullHttp(): HttpInterface {\n  const errorHandler = () => {\n    throw new InterfaceImplementationMissingError('HttpInterface', 'http');\n  };\n  return { send: errorHandler };\n}\n","import type {\n  PublicKey,\n  PublicKeyInput,\n} from '@metaplex-foundation/umi-public-keys';\nimport type { ClusterFilter } from './Cluster';\nimport type { ErrorWithLogs, Program } from './Program';\nimport type { Transaction } from './Transaction';\nimport { InterfaceImplementationMissingError, ProgramError } from './errors';\n\n/**\n * Defines the interface for a program repository.\n * It allows us to register and retrieve programs when needed.\n *\n * @category Context and Interfaces\n */\nexport interface ProgramRepositoryInterface {\n  /**\n   * Whether a given program is registered in the repository.\n   *\n   * @param identifier The name or public key of the program to check.\n   * @param clusterFilter The cluster filter to apply. Defaults to `\"current\"`.\n   */\n  has(identifier: string | PublicKey, clusterFilter?: ClusterFilter): boolean;\n\n  /**\n   * Gets a program from the repository.\n   * Throws an error if the program is not found.\n   *\n   * @param identifier The name or public key of the program to retrieve.\n   * @param clusterFilter The cluster filter to apply. Defaults to `\"current\"`.\n   * @typeParam T - The type of the program to retrieve. Defaults to `Program`.\n   */\n  get<T extends Program = Program>(\n    identifier: string | PublicKey,\n    clusterFilter?: ClusterFilter\n  ): T;\n\n  /**\n   * Gets the public key of a program from the repository,\n   * with an optional fallback public key.\n   *\n   * Throws an error if the program is not found and no fallback is provided.\n   *\n   * @param identifier The name or public key of the program to retrieve.\n   * @param fallback The fallback public key to use if the program is not found.\n   * Defaults to not using a fallback public key.\n   * @param clusterFilter The cluster filter to apply. Defaults to `\"current\"`.\n   */\n  getPublicKey(\n    identifier: string | PublicKey,\n    fallback?: PublicKeyInput,\n    clusterFilter?: ClusterFilter\n  ): PublicKey;\n\n  /**\n   * Gets all programs from the repository matching the given cluster filter.\n   * Defaults to getting all programs from the current cluster.\n   *\n   * @param clusterFilter The cluster filter to apply. Defaults to `\"current\"`.\n   */\n  all(clusterFilter?: ClusterFilter): Program[];\n\n  /**\n   * Registers a new program in the repository.\n   *\n   * @param program The program to register.\n   * @param overrides Whether to register and prioritize\n   * the given program even if a program with the same\n   * public key already exists. Defaults to `true`.\n   */\n  add(program: Program, overrides?: boolean): void;\n\n  /**\n   * Creates a binding between a name and a program identifier.\n   * This can be used to create redirections or aliases when resolving programs.\n   *\n   * @param abstract The name of the binding.\n   * @param concrete The identifier this binding should resolve to.\n   */\n  bind(abstract: string, concrete: string | PublicKey): void;\n\n  /**\n   * Removes a binding using its name.\n   *\n   * @param abstract The name of the binding to remove.\n   */\n  unbind(abstract: string): void;\n\n  /**\n   * Creates a cloned instance of the repository.\n   *\n   * @returns A new repository instance with the same programs and bindings.\n   */\n  clone(): ProgramRepositoryInterface;\n\n  /**\n   * Resolves a custom program error from a transaction error.\n   *\n   * @param error The raw error to resolve containing the program logs.\n   * @param transaction The transaction that caused the error.\n   * @returns The resolved program error, or `null` if the error cannot be resolved.\n   */\n  resolveError(\n    error: ErrorWithLogs,\n    transaction: Transaction\n  ): ProgramError | null;\n}\n\n/**\n * An implementation of the {@link ProgramRepositoryInterface} that throws an error when called.\n * @category Programs\n */\nexport function createNullProgramRepository(): ProgramRepositoryInterface {\n  const errorHandler = () => {\n    throw new InterfaceImplementationMissingError(\n      'ProgramRepositoryInterface',\n      'programs'\n    );\n  };\n  return {\n    has: errorHandler,\n    get: errorHandler,\n    getPublicKey: errorHandler,\n    all: errorHandler,\n    add: errorHandler,\n    bind: errorHandler,\n    unbind: errorHandler,\n    clone: errorHandler,\n    resolveError: errorHandler,\n  };\n}\n","import type { PublicKey } from '@metaplex-foundation/umi-public-keys';\nimport type { MaybeRpcAccount, RpcAccount } from './Account';\nimport { SolAmount } from './Amount';\nimport type { Cluster } from './Cluster';\nimport { DateTime } from './DateTime';\nimport type { GenericAbortSignal } from './GenericAbortSignal';\nimport type {\n  Blockhash,\n  BlockhashWithExpiryBlockHeight,\n  Transaction,\n  TransactionError,\n  TransactionSignature,\n  TransactionStatus,\n  TransactionWithMeta,\n} from './Transaction';\nimport { InterfaceImplementationMissingError } from './errors';\n\n/**\n * Defines the interface for an RPC client.\n * It allows us to interact with the Solana blockchain.\n *\n * @category Context and Interfaces\n */\nexport interface RpcInterface {\n  /** The RPC endpoint used by the client. */\n  getEndpoint(): string;\n\n  /** The Solana cluster of the RPC being used. */\n  getCluster(): Cluster;\n\n  /**\n   * Fetch a raw account at the given address.\n   *\n   * @param publicKey The public key of the account to fetch.\n   * @param options The options to use when fetching the account.\n   * @returns A raw account that may or may not exist.\n   */\n  getAccount(\n    publicKey: PublicKey,\n    options?: RpcGetAccountOptions\n  ): Promise<MaybeRpcAccount>;\n\n  /**\n   * Fetch multiple raw accounts at the given addresses.\n   *\n   * @param publicKey The public keys of the accounts to fetch.\n   * @param options The options to use when fetching multiple accounts.\n   * @returns An array of raw accounts that may or may not exist.\n   */\n  getAccounts(\n    publicKeys: PublicKey[],\n    options?: RpcGetAccountsOptions\n  ): Promise<MaybeRpcAccount[]>;\n\n  /**\n   * Fetch multiple raw accounts from a program.\n   *\n   * @param programId The public key of the program to fetch accounts from.\n   * @param options The options to use when fetching program accounts.\n   * @returns An array of raw accounts.\n   */\n  getProgramAccounts(\n    programId: PublicKey,\n    options?: RpcGetProgramAccountsOptions\n  ): Promise<RpcAccount[]>;\n\n  /**\n   * Fetch the estimated production time of a block.\n   *\n   * @param slot The slot to get the estimated production time for.\n   * @param options The options to use when getting the block time of a slot.\n   * @returns The estimated production time of the block in Unix time.\n   */\n  getBlockTime(\n    slot: number,\n    options?: RpcGetBlockTimeOptions\n  ): Promise<DateTime | null>;\n\n  /**\n   * Fetch the balance of an account.\n   *\n   * @param publicKey The public key of the account.\n   * @param options The options to use when fetching an account's balance.\n   * @returns An amount of SOL.\n   */\n  getBalance(\n    publicKey: PublicKey,\n    options?: RpcGetBalanceOptions\n  ): Promise<SolAmount>;\n\n  /**\n   * Get the genesis hash.\n   *\n   * @returns The genesis hash.\n   */\n  getGenesisHash(): Promise<string>;\n\n  /**\n   * Get the amount of rent-exempt SOL required to create an account of the given size.\n   *\n   * @param bytes The size of the account in bytes.\n   * @param options The options to use when fetching the rent exempt amount.\n   * @returns An amount of SOL.\n   */\n  getRent(bytes: number, options?: RpcGetRentOptions): Promise<SolAmount>;\n\n  /**\n   * Fetch the recent slot.\n   *\n   * @param options The options to use when fetching the recent slot.\n   * @returns The recent slot.\n   */\n  getSlot(options?: RpcGetSlotOptions): Promise<number>;\n\n  /**\n   * Fetch the latest blockhash.\n   *\n   * @param options The options to use when fetching the latest blockhash.\n   * @returns The latest blockhash and its block height.\n   */\n  getLatestBlockhash(\n    options?: RpcGetLatestBlockhashOptions\n  ): Promise<BlockhashWithExpiryBlockHeight>;\n\n  /**\n   * Fetch a transaction by its signature.\n   *\n   * @param signature The signature of the transaction to fetch.\n   * @param options The options to use when fetching transactions.\n   * @returns A transaction with its metadata or `null` if the transaction was not found.\n   */\n  getTransaction(\n    signature: TransactionSignature,\n    options?: RpcGetTransactionOptions\n  ): Promise<TransactionWithMeta | null>;\n\n  /**\n   * Fetch transaction commitments from an array of signatures.\n   *\n   * @param signatures The signatures of all transactions we want to fetch commitments for.\n   * @param options The options to use when fetching transaction commitments.\n   * @returns An array of transaction statuses in the same order as the signatures.\n   * If a transaction was not found, `null` will be returned instead.\n   */\n  getSignatureStatuses(\n    signatures: TransactionSignature[],\n    options?: RpcGetSignatureStatusesOptions\n  ): Promise<Array<TransactionStatus | null>>;\n\n  /**\n   * Whether or not an account at a given address exists.\n   *\n   * @param publicKey The public key of the account.\n   * @param options The options to use when checking if an account exists.\n   * @returns `true` if the account exists, `false` otherwise.\n   */\n  accountExists(\n    publicKey: PublicKey,\n    options?: RpcAccountExistsOptions\n  ): Promise<boolean>;\n\n  /**\n   * Send and confirm an airdrop transaction to the given address.\n   *\n   * @param publicKey The public key of the account to airdrop to.\n   * @param amount The amount of SOL to airdrop.\n   * @param options The options to use when airdropping SOL.\n   */\n  airdrop(\n    publicKey: PublicKey,\n    amount: SolAmount,\n    options?: RpcAirdropOptions\n  ): Promise<void>;\n\n  /**\n   * Send a custom RPC request to the node.\n   *\n   * @param method The method to call.\n   * @param params The parameters to pass to the method. Can be either:\n   *               - An array for positional parameters\n   *               - An object for named parameters\n   * @param options The options to use when sending a custom RPC request.\n   * @returns The generic result of the RPC call.\n   */\n  call<R, P extends any[] | Record<string, any> = any[]>(\n    method: string,\n    params?: P,\n    options?: RpcCallOptions\n  ): Promise<R>;\n\n  /**\n   * Send a transaction to the blockchain.\n   *\n   * @param transaction The transaction to send.\n   * @param options The options to use when sending a transaction.\n   * @returns The signature of the sent transaction.\n   */\n  sendTransaction(\n    transaction: Transaction,\n    options?: RpcSendTransactionOptions\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Simulate a transaction.\n   *\n   * @param transaction The transaction to simulate.\n   * @param options The options to use when simulating a transaction.\n   * @returns The signature of the sent transaction.\n   */\n  simulateTransaction(\n    transaction: Transaction,\n    options?: RpcSimulateTransactionOptions\n  ): Promise<RpcSimulateTransactionResult>;\n\n  /**\n   * Confirm a sent transaction.\n   *\n   * @param signature The signature of the transaction to confirm.\n   * @param options The options to use when confirming a transaction.\n   * @returns The RPC response of the transaction confirmation.\n   */\n  confirmTransaction(\n    signature: TransactionSignature,\n    options: RpcConfirmTransactionOptions\n  ): Promise<RpcConfirmTransactionResult>;\n}\n\n/**\n * The various commitment levels when fetching data from the blockchain.\n * @category Rpc\n */\nexport type Commitment = 'processed' | 'confirmed' | 'finalized';\n\n/**\n * An object to request a slice of data starting\n * at `offset` and ending at `offset + length`.\n * @category Rpc\n */\nexport type RpcDataSlice = { offset: number; length: number };\n\n/**\n * Defines a filter to use when fetching program accounts.\n * @category Rpc\n */\nexport type RpcDataFilter = RpcDataFilterSize | RpcDataFilterMemcmp;\n\n/**\n * Defines a filter that selects accounts by size.\n * @category Rpc\n */\nexport type RpcDataFilterSize = { dataSize: number };\n\n/**\n * Defines a filter that selects accounts by comparing\n * the given bytes at the given offset.\n * @category Rpc\n */\nexport type RpcDataFilterMemcmp = {\n  memcmp: { offset: number; bytes: Uint8Array };\n};\n\n/**\n * Defines an RPC result that wraps the returned value\n * and provides the slot number as context.\n * @category Rpc\n */\nexport type RpcResultWithContext<Value> = {\n  context: { slot: number };\n  value: Value;\n};\n\n/**\n * Defines the common options re-used by all\n * the methods defines in the RPC interface.\n * @category Rpc\n */\nexport type RpcBaseOptions = {\n  /** An explicit RPC request identifier. */\n  id?: string;\n  /** An abort signal to prematurely cancel the request. */\n  signal?: GenericAbortSignal;\n  /** The commitment level to use when fetching data. */\n  commitment?: Commitment;\n  /** The minimum slot to use when fetching data. */\n  minContextSlot?: number;\n};\n\n/**\n * The options to use when fetching an account.\n * @category Rpc\n */\nexport type RpcGetAccountOptions = RpcBaseOptions & {\n  /** Select only a portion of the account's data. */\n  dataSlice?: RpcDataSlice;\n};\n\n/**\n * The options to use when fetching multiple accounts.\n * @category Rpc\n */\nexport type RpcGetAccountsOptions = RpcBaseOptions & {\n  /** For each account, select only a portion of their data. */\n  dataSlice?: RpcDataSlice;\n};\n\n/**\n * The options to use when fetching program accounts.\n * @category Rpc\n */\nexport type RpcGetProgramAccountsOptions = RpcBaseOptions & {\n  /** For each program account, select only a portion of their data. */\n  dataSlice?: RpcDataSlice;\n  /** A set of filters to narrow down the returned program accounts. Max 5 filters. */\n  filters?: RpcDataFilter[];\n};\n\n/**\n * The options to use when fetching a block.\n * @category Rpc\n */\nexport type RpcGetVersionedBlockOptions = RpcBaseOptions & {\n  /** The level of finality desired */\n  commitment?: Commitment;\n  maxSupportedTransactionVersion?: number;\n  rewards?: boolean;\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * The options to use when getting the block time of a slot.\n * @category Rpc\n */\nexport type RpcGetBlockTimeOptions = RpcBaseOptions;\n\n/**\n * The options to use when fetching the balance of an account.\n * @category Rpc\n */\nexport type RpcGetBalanceOptions = RpcBaseOptions;\n\n/**\n * The options to use when fetching the rent exempt amount.\n * @category Rpc\n */\nexport type RpcGetRentOptions = RpcBaseOptions & {\n  /** @defaultValue `false` */\n  includesHeaderBytes?: boolean;\n};\n\n/**\n * The options to use when fetching the recent slot.\n * @category Rpc\n */\nexport type RpcGetSlotOptions = RpcBaseOptions;\n\n/**\n * The options to use when fetching the latest blockhash.\n * @category Rpc\n */\nexport type RpcGetLatestBlockhashOptions = RpcBaseOptions;\n\n/**\n * The options to use when fetching a transaction.\n * @category Rpc\n */\nexport type RpcGetTransactionOptions = RpcBaseOptions;\n\n/**\n * The options to use when fetching transaction statuses.\n * @category Rpc\n */\nexport type RpcGetSignatureStatusesOptions = RpcBaseOptions & {\n  /**\n   * Enable searching status history, not needed for recent transactions.\n   * @defaultValue `false`\n   */\n  searchTransactionHistory?: boolean;\n};\n\n/**\n * The options to use when checking if an account exists.\n * @category Rpc\n */\nexport type RpcAccountExistsOptions = RpcBaseOptions;\n\n/**\n * The options to use when airdropping SOL.\n * @category Rpc\n */\nexport type RpcAirdropOptions = Partial<RpcConfirmTransactionOptions>;\n\n/**\n * The options to use when sending a custom RPC request.\n * @category Rpc\n */\nexport type RpcCallOptions = RpcBaseOptions & {\n  /**\n   * By default, the RPC client pushes an additional `options`\n   * parameter to the RPC request when a commitment is specified.\n   * This `extra` parameter can be used to add more data to the\n   * `options` parameter.\n   */\n  extra?: object;\n};\n\n/**\n * The options to use when sending a transaction.\n * @category Rpc\n */\nexport type RpcSendTransactionOptions = RpcBaseOptions & {\n  /** Whether to skip the preflight check. */\n  skipPreflight?: boolean;\n  /** The commitment level to use for the preflight check. */\n  preflightCommitment?: Commitment;\n  /** The maximum number of retries to use. */\n  maxRetries?: number;\n};\n\n/**\n * The options to use when simulating a transaction.\n * @category Rpc\n */\nexport type RpcSimulateTransactionOptions = RpcBaseOptions & {\n  /** Optional parameter used to specify a list of base58-encoded account addresses to return post simulation state */\n  accounts?: PublicKey[];\n  /** Optional parameter used to enable signature verification before simulation */\n  verifySignatures?: boolean;\n};\n\n/**\n * The options to use when confirming a transaction.\n * @category Rpc\n */\nexport type RpcConfirmTransactionOptions = RpcBaseOptions & {\n  /** The confirm strategy to use. */\n  strategy: RpcConfirmTransactionStrategy;\n};\n\n/**\n * Represents all the possible strategies to use when confirming a transaction.\n * @category Rpc\n */\nexport type RpcConfirmTransactionStrategy =\n  | {\n      type: 'blockhash';\n      blockhash: Blockhash;\n      lastValidBlockHeight: number;\n    }\n  | {\n      type: 'durableNonce';\n      minContextSlot: number;\n      nonceAccountPubkey: PublicKey;\n      nonceValue: string;\n    };\n\n/**\n * Defines the result of a transaction simulation.\n * @category Rpc\n */\nexport type RpcSimulateTransactionResult = {\n  err: TransactionError | null;\n  unitsConsumed?: number;\n  logs: Array<string> | null;\n  accounts?: Array<RpcSimulateTransactionAccountInfo | null> | null;\n  returnData?: RpcSimulateTransactionTransactionReturnData | null;\n};\n\n/**\n * Defines the result of a transaction simulation accounts info.\n * @category Rpc\n */\nexport type RpcSimulateTransactionAccountInfo = {\n  executable: boolean;\n  owner: string;\n  lamports: number;\n  data: string[];\n  rentEpoch?: number;\n};\n\n/**\n * Defines the result of a transaction confirmation.\n * @category Rpc\n */\nexport type RpcConfirmTransactionResult = RpcResultWithContext<{\n  err: TransactionError | null;\n}>;\n\n/**\n * Defines the Transaction Return Data from Simulate Transaction.\n * @category Rpc\n */\nexport type RpcSimulateTransactionTransactionReturnData = {\n  data: [string, 'base64'];\n  programId: string;\n};\n\n/**\n * An implementation of the {@link RpcInterface} that throws an error when called.\n * @category Rpc\n */\nexport function createNullRpc(): RpcInterface {\n  const errorHandler = () => {\n    throw new InterfaceImplementationMissingError('RpcInterface', 'rpc');\n  };\n  return {\n    getEndpoint: errorHandler,\n    getCluster: errorHandler,\n    getAccount: errorHandler,\n    getAccounts: errorHandler,\n    getProgramAccounts: errorHandler,\n    getBlockTime: errorHandler,\n    getBalance: errorHandler,\n    getRent: errorHandler,\n    getSlot: errorHandler,\n    getGenesisHash: errorHandler,\n    getLatestBlockhash: errorHandler,\n    getTransaction: errorHandler,\n    getSignatureStatuses: errorHandler,\n    accountExists: errorHandler,\n    airdrop: errorHandler,\n    call: errorHandler,\n    sendTransaction: errorHandler,\n    simulateTransaction: errorHandler,\n    confirmTransaction: errorHandler,\n  };\n}\n","import type { Nullable, Option } from '@metaplex-foundation/umi-options';\nimport type {\n  PublicKey,\n  PublicKeyInput,\n} from '@metaplex-foundation/umi-public-keys';\nimport type {\n  ArraySerializerOptions,\n  BoolSerializerOptions,\n  BytesSerializerOptions,\n  DataEnumSerializerOptions,\n  DataEnumToSerializerTuple,\n  MapSerializerOptions,\n  NullableSerializerOptions,\n  NumberSerializerOptions,\n  OptionSerializerOptions,\n  PublicKeySerializerOptions,\n  ScalarEnumSerializerOptions,\n  Serializer,\n  SetSerializerOptions,\n  SingleByteNumberSerializerOptions,\n  StringSerializerOptions,\n  StructSerializerOptions,\n  StructToSerializerTuple,\n  TupleSerializerOptions,\n  UnitSerializerOptions,\n  WrapInSerializer,\n} from '@metaplex-foundation/umi-serializers';\nimport { DataEnum, ScalarEnum } from './Enums';\nimport { InterfaceImplementationMissingError } from './errors';\n\n/**\n * Defines the interface for a set of serializers\n * that can be used to serialize/deserialize any Serde types.\n *\n * @category Context and Interfaces\n * @deprecated This interface is deprecated.\n * You can now directly use `@metaplex-foundation/umi/serializers` instead.\n */\nexport interface SerializerInterface {\n  /**\n   * Creates a serializer for a tuple-like array.\n   *\n   * @param items - The serializers to use for each item in the tuple.\n   * @param options - A set of options for the serializer.\n   */\n  tuple: <T extends any[], U extends T = T>(\n    items: WrapInSerializer<[...T], [...U]>,\n    options?: TupleSerializerOptions\n  ) => Serializer<T, U>;\n\n  /**\n   * Creates a serializer for an array of items.\n   *\n   * @param item - The serializer to use for the array's items.\n   * @param options - A set of options for the serializer.\n   */\n  array: <T, U extends T = T>(\n    item: Serializer<T, U>,\n    options?: ArraySerializerOptions\n  ) => Serializer<T[], U[]>;\n\n  /**\n   * Creates a serializer for a map.\n   *\n   * @param key - The serializer to use for the map's keys.\n   * @param value - The serializer to use for the map's values.\n   * @param options - A set of options for the serializer.\n   */\n  map: <TK, TV, UK extends TK = TK, UV extends TV = TV>(\n    key: Serializer<TK, UK>,\n    value: Serializer<TV, UV>,\n    options?: MapSerializerOptions\n  ) => Serializer<Map<TK, TV>, Map<UK, UV>>;\n\n  /**\n   * Creates a serializer for a set.\n   *\n   * @param item - The serializer to use for the set's items.\n   * @param options - A set of options for the serializer.\n   */\n  set: <T, U extends T = T>(\n    item: Serializer<T, U>,\n    options?: SetSerializerOptions\n  ) => Serializer<Set<T>, Set<U>>;\n\n  /**\n   * Creates a serializer for an optional value using the {@link Option} type.\n   *\n   * @param item - The serializer to use for the value that may be present.\n   * @param options - A set of options for the serializer.\n   */\n  option: <T, U extends T = T>(\n    item: Serializer<T, U>,\n    options?: OptionSerializerOptions\n  ) => Serializer<Option<T> | Nullable<T>, Option<U>>;\n\n  /**\n   * Creates a serializer for an optional value using `null` as the `None` value.\n   *\n   * @param item - The serializer to use for the value that may be present.\n   * @param options - A set of options for the serializer.\n   */\n  nullable: <T, U extends T = T>(\n    item: Serializer<T, U>,\n    options?: NullableSerializerOptions\n  ) => Serializer<Nullable<T>, Nullable<U>>;\n\n  /**\n   * Creates a serializer for a custom object.\n   *\n   * @param fields - The name and serializer of each field.\n   * @param options - A set of options for the serializer.\n   */\n  struct: <T extends object, U extends T = T>(\n    fields: StructToSerializerTuple<T, U>,\n    options?: StructSerializerOptions\n  ) => Serializer<T, U>;\n\n  /**\n   * Creates a scalar enum serializer.\n   *\n   * @param constructor - The constructor of the scalar enum.\n   * @param options - A set of options for the serializer.\n   */\n  enum<T>(\n    constructor: ScalarEnum<T> & {},\n    options?: ScalarEnumSerializerOptions\n  ): Serializer<T>;\n\n  /**\n   * Creates a data enum serializer.\n   *\n   * @param variants - The variant serializers of the data enum.\n   * @param options - A set of options for the serializer.\n   */\n  dataEnum<T extends DataEnum, U extends T = T>(\n    variants: DataEnumToSerializerTuple<T, U>,\n    options?: DataEnumSerializerOptions\n  ): Serializer<T, U>;\n\n  /**\n   * Creates a string serializer.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  string: (options?: StringSerializerOptions) => Serializer<string>;\n\n  /**\n   * Creates a boolean serializer.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  bool: (options?: BoolSerializerOptions) => Serializer<boolean>;\n\n  /**\n   * Creates a void serializer.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  unit: (options?: UnitSerializerOptions) => Serializer<void>;\n\n  /**\n   * Creates a serializer for 1-byte unsigned integers.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  u8: (options?: SingleByteNumberSerializerOptions) => Serializer<number>;\n\n  /**\n   * Creates a serializer for 2-bytes unsigned integers.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  u16: (options?: NumberSerializerOptions) => Serializer<number>;\n\n  /**\n   * Creates a serializer for 4-bytes unsigned integers.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  u32: (options?: NumberSerializerOptions) => Serializer<number>;\n\n  /**\n   * Creates a serializer for 8-bytes unsigned integers.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  u64: (\n    options?: NumberSerializerOptions\n  ) => Serializer<number | bigint, bigint>;\n\n  /**\n   * Creates a serializer for 16-bytes unsigned integers.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  u128: (\n    options?: NumberSerializerOptions\n  ) => Serializer<number | bigint, bigint>;\n\n  /**\n   * Creates a serializer for 1-byte signed integers.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  i8: (options?: SingleByteNumberSerializerOptions) => Serializer<number>;\n\n  /**\n   * Creates a serializer for 2-bytes signed integers.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  i16: (options?: NumberSerializerOptions) => Serializer<number>;\n\n  /**\n   * Creates a serializer for 4-bytes signed integers.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  i32: (options?: NumberSerializerOptions) => Serializer<number>;\n\n  /**\n   * Creates a serializer for 8-bytes signed integers.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  i64: (\n    options?: NumberSerializerOptions\n  ) => Serializer<number | bigint, bigint>;\n\n  /**\n   * Creates a serializer for 16-bytes signed integers.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  i128: (\n    options?: NumberSerializerOptions\n  ) => Serializer<number | bigint, bigint>;\n\n  /**\n   * Creates a serializer for 4-bytes floating point numbers.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  f32: (options?: NumberSerializerOptions) => Serializer<number>;\n\n  /**\n   * Creates a serializer for 8-bytes floating point numbers.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  f64: (options?: NumberSerializerOptions) => Serializer<number>;\n\n  /**\n   * Creates a serializer that passes the buffer as-is.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  bytes: (options?: BytesSerializerOptions) => Serializer<Uint8Array>;\n\n  /**\n   * Creates a serializer for 32-bytes public keys.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  publicKey: (\n    options?: PublicKeySerializerOptions\n  ) => Serializer<PublicKey | PublicKeyInput, PublicKey>;\n}\n\n/**\n * An implementation of the {@link SerializerInterface} that throws an error when called.\n * @category Serializers\n */\nexport function createNullSerializer(): SerializerInterface {\n  const errorHandler = () => {\n    throw new InterfaceImplementationMissingError(\n      'SerializerInterface',\n      'serializer'\n    );\n  };\n  return {\n    tuple: errorHandler,\n    array: errorHandler,\n    map: errorHandler,\n    set: errorHandler,\n    option: errorHandler,\n    nullable: errorHandler,\n    struct: errorHandler,\n    enum: errorHandler,\n    dataEnum: errorHandler,\n    string: errorHandler,\n    bool: errorHandler,\n    unit: errorHandler,\n    u8: errorHandler,\n    u16: errorHandler,\n    u32: errorHandler,\n    u64: errorHandler,\n    u128: errorHandler,\n    i8: errorHandler,\n    i16: errorHandler,\n    i32: errorHandler,\n    i64: errorHandler,\n    i128: errorHandler,\n    f32: errorHandler,\n    f64: errorHandler,\n    bytes: errorHandler,\n    publicKey: errorHandler,\n  };\n}\n","/**\n * Chunks an array into smaller arrays of (at most) the specified size.\n * @category Utils\n */\nexport const chunk = <T>(array: T[], chunkSize: number): T[][] =>\n  array.reduce((chunks, item, index) => {\n    const chunkIndex = Math.floor(index / chunkSize);\n\n    if (!chunks[chunkIndex]) {\n      chunks[chunkIndex] = [];\n    }\n\n    chunks[chunkIndex].push(item);\n\n    return chunks;\n  }, [] as T[][]);\n\n/**\n * Zips two arrays together, using the provided function to map the values.\n * @category Utils\n */\nexport const zipMap = <T, U, V>(\n  left: T[],\n  right: U[],\n  fn: (t: T, u: U | null, i: number) => V\n): V[] => left.map((t: T, index) => fn(t, right?.[index] ?? null, index));\n\n/**\n * Deduplicates an array by the provided function.\n * @category Utils\n */\nexport const uniqueBy = <T>(array: T[], fn: (a: T, b: T) => boolean): T[] =>\n  array.reduce((acc, v) => {\n    if (!acc.some((x) => fn(v, x))) acc.push(v);\n    return acc;\n  }, [] as T[]);\n","import {\n  PublicKey,\n  PublicKeyInput,\n} from '@metaplex-foundation/umi-public-keys';\nimport { Transaction } from './Transaction';\nimport { uniqueBy } from './utils';\n\n/**\n * Defines a public key that can sign transactions and messages.\n * @category Context and Interfaces\n */\nexport interface Signer {\n  /** The public key of the Signer. */\n  readonly publicKey: PublicKey;\n  /** Signs the given message. */\n  readonly signMessage: (message: Uint8Array) => Promise<Uint8Array>;\n  /** Signs the given transaction. */\n  readonly signTransaction: (transaction: Transaction) => Promise<Transaction>;\n  /** Signs all the given transactions at once. */\n  readonly signAllTransactions: (\n    transactions: Transaction[]\n  ) => Promise<Transaction[]>;\n}\n\n/**\n * Signs a transaction using the provided signers.\n * @category Signers and PublicKeys\n */\nexport const signTransaction = async (\n  transaction: Transaction,\n  signers: Signer[]\n): Promise<Transaction> =>\n  signers.reduce(async (promise, signer) => {\n    const unsigned = await promise;\n    return signer.signTransaction(unsigned);\n  }, Promise.resolve(transaction));\n\n/**\n * Signs multiple transactions using the provided signers\n * such that signers that need to sign multiple transactions\n * sign them all at once using the `signAllTransactions` method.\n *\n * @category Signers and PublicKeys\n */\nexport const signAllTransactions = async (\n  transactionsWithSigners: {\n    transaction: Transaction;\n    signers: Signer[];\n  }[]\n): Promise<Transaction[]> => {\n  const transactions = transactionsWithSigners.map((item) => item.transaction);\n  const signersWithTransactions = transactionsWithSigners.reduce(\n    (all, { signers }, index) => {\n      signers.forEach((signer) => {\n        const item = all.find(\n          (item) => item.signer.publicKey === signer.publicKey\n        );\n        if (item) {\n          item.indices.push(index);\n        } else {\n          all.push({ signer, indices: [index] });\n        }\n      });\n      return all;\n    },\n    [] as { signer: Signer; indices: number[] }[]\n  );\n\n  return signersWithTransactions.reduce(\n    async (promise, { signer, indices }) => {\n      const transactions = await promise;\n      if (indices.length === 1) {\n        const unsigned = transactions[indices[0]];\n        transactions[indices[0]] = await signer.signTransaction(unsigned);\n        return transactions;\n      }\n      const unsigned = indices.map((index) => transactions[index]);\n      const signed = await signer.signAllTransactions(unsigned);\n      indices.forEach((index, position) => {\n        transactions[index] = signed[position];\n      });\n      return transactions;\n    },\n    Promise.resolve(transactions)\n  );\n};\n\n/**\n * Whether the provided value is a `Signer`.\n * @category Signers and PublicKeys\n */\nexport const isSigner = (value: PublicKeyInput | Signer): value is Signer =>\n  typeof value === 'object' && 'publicKey' in value && 'signMessage' in value;\n\n/**\n * Deduplicates the provided signers by public key.\n * @category Signers and PublicKeys\n */\nexport const uniqueSigners = (signers: Signer[]): Signer[] =>\n  uniqueBy(signers, (a, b) => a.publicKey === b.publicKey);\n\n/**\n * Creates a `Signer` that, when required to sign, does nothing.\n * This can be useful when libraries require a `Signer` but\n * we don't have one in the current environment. For example,\n * if the transaction will then be signed in a backend server.\n *\n * @category Signers and PublicKeys\n */\nexport const createNoopSigner = (publicKey: PublicKey): Signer => ({\n  publicKey,\n  async signMessage(message: Uint8Array): Promise<Uint8Array> {\n    return message;\n  },\n  async signTransaction(transaction: Transaction): Promise<Transaction> {\n    return transaction;\n  },\n  async signAllTransactions(\n    transactions: Transaction[]\n  ): Promise<Transaction[]> {\n    return transactions;\n  },\n});\n\n/**\n * Creates a `Signer` that, when required to sign, throws an error.\n * @category Signers and PublicKeys\n */\nexport function createNullSigner(): Signer {\n  const error = new Error(\n    'Trying to use a NullSigner. ' +\n      'Did you forget to set a Signer on your Umi instance? ' +\n      'See the `signerIdentity` method for more information.'\n  );\n  const errorHandler = () => {\n    throw error;\n  };\n  return {\n    get publicKey(): PublicKey {\n      throw error;\n    },\n    signMessage: errorHandler,\n    signTransaction: errorHandler,\n    signAllTransactions: errorHandler,\n  };\n}\n","import { InterfaceImplementationMissingError } from './errors';\nimport type {\n  SerializedTransaction,\n  SerializedTransactionMessage,\n  Transaction,\n  TransactionInput,\n  TransactionMessage,\n} from './Transaction';\n\n/**\n * Defines the interface for a transaction factory.\n * It allows us to create, serialize and deserialize transactions and their messages.\n *\n * @category Context and Interfaces\n */\nexport interface TransactionFactoryInterface {\n  /** Creates a new transaction from a given input. */\n  create(input: TransactionInput): Transaction;\n  /** Serializes a transaction. */\n  serialize(transaction: Transaction): SerializedTransaction;\n  /** Deserializes a transaction. */\n  deserialize(serializedTransaction: SerializedTransaction): Transaction;\n  /** Serializes a transaction message. */\n  serializeMessage(message: TransactionMessage): SerializedTransactionMessage;\n  /** Deserializes a transaction message. */\n  deserializeMessage(\n    serializedMessage: SerializedTransactionMessage\n  ): TransactionMessage;\n}\n\n/**\n * An implementation of the {@link TransactionFactoryInterface} that throws an error when called.\n * @category Transactions\n */\nexport function createNullTransactionFactory(): TransactionFactoryInterface {\n  const errorHandler = () => {\n    throw new InterfaceImplementationMissingError(\n      'TransactionFactoryInterface',\n      'transactions'\n    );\n  };\n  return {\n    create: errorHandler,\n    serialize: errorHandler,\n    deserialize: errorHandler,\n    serializeMessage: errorHandler,\n    deserializeMessage: errorHandler,\n  };\n}\n","import type { Amount } from './Amount';\nimport { InterfaceImplementationMissingError } from './errors';\nimport type { GenericAbortSignal } from './GenericAbortSignal';\nimport type { GenericFile } from './GenericFile';\n\n/**\n * Defines the interface for an uploader.\n * It allows us to upload files and get their URIs.\n *\n * @category Context and Interfaces\n */\nexport interface UploaderInterface {\n  /** Uploads multiple files and returns their URIs. */\n  upload: (\n    files: GenericFile[],\n    options?: UploaderUploadOptions\n  ) => Promise<string[]>;\n\n  /** Uploads a JSON object and returns its URI. */\n  uploadJson: <T>(json: T, options?: UploaderUploadOptions) => Promise<string>;\n\n  /** Gets the price to upload a list of files. */\n  getUploadPrice: (\n    files: GenericFile[],\n    options?: UploaderGetUploadPriceOptions\n  ) => Promise<Amount>;\n}\n\n/**\n * The options that can be passed when fetching the upload price.\n * @category Storage\n */\nexport type UploaderGetUploadPriceOptions = {\n  signal?: GenericAbortSignal;\n};\n\n/**\n * The options that can be passed when uploading files.\n * @category Storage\n */\nexport type UploaderUploadOptions = {\n  onProgress?: (percent: number, ...args: any) => void;\n  signal?: GenericAbortSignal;\n  manifest?: boolean;\n};\n\n/**\n * An implementation of the {@link UploaderInterface} that throws an error when called.\n * @category Storage\n */\nexport function createNullUploader(): UploaderInterface {\n  const errorHandler = () => {\n    throw new InterfaceImplementationMissingError(\n      'UploaderInterface',\n      'uploader'\n    );\n  };\n  return {\n    upload: errorHandler,\n    uploadJson: errorHandler,\n    getUploadPrice: errorHandler,\n  };\n}\n","import {\n  DownloaderInterface,\n  createNullDownloader,\n} from './DownloaderInterface';\nimport { EddsaInterface, createNullEddsa } from './EddsaInterface';\nimport { HttpInterface, createNullHttp } from './HttpInterface';\nimport {\n  createNullProgramRepository,\n  ProgramRepositoryInterface,\n} from './ProgramRepositoryInterface';\nimport { createNullRpc, RpcInterface } from './RpcInterface';\nimport {\n  createNullSerializer,\n  SerializerInterface,\n} from './SerializerInterface';\nimport { createNullSigner, Signer } from './Signer';\nimport {\n  createNullTransactionFactory,\n  TransactionFactoryInterface,\n} from './TransactionFactoryInterface';\nimport { createNullUploader, UploaderInterface } from './UploaderInterface';\n\n/**\n * A Umi context object that uses all of the interfaces provided by Umi.\n * Once created, the end-user can pass this object to any function that\n * requires some or all of these interfaces.\n *\n * @category Context and Interfaces\n */\nexport interface Context {\n  /** An interface for downloading files from URIs. */\n  downloader: DownloaderInterface;\n  /** An interface for managing public and private keys. */\n  eddsa: EddsaInterface;\n  /** An interface for sending HTTP requests. */\n  http: HttpInterface;\n  /** The signer using your app. */\n  identity: Signer;\n  /** The signer paying for things, usually the same as the `identity`. */\n  payer: Signer;\n  /** An interface for registering and retrieving programs. */\n  programs: ProgramRepositoryInterface;\n  /** An interface for sending RPC requests. */\n  rpc: RpcInterface;\n  /**\n   * An interface for serializing various types.\n   * @deprecated This interface is deprecated.\n   * You can now directly use `@metaplex-foundation/umi/serializers` instead.\n   */\n  serializer: SerializerInterface;\n  /** An interface for managing transactions. */\n  transactions: TransactionFactoryInterface;\n  /** An interface for uploading files and getting their URIs. */\n  uploader: UploaderInterface;\n}\n\n/**\n * A helper method that creates a Umi context object using only\n * Null implementations of the interfaces. This can be useful to\n * create a full Umi context object when only a few of the interfaces\n * are needed.\n *\n * @category Context and Interfaces\n */\nexport const createNullContext = (): Context => ({\n  downloader: createNullDownloader(),\n  eddsa: createNullEddsa(),\n  http: createNullHttp(),\n  identity: createNullSigner(),\n  payer: createNullSigner(),\n  programs: createNullProgramRepository(),\n  rpc: createNullRpc(),\n  serializer: createNullSerializer(),\n  transactions: createNullTransactionFactory(),\n  uploader: createNullUploader(),\n});\n","import {\n  NumberSerializer,\n  Serializer,\n  mapSerializer,\n} from '@metaplex-foundation/umi-serializers';\nimport { BigIntInput, createBigInt } from './BigInt';\n\n/**\n * Defines a string that can be parsed into a Date object.\n * For instance, `\"2020-01-01T00:00:00.000Z\"`.\n * @category Utils — DateTime\n */\nexport type DateTimeString = string;\n\n/**\n * Defines all the types that can be used to create a DateTime.\n * @category Utils — DateTime\n */\nexport type DateTimeInput = DateTimeString | BigIntInput | Date;\n\n/**\n * Defines a point in time via a Unix timestamp represented as a BigInt.\n * @category Utils — DateTime\n */\nexport type DateTime = bigint;\n\n/**\n * Creates a {@link DateTime} from a {@link DateTimeInput}.\n * @category Utils — DateTime\n */\nexport const dateTime = (value: DateTimeInput): DateTime => {\n  if (typeof value === 'string' || isDateObject(value)) {\n    const date = new Date(value);\n    const timestamp = Math.floor(date.getTime() / 1000);\n    return createBigInt(timestamp);\n  }\n\n  return createBigInt(value);\n};\n\n/**\n * Helper function to get the current time as a {@link DateTime}.\n * @category Utils — DateTime\n */\nexport const now = (): DateTime => dateTime(new Date(Date.now()));\n\n/**\n * Whether the given value is a Date object.\n * @category Utils — DateTime\n */\nconst isDateObject = (value: any): value is Date =>\n  Object.prototype.toString.call(value) === '[object Date]';\n\n/**\n * Formats a {@link DateTime} as a string.\n * @category Utils — DateTime\n */\nexport const formatDateTime = (\n  value: DateTime,\n  locales: Intl.LocalesArgument = 'en-US',\n  options: Intl.DateTimeFormatOptions = {\n    month: 'short',\n    day: 'numeric',\n    year: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    timeZone: 'UTC',\n  }\n): string => {\n  const date = new Date(Number(value * 1000n));\n\n  return date.toLocaleDateString(locales, options);\n};\n\n/**\n * Converts a number serializer into a DateTime serializer.\n * @category Utils — DateTime\n */\nexport const mapDateTimeSerializer = (\n  serializer: NumberSerializer\n): Serializer<DateTimeInput, DateTime> =>\n  mapSerializer(\n    serializer as Serializer<number | bigint>,\n    (value: DateTimeInput): number | bigint => {\n      const date = dateTime(value);\n      return date > Number.MAX_SAFE_INTEGER ? date : Number(date);\n    },\n    (value: number | bigint): DateTime => dateTime(value)\n  );\n","/**\n * Generate a random string of the given length.\n * Warning: This is not a cryptographically secure random string generator.\n * @category Utils\n */\nexport const generateRandomString = (\n  length = 20,\n  alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n) => {\n  let result = '';\n  const alphabetLength = alphabet.length;\n  for (let i = 0; i < length; i += 1) {\n    result += alphabet.charAt(Math.floor(Math.random() * alphabetLength));\n  }\n\n  return result;\n};\n","import { utf8 } from '@metaplex-foundation/umi-serializers';\nimport { generateRandomString } from './utils';\n\n/**\n * A generic definition of a File represented as a buffer with\n * extra metadata such as a file name, content type, and tags.\n *\n * @category Storage\n */\nexport type GenericFile = {\n  readonly buffer: Uint8Array;\n  readonly fileName: string;\n  readonly displayName: string;\n  readonly uniqueName: string;\n  readonly contentType: string | null;\n  readonly extension: string | null;\n  readonly tags: GenericFileTag[];\n};\n\n/**\n * Represent a custom tag that can be attached to a file.\n * @category Storage\n */\nexport type GenericFileTag = { name: string; value: string };\n\n/**\n * Alias for the native File interface from the browser.\n * @category Storage\n */\nexport type BrowserFile = File;\n\n/**\n * Represents the options that can be provided when creating a {@link GenericFile}.\n * @category Storage\n */\nexport type GenericFileOptions = {\n  displayName?: string;\n  uniqueName?: string;\n  contentType?: string;\n  extension?: string;\n  tags?: { name: string; value: string }[];\n};\n\n/**\n * Creates a new {@link GenericFile} from a buffer and a file name.\n * @category Storage\n */\nexport const createGenericFile = (\n  content: string | Uint8Array,\n  fileName: string,\n  options: GenericFileOptions = {}\n): GenericFile => ({\n  buffer: typeof content === 'string' ? utf8.serialize(content) : content,\n  fileName,\n  displayName: options.displayName ?? fileName,\n  uniqueName: options.uniqueName ?? generateRandomString(),\n  contentType: options.contentType ?? null,\n  extension: options.extension ?? getExtension(fileName),\n  tags: options.tags ?? [],\n});\n\n/**\n * Creates a new {@link GenericFile} from a {@link BrowserFile}.\n * @category Storage\n */\nexport const createGenericFileFromBrowserFile = async (\n  browserFile: BrowserFile,\n  options: GenericFileOptions = {}\n): Promise<GenericFile> =>\n  createGenericFile(\n    new Uint8Array(await browserFile.arrayBuffer()),\n    browserFile.name,\n    options\n  );\n\n/**\n * Creates a new {@link GenericFile} from a JSON object.\n * @category Storage\n */\nexport const createGenericFileFromJson = <T>(\n  json: T,\n  fileName = 'inline.json',\n  options: GenericFileOptions = {}\n): GenericFile =>\n  createGenericFile(JSON.stringify(json), fileName, {\n    contentType: 'application/json',\n    ...options,\n  });\n\n/**\n * Creates a new {@link BrowserFile} from a {@link GenericFile}.\n * @category Storage\n */\nexport const createBrowserFileFromGenericFile = (\n  file: GenericFile\n): BrowserFile => new File([file.buffer as BlobPart], file.fileName);\n\n/**\n * Returns the content of a {@link GenericFile} as a parsed JSON object.\n * @category Storage\n */\nexport const parseJsonFromGenericFile = <T>(file: GenericFile): T =>\n  JSON.parse(new TextDecoder().decode(file.buffer));\n\n/**\n * Returns the total size of a list of {@link GenericFile} in bytes.\n * @category Storage\n */\nexport const getBytesFromGenericFiles = (...files: GenericFile[]): number =>\n  files.reduce((acc, file) => acc + file.buffer.byteLength, 0);\n\n/**\n * Whether the given value is a {@link GenericFile}.\n * @category Storage\n */\nexport const isGenericFile = (file: any): file is GenericFile =>\n  file != null &&\n  typeof file === 'object' &&\n  'buffer' in file &&\n  'fileName' in file &&\n  'displayName' in file &&\n  'uniqueName' in file &&\n  'contentType' in file &&\n  'extension' in file &&\n  'tags' in file;\n\n/**\n * Returns the extension of a file name.\n * @category Storage\n */\nconst getExtension = (fileName: string): string | null => {\n  const lastDotIndex = fileName.lastIndexOf('.');\n\n  return lastDotIndex < 0 ? null : fileName.slice(lastDotIndex + 1);\n};\n","import { publicKey, PublicKey } from '@metaplex-foundation/umi-public-keys';\nimport type {\n  Serializer,\n  StructToSerializerTuple,\n} from '@metaplex-foundation/umi-serializers';\nimport { base10, base58, base64 } from '@metaplex-foundation/umi-serializers';\nimport type { RpcAccount } from './Account';\nimport type { Context } from './Context';\nimport { SdkError } from './errors';\nimport type {\n  RpcDataFilter,\n  RpcDataSlice,\n  RpcGetProgramAccountsOptions,\n} from './RpcInterface';\n\n/**\n * Callback for sorting raw accounts from `getProgramAccounts` RPC requests.\n * @category Utils — GpaBuilder\n */\nexport type GpaBuilderSortCallback = (a: RpcAccount, b: RpcAccount) => number;\n\n/**\n * Callback for mapping raw accounts into any type.\n * @category Utils — GpaBuilder\n */\nexport type GpaBuilderMapCallback<T> = (account: RpcAccount) => T;\n\n/**\n * Get the GPA field offsets and serializers from their object definition.\n * @category Utils — GpaBuilder\n */\nexport type GpaBuilderFieldSerializers<T extends object, U extends T> = {\n  [K in keyof T]: [number | null, Serializer<T[K], U[K]>];\n};\n\n/**\n * Builder for `getProgramAccounts` RPC requests.\n * @category Utils — GpaBuilder\n */\nexport class GpaBuilder<\n  Account extends object = RpcAccount,\n  Fields extends object = {}\n> {\n  constructor(\n    protected readonly context: Pick<Context, 'rpc'>,\n    readonly programId: PublicKey,\n    readonly options: {\n      readonly fields?: GpaBuilderFieldSerializers<Fields, Fields>;\n      readonly deserializeCallback?: GpaBuilderMapCallback<Account>;\n      readonly dataSlice?: RpcDataSlice;\n      readonly filters?: RpcDataFilter[];\n      readonly sortCallback?: GpaBuilderSortCallback;\n    } = {}\n  ) {}\n\n  reset(): GpaBuilder<Account, Fields> {\n    return new GpaBuilder<Account, Fields>(this.context, this.programId, {\n      fields: this.options.fields,\n      deserializeCallback: this.options.deserializeCallback,\n    });\n  }\n\n  registerFields<T extends object>(\n    fields: GpaBuilderFieldSerializers<T, T>\n  ): GpaBuilder<Account, T> {\n    return new GpaBuilder<Account, T>(this.context, this.programId, {\n      ...this.options,\n      fields,\n    });\n  }\n\n  registerFieldsFromStruct<T extends object>(\n    structFields: StructToSerializerTuple<T, T>\n  ): GpaBuilder<Account, T> {\n    let offset: number | null = 0;\n    const fields = structFields.reduce((acc, [field, serializer]) => {\n      acc[field] = [offset, serializer];\n      offset =\n        offset === null || serializer.fixedSize === null\n          ? null\n          : offset + serializer.fixedSize;\n      return acc;\n    }, {} as GpaBuilderFieldSerializers<T, T>);\n    return this.registerFields(fields);\n  }\n\n  deserializeUsing<T extends object>(\n    callback: GpaBuilderMapCallback<T>\n  ): GpaBuilder<T, Fields> {\n    return new GpaBuilder<T, Fields>(this.context, this.programId, {\n      ...this.options,\n      deserializeCallback: callback,\n    });\n  }\n\n  slice(offset: number, length: number): GpaBuilder<Account, Fields> {\n    return new GpaBuilder<Account, Fields>(this.context, this.programId, {\n      ...this.options,\n      dataSlice: { offset, length },\n    });\n  }\n\n  sliceField(\n    field: keyof Fields,\n    offset?: number\n  ): GpaBuilder<Account, Fields> {\n    const [effectiveOffset, serializer] = this.getField(field, offset);\n    if (!serializer.fixedSize) {\n      throw new SdkError(\n        `Cannot slice field [${field as string}] because its size is variable.`\n      );\n    }\n    return this.slice(effectiveOffset, serializer.fixedSize);\n  }\n\n  withoutData(): GpaBuilder<Account, Fields> {\n    return this.slice(0, 0);\n  }\n\n  addFilter(...filters: RpcDataFilter[]): GpaBuilder<Account, Fields> {\n    return new GpaBuilder<Account, Fields>(this.context, this.programId, {\n      ...this.options,\n      filters: [...(this.options.filters ?? []), ...filters],\n    });\n  }\n\n  where(\n    offset: number,\n    data: string | bigint | number | boolean | Uint8Array | PublicKey\n  ): GpaBuilder<Account, Fields> {\n    let bytes: Uint8Array;\n    if (typeof data === 'string') {\n      bytes = base58.serialize(data);\n    } else if (\n      typeof data === 'number' ||\n      typeof data === 'bigint' ||\n      typeof data === 'boolean'\n    ) {\n      bytes = base10.serialize(BigInt(data).toString());\n    } else {\n      bytes = new Uint8Array(data);\n    }\n\n    return this.addFilter({ memcmp: { offset, bytes } });\n  }\n\n  whereField<K extends keyof Fields>(\n    field: K,\n    data: Fields[K],\n    offset?: number\n  ): GpaBuilder<Account, Fields> {\n    const [effectiveOffset, serializer] = this.getField(field, offset);\n    return this.where(effectiveOffset, serializer.serialize(data));\n  }\n\n  whereSize(dataSize: number): GpaBuilder<Account, Fields> {\n    return this.addFilter({ dataSize });\n  }\n\n  sortUsing(callback: GpaBuilderSortCallback): GpaBuilder<Account, Fields> {\n    return new GpaBuilder(this.context, this.programId, {\n      ...this.options,\n      sortCallback: callback,\n    });\n  }\n\n  async get(options: RpcGetProgramAccountsOptions = {}): Promise<RpcAccount[]> {\n    const accounts = await this.context.rpc.getProgramAccounts(this.programId, {\n      ...options,\n      dataSlice: options.dataSlice ?? this.options.dataSlice,\n      filters: [...(options.filters ?? []), ...(this.options.filters ?? [])],\n    });\n\n    if (this.options.sortCallback) {\n      accounts.sort(this.options.sortCallback);\n    }\n\n    return accounts;\n  }\n\n  async getAndMap<T>(\n    callback: GpaBuilderMapCallback<T>,\n    options: RpcGetProgramAccountsOptions = {}\n  ): Promise<T[]> {\n    return (await this.get(options)).map(callback);\n  }\n\n  async getDeserialized(\n    options: RpcGetProgramAccountsOptions = {}\n  ): Promise<Account[]> {\n    const rpcAccounts = await this.get(options);\n    if (!this.options.deserializeCallback) return rpcAccounts as Account[];\n    return rpcAccounts.map(this.options.deserializeCallback);\n  }\n\n  async getPublicKeys(\n    options: RpcGetProgramAccountsOptions = {}\n  ): Promise<PublicKey[]> {\n    return this.getAndMap((account) => account.publicKey, options);\n  }\n\n  async getDataAsPublicKeys(\n    options: RpcGetProgramAccountsOptions = {}\n  ): Promise<PublicKey[]> {\n    return this.getAndMap((account) => {\n      try {\n        return publicKey(account.data);\n      } catch (error) {\n        const message =\n          `Following a getProgramAccount call, you are trying to use an ` +\n          `account's data (or a slice of it) as a public key. ` +\n          `However, we encountered an account ` +\n          `[${account.publicKey}] whose data ` +\n          `[base64=${base64.deserialize(account.data)}] ` +\n          `is not a valid public key.`;\n        throw new SdkError(message);\n      }\n    }, options);\n  }\n\n  protected getField<K extends keyof Fields>(\n    fieldName: K,\n    forcedOffset?: number\n  ): [number, Serializer<Fields[K]>] {\n    if (!this.options.fields) {\n      throw new SdkError('Fields are not defined in this GpaBuilder.');\n    }\n\n    const field = this.options.fields[fieldName];\n    if (!field) {\n      throw new SdkError(\n        `Field [${fieldName as string}] is not defined in this GpaBuilder.`\n      );\n    }\n\n    const [offset, serializer] = field;\n    if (forcedOffset !== undefined) {\n      return [forcedOffset, serializer];\n    }\n\n    if (offset === null) {\n      throw new SdkError(\n        `Field [${fieldName as string}] does not have a fixed offset. ` +\n          `This is likely because it is not in the fixed part of ` +\n          `the account's data. In other words, it is located after ` +\n          `a field of variable length which means we cannot find a ` +\n          `fixed offset for the filter. You may go around this by ` +\n          `providing an offset explicitly.`\n      );\n    }\n\n    return [offset, serializer];\n  }\n}\n\n/**\n * Creates a new {@link GpaBuilder} instance.\n * @category Utils — GpaBuilder\n */\nexport const gpaBuilder = (\n  context: Pick<Context, 'rpc'>,\n  programId: PublicKey\n): GpaBuilder => new GpaBuilder(context, programId);\n","import type { GenericAbortSignal } from './GenericAbortSignal';\nimport type { HttpHeaderValue, HttpRequestHeaders } from './HttpHeaders';\n\n/** Defines a number in milliseconds. */\ntype Milliseconds = number;\n\n/**\n * Defines a HTTP Request with custom data.\n * @category Http\n */\nexport type HttpRequest<D = any> = {\n  method: HttpMethod;\n  url: string;\n  data: D;\n  headers: HttpRequestHeaders;\n  maxRedirects?: number;\n  timeout?: Milliseconds;\n  signal?: GenericAbortSignal;\n};\n\n/**\n * Creates a new {@link HttpRequestBuilder} instance.\n * @category Http\n */\nexport const request = () =>\n  new HttpRequestBuilder<undefined>({\n    method: 'get',\n    data: undefined,\n    headers: {},\n    url: '',\n  });\n\n/**\n * A builder for constructing {@link HttpRequest} instances.\n * @category Http\n */\nexport class HttpRequestBuilder<D> implements HttpRequest<D> {\n  protected readonly request: HttpRequest<D>;\n\n  constructor(request: HttpRequest<D>) {\n    this.request = request;\n  }\n\n  asJson() {\n    return this.contentType('application/json');\n  }\n\n  asMultipart() {\n    return this.contentType('multipart/form-data');\n  }\n\n  asForm() {\n    return this.contentType('application/x-www-form-urlencoded');\n  }\n\n  accept(contentType: string) {\n    return this.withHeader('accept', contentType);\n  }\n\n  contentType(contentType: string) {\n    return this.withHeader('content-type', contentType);\n  }\n\n  userAgent(userAgent: string) {\n    return this.withHeader('user-agent', userAgent);\n  }\n\n  withToken(token: string, type: string = 'Bearer') {\n    return this.withHeader('authorization', `${type} ${token}`);\n  }\n\n  withHeader(key: string, value: HttpHeaderValue) {\n    return this.withHeaders({ [key]: value });\n  }\n\n  withHeaders(headers: HttpRequestHeaders) {\n    return new HttpRequestBuilder<D>({\n      ...this.request,\n      headers: { ...this.request.headers, ...headers },\n    });\n  }\n\n  dontFollowRedirects() {\n    return this.followRedirects(0);\n  }\n\n  followRedirects(maxRedirects?: number) {\n    return new HttpRequestBuilder<D>({ ...this.request, maxRedirects });\n  }\n\n  withoutTimeout() {\n    return this.withTimeout(0);\n  }\n\n  withTimeout(timeout?: Milliseconds) {\n    return new HttpRequestBuilder<D>({ ...this.request, timeout });\n  }\n\n  withAbortSignal(signal?: GenericAbortSignal) {\n    return new HttpRequestBuilder<D>({ ...this.request, signal });\n  }\n\n  withEndpoint(method: HttpMethod, url: string) {\n    return new HttpRequestBuilder<D>({ ...this.request, method, url });\n  }\n\n  withParams(\n    params: string | URLSearchParams | string[][] | Record<string, string>\n  ) {\n    const url = new URL(this.request.url);\n    const newSearch = new URLSearchParams(params);\n    const search = new URLSearchParams(url.searchParams);\n    [...newSearch.entries()].forEach(([key, val]) => {\n      search.append(key, val);\n    });\n    url.search = search.toString();\n    return new HttpRequestBuilder<D>({ ...this.request, url: url.toString() });\n  }\n\n  withData<T>(data: T) {\n    return new HttpRequestBuilder<T>({ ...this.request, data });\n  }\n\n  get(url: string) {\n    return this.withEndpoint('get', url);\n  }\n\n  post(url: string) {\n    return this.withEndpoint('post', url);\n  }\n\n  put(url: string) {\n    return this.withEndpoint('put', url);\n  }\n\n  patch(url: string) {\n    return this.withEndpoint('patch', url);\n  }\n\n  delete(url: string) {\n    return this.withEndpoint('delete', url);\n  }\n\n  get method(): HttpMethod {\n    return this.request.method;\n  }\n\n  get url(): string {\n    return this.request.url;\n  }\n\n  get data(): D {\n    return this.request.data;\n  }\n\n  get headers(): HttpRequestHeaders {\n    return this.request.headers;\n  }\n\n  get maxRedirects(): number | undefined {\n    return this.request.maxRedirects;\n  }\n\n  get timeout(): Milliseconds | undefined {\n    return this.request.timeout;\n  }\n\n  get signal(): GenericAbortSignal | undefined {\n    return this.request.signal;\n  }\n}\n\n/**\n * Defines a HTTP method as a string.\n * @category Http\n */\nexport type HttpMethod =\n  | 'get'\n  | 'GET'\n  | 'delete'\n  | 'DELETE'\n  | 'head'\n  | 'HEAD'\n  | 'options'\n  | 'OPTIONS'\n  | 'post'\n  | 'POST'\n  | 'put'\n  | 'PUT'\n  | 'patch'\n  | 'PATCH'\n  | 'purge'\n  | 'PURGE'\n  | 'link'\n  | 'LINK'\n  | 'unlink'\n  | 'UNLINK';\n","import { PublicKey } from '@metaplex-foundation/umi-public-keys';\nimport { Amount, SolAmount } from './Amount';\nimport type { Instruction } from './Instruction';\nimport type { Commitment } from './RpcInterface';\n\n/**\n * The maximum amount of bytes that can be used for a transaction.\n * @category Transactions\n */\nexport const TRANSACTION_SIZE_LIMIT = 1232;\n\n/**\n * The version of a transaction.\n * - Legacy is the very first iteration of Solana transactions.\n * - V0 introduces the concept of versioned transaction for\n * the first time and adds supports for address lookup tables.\n *\n * @category Transactions\n */\nexport type TransactionVersion = 'legacy' | 0;\n\n/**\n * A Uint8Array that represents a serialized transaction.\n * @category Transactions\n */\nexport type SerializedTransaction = Uint8Array;\n\n/**\n * A Uint8Array that represents the serialized message of a transaction.\n * @category Transactions\n */\nexport type SerializedTransactionMessage = Uint8Array;\n\n/**\n * A Uint8Array that represents a transaction signature.\n * @category Transactions\n */\nexport type TransactionSignature = Uint8Array;\n\n/**\n * Defines a transaction error.\n * @category Transactions\n */\nexport type TransactionError = {} | string;\n\n/**\n * Defines a blockhash.\n * @category Transactions\n */\nexport type Blockhash = string;\n\n/**\n * Defines a blockhash with its expiry block height.\n * @category Transactions\n */\nexport type BlockhashWithExpiryBlockHeight = {\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n};\n\n/**\n * Defines a transaction.\n * @category Transactions\n */\nexport interface Transaction {\n  readonly message: TransactionMessage;\n  readonly serializedMessage: SerializedTransactionMessage;\n  readonly signatures: TransactionSignature[];\n}\n\n/**\n * Defines the message of a transaction.\n * @category Transactions\n */\nexport interface TransactionMessage {\n  readonly version: TransactionVersion;\n  readonly header: TransactionMessageHeader;\n  readonly accounts: PublicKey[];\n  readonly blockhash: Blockhash;\n  readonly instructions: CompiledInstruction[];\n  readonly addressLookupTables: CompiledAddressLookupTable[];\n}\n\n/**\n * Defines the header of a transaction message.\n * @category Transactions\n */\nexport type TransactionMessageHeader = {\n  readonly numRequiredSignatures: number;\n  readonly numReadonlySignedAccounts: number;\n  readonly numReadonlyUnsignedAccounts: number;\n};\n\n/**\n * Defines an instruction that uses indexes to reference accounts.\n * @category Transactions\n */\nexport type CompiledInstruction = {\n  readonly programIndex: number;\n  readonly accountIndexes: number[];\n  readonly data: Uint8Array;\n};\n\n/**\n * Defines an address lookup table that uses indexes to reference accounts.\n * @category Transactions\n */\nexport type CompiledAddressLookupTable = {\n  readonly publicKey: PublicKey;\n  readonly writableIndexes: number[];\n  readonly readonlyIndexes: number[];\n};\n\n/**\n * Defines a transaction with its post-execution metadata.\n * @category Transactions\n */\nexport type TransactionWithMeta = Transaction & {\n  readonly meta: TransactionMeta;\n};\n\n/**\n * Defines the post-execution metadata of a transaction.\n * @category Transactions\n */\nexport type TransactionMeta = {\n  readonly fee: SolAmount;\n  readonly logs: string[];\n  readonly preBalances: SolAmount[];\n  readonly postBalances: SolAmount[];\n  readonly preTokenBalances: TransactionMetaTokenBalance[];\n  readonly postTokenBalances: TransactionMetaTokenBalance[];\n  readonly innerInstructions: TransactionMetaInnerInstruction[] | null;\n  readonly loadedAddresses: TransactionMetaLoadedAddresses;\n  readonly computeUnitsConsumed: bigint | null;\n  readonly err: TransactionError | null;\n};\n\n/**\n * The balance of a token account before or after a transaction.\n * @category Transactions\n */\nexport type TransactionMetaTokenBalance = {\n  accountIndex: number;\n  amount: Amount;\n  mint: PublicKey;\n  owner: PublicKey | null;\n};\n\n/**\n * The cross program invoked instructions of an instruction.\n * @category Transactions\n */\nexport type TransactionMetaInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * The collection of addresses loaded using address lookup tables.\n * @category Transactions\n */\nexport type TransactionMetaLoadedAddresses = {\n  writable: PublicKey[];\n  readonly: PublicKey[];\n};\n\n/**\n * Defines the various ways to create a transaction.\n * @category Transactions\n */\nexport type TransactionInput = TransactionInputLegacy | TransactionInputV0;\n\n/**\n * Defines transaction input for legacy transactions.\n * @category Transactions\n */\nexport type TransactionInputLegacy = TransactionInputBase & {\n  version: 'legacy';\n};\n\n/**\n * Defines transaction input for V0 transactions.\n * @category Transactions\n */\nexport type TransactionInputV0 = TransactionInputBase & {\n  version?: 0;\n  addressLookupTables?: AddressLookupTableInput[];\n};\n\n/**\n * Defines common transaction input.\n * @category Transactions\n */\nexport type TransactionInputBase = {\n  payer: PublicKey;\n  instructions: Instruction[];\n  blockhash: Blockhash;\n  signatures?: TransactionSignature[];\n};\n\n/**\n * The required data to add an address lookup table to a transaction.\n * @category Transactions\n */\nexport type AddressLookupTableInput = {\n  publicKey: PublicKey;\n  addresses: PublicKey[];\n};\n\n/**\n * The status of a sent transaction.\n * @category Transactions\n */\nexport type TransactionStatus = {\n  /** When the transaction was processed. */\n  slot: number;\n  /** The number of blocks that have been confirmed and voted on in the fork containing `slot`. */\n  confirmations: number | null;\n  /** The transaction error, if any. */\n  error: TransactionError | null;\n  /** The cluster confirmation status, if any. */\n  commitment: Commitment | null;\n};\n\n/**\n * Adds a given signature to the transaction's signature array\n * and returns the updated transaction as a new object.\n *\n * @category Transactions\n */\nexport const addTransactionSignature = (\n  transaction: Transaction,\n  signature: TransactionSignature,\n  signerPublicKey: PublicKey\n): Transaction => {\n  const maxSigners = transaction.message.header.numRequiredSignatures;\n  const signerPublicKeys = transaction.message.accounts.slice(0, maxSigners);\n  const signerIndex = signerPublicKeys.findIndex(\n    (key) => key === signerPublicKey\n  );\n\n  if (signerIndex < 0) {\n    throw new Error(\n      'The provided signer is not required to sign this transaction.'\n    );\n  }\n\n  const newSignatures = [...transaction.signatures];\n  newSignatures[signerIndex] = signature;\n  return { ...transaction, signatures: newSignatures };\n};\n","import type { PublicKey } from '@metaplex-foundation/umi-public-keys';\nimport type { Context } from './Context';\nimport type { Signer } from './Signer';\nimport { addTransactionSignature, Transaction } from './Transaction';\n\n/**\n * Represents a keypair with a public key and a secret key.\n * @category Signers and PublicKeys\n */\nexport type Keypair = {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n};\n\n/**\n * Represent a {@link Signer} that can is aware of its secret key.\n * @category Signers and PublicKeys\n */\nexport type KeypairSigner = Signer & Keypair;\n\n/**\n * Generate a new random {@link KeypairSigner} using the Eddsa interface.\n * @category Signers and PublicKeys\n */\nexport const generateSigner = (\n  context: Pick<Context, 'eddsa'>\n): KeypairSigner =>\n  createSignerFromKeypair(context, context.eddsa.generateKeypair());\n\n/**\n * Creates a {@link KeypairSigner} from a {@link Keypair} object.\n * @category Signers and PublicKeys\n */\nexport const createSignerFromKeypair = (\n  context: Pick<Context, 'eddsa'>,\n  keypair: Keypair\n): KeypairSigner => ({\n  publicKey: keypair.publicKey,\n  secretKey: keypair.secretKey,\n  async signMessage(message: Uint8Array): Promise<Uint8Array> {\n    return context.eddsa.sign(message, keypair);\n  },\n  async signTransaction(transaction: Transaction): Promise<Transaction> {\n    const message = transaction.serializedMessage;\n    const signature = context.eddsa.sign(message, keypair);\n    return addTransactionSignature(transaction, signature, keypair.publicKey);\n  },\n  async signAllTransactions(\n    transactions: Transaction[]\n  ): Promise<Transaction[]> {\n    return Promise.all(\n      transactions.map((transaction) => this.signTransaction(transaction))\n    );\n  },\n});\n\n/**\n * Whether the given signer is a {@link KeypairSigner}.\n * @category Signers and PublicKeys\n */\nexport const isKeypairSigner = (\n  signer: Signer & { secretKey?: Uint8Array }\n): signer is KeypairSigner => signer.secretKey !== undefined;\n","import type { PublicKey } from '@metaplex-foundation/umi-public-keys';\nimport type { Cluster } from './Cluster';\nimport type { ProgramError } from './errors';\n\n/**\n * An error that contains Program logs.\n * @category Programs\n */\nexport type ErrorWithLogs = Error & { logs: string[] };\n\n/**\n * An error that contains a Program error code.\n * @category Programs\n */\nexport type ErrorWithCode = Error & { code: number };\n\n/**\n * Whether the given value is an instance of {@link ErrorWithLogs}.\n * @category Programs\n */\nexport const isErrorWithLogs = (error: unknown): error is ErrorWithLogs =>\n  error instanceof Error && 'logs' in error;\n\n/**\n * Defines a Solana Program that can be\n * registered in Umi's program repository.\n *\n * @category Programs\n */\nexport type Program = {\n  /**\n   * A unique name for the Program in camelCase.\n   *\n   * To avoid conflict with other organizations, it is recommended\n   * to prefix the program name with a namespace that is unique to\n   * your organization. For instance, Metaplex programs are prefixed\n   * with `mpl` like so: `mplTokenMetadata` or `mplCandyMachine`.\n   */\n  name: string;\n\n  /**\n   * The public key of the program.\n   */\n  publicKey: PublicKey;\n\n  /**\n   * Retrieves a {@link ProgramError} from a given error code\n   * or `null` if the error code is not recognized.\n   */\n  getErrorFromCode: (code: number, cause?: Error) => ProgramError | null;\n\n  /**\n   * Retrieves a {@link ProgramError} from a given error name\n   * or `null` if the error name is not recognized.\n   */\n  getErrorFromName: (name: string, cause?: Error) => ProgramError | null;\n\n  /**\n   * A method that returns `true` if the program is available on the given cluster.\n   *\n   * If the same program is available on multiple clusters but using different public keys,\n   * multiple Program instances must be registered such that the `isOnCluster` method\n   * returns `true` for the appropriate cluster.\n   */\n  isOnCluster: (cluster: Cluster) => boolean;\n};\n","import { createSignerFromKeypair, generateSigner, Keypair } from './Keypair';\nimport type { UmiPlugin } from './UmiPlugin';\nimport type { Signer } from './Signer';\n\n/**\n * Umi plugin that sets the identity and the payer to the given signer.\n * @category Signers and PublicKeys\n */\nexport const signerIdentity = (signer: Signer, setPayer = true): UmiPlugin => ({\n  install(umi) {\n    umi.identity = signer;\n    if (setPayer) {\n      umi.payer = signer;\n    }\n  },\n});\n\n/**\n * Umi plugin that only sets the payer to the given signer.\n * @category Signers and PublicKeys\n */\nexport const signerPayer = (signer: Signer): UmiPlugin => ({\n  install(umi) {\n    umi.payer = signer;\n  },\n});\n\n/**\n * Umi plugin that sets the identity and the payer to a randomly generated signer.\n * @category Signers and PublicKeys\n */\nexport const generatedSignerIdentity = (setPayer = true): UmiPlugin => ({\n  install(umi) {\n    const signer = generateSigner(umi);\n    umi.use(signerIdentity(signer, setPayer));\n  },\n});\n\n/**\n * Umi plugin that only sets the payer to a randomly generated signer.\n * @category Signers and PublicKeys\n */\nexport const generatedSignerPayer = (): UmiPlugin => ({\n  install(umi) {\n    const signer = generateSigner(umi);\n    umi.use(signerPayer(signer));\n  },\n});\n\n/**\n * Umi plugin that sets the identity and the payer to a provided keypair.\n * @category Signers and PublicKeys\n */\nexport const keypairIdentity = (\n  keypair: Keypair,\n  setPayer = true\n): UmiPlugin => ({\n  install(umi) {\n    const signer = createSignerFromKeypair(umi, keypair);\n    umi.use(signerIdentity(signer, setPayer));\n  },\n});\n\n/**\n * Umi plugin that only sets the payer to a provided keypair.\n * @category Signers and PublicKeys\n */\nexport const keypairPayer = (keypair: Keypair): UmiPlugin => ({\n  install(umi) {\n    const signer = createSignerFromKeypair(umi, keypair);\n    umi.use(signerPayer(signer));\n  },\n});\n","import { SolAmount } from './Amount';\nimport type { Context } from './Context';\nimport { SdkError } from './errors';\nimport type {\n  AccountMeta,\n  Instruction,\n  SignerMeta,\n  WrappedInstruction,\n} from './Instruction';\nimport type {\n  RpcConfirmTransactionOptions,\n  RpcConfirmTransactionResult,\n  RpcConfirmTransactionStrategy,\n  RpcGetLatestBlockhashOptions,\n  RpcSendTransactionOptions,\n} from './RpcInterface';\nimport { Signer, signTransaction, uniqueSigners } from './Signer';\nimport {\n  AddressLookupTableInput,\n  Blockhash,\n  BlockhashWithExpiryBlockHeight,\n  Transaction,\n  TransactionInput,\n  TransactionSignature,\n  TransactionVersion,\n  TRANSACTION_SIZE_LIMIT,\n} from './Transaction';\n\n/**\n * Defines an generic object with wrapped instructions,\n * such as a {@link TransactionBuilder}.\n * @category Transactions\n */\nexport type HasWrappedInstructions = { items: WrappedInstruction[] };\n\n/**\n * Defines all the possible inputs for adding items to a transaction builder.\n * @category Transactions\n */\nexport type TransactionBuilderItemsInput =\n  | WrappedInstruction\n  | WrappedInstruction[]\n  | HasWrappedInstructions\n  | HasWrappedInstructions[];\n\n/**\n * The available options of a transaction builder.\n * @category Transactions\n */\nexport type TransactionBuilderOptions = {\n  /** The signer paying for the transaction fee. */\n  feePayer?: Signer;\n  /** The version of the transaction to build. */\n  version?: TransactionVersion;\n  /** The address lookup tables to attach to the built transaction. */\n  addressLookupTables?: AddressLookupTableInput[];\n  /** The blockhash that should be associated with the built transaction. */\n  blockhash?: Blockhash | BlockhashWithExpiryBlockHeight;\n};\n\n/**\n * A set of options to use when sending and confirming\n * a transaction directly from a transaction builder.\n * @category Transactions\n */\nexport type TransactionBuilderSendAndConfirmOptions = {\n  send?: RpcSendTransactionOptions;\n  confirm?: Partial<RpcConfirmTransactionOptions>;\n};\n\n/**\n * A builder that helps construct transactions.\n * @category Transactions\n */\nexport class TransactionBuilder implements HasWrappedInstructions {\n  constructor(\n    readonly items: WrappedInstruction[] = [],\n    readonly options: TransactionBuilderOptions = {}\n  ) {}\n\n  empty(): TransactionBuilder {\n    return new TransactionBuilder([], this.options);\n  }\n\n  setItems(input: TransactionBuilderItemsInput): TransactionBuilder {\n    return new TransactionBuilder(this.parseItems(input), this.options);\n  }\n\n  prepend(input: TransactionBuilderItemsInput): TransactionBuilder {\n    return new TransactionBuilder(\n      [...this.parseItems(input), ...this.items],\n      this.options\n    );\n  }\n\n  append(input: TransactionBuilderItemsInput): TransactionBuilder {\n    return new TransactionBuilder(\n      [...this.items, ...this.parseItems(input)],\n      this.options\n    );\n  }\n\n  add(input: TransactionBuilderItemsInput): TransactionBuilder {\n    return this.append(input);\n  }\n\n  mapInstructions(\n    fn: (\n      wrappedInstruction: WrappedInstruction,\n      index: number,\n      array: WrappedInstruction[]\n    ) => WrappedInstruction\n  ): TransactionBuilder {\n    return new TransactionBuilder(this.items.map(fn), this.options);\n  }\n\n  addRemainingAccounts(\n    accountMeta: AccountMeta | SignerMeta | (AccountMeta | SignerMeta)[],\n    instructionIndex?: number\n  ): TransactionBuilder {\n    instructionIndex = instructionIndex ?? this.items.length - 1;\n    const metas = Array.isArray(accountMeta) ? accountMeta : [accountMeta];\n    const extraKeys = metas.map((meta) =>\n      'pubkey' in meta\n        ? meta\n        : {\n            pubkey: meta.signer.publicKey,\n            isSigner: true,\n            isWritable: meta.isWritable,\n          }\n    );\n    const extraSigners = metas.flatMap((meta) =>\n      'pubkey' in meta ? [] : [meta.signer]\n    );\n    return this.mapInstructions((wrappedInstruction, index) => {\n      if (index !== instructionIndex) return wrappedInstruction;\n      const keys = [...wrappedInstruction.instruction.keys, ...extraKeys];\n      return {\n        ...wrappedInstruction,\n        instruction: { ...wrappedInstruction.instruction, keys },\n        signers: [...wrappedInstruction.signers, ...extraSigners],\n      };\n    });\n  }\n\n  splitByIndex(index: number): [TransactionBuilder, TransactionBuilder] {\n    return [\n      new TransactionBuilder(this.items.slice(0, index), this.options),\n      new TransactionBuilder(this.items.slice(index), this.options),\n    ];\n  }\n\n  /**\n   * Split the builder into multiple builders, such that\n   * each of them should fit in a single transaction.\n   *\n   * This method is unsafe for several reasons:\n   * - Because transactions are atomic, splitting the builder\n   *   into multiple transactions may cause undesired side effects.\n   *   For example, if the first transaction succeeds but the second\n   *   one fails, you may end up with an inconsistent account state.\n   *   This is why it is recommended to manually split your transactions\n   *   such that each of them is valid on its own.\n   * - It can only split the instructions of the builder. Meaning that,\n   *   if the builder has a single instruction that is too big to fit in\n   *   a single transaction, it will not be able to split it.\n   */\n  unsafeSplitByTransactionSize(\n    context: Pick<Context, 'transactions' | 'payer'>\n  ): TransactionBuilder[] {\n    return this.items.reduce(\n      (builders, item) => {\n        const lastBuilder = builders.pop() as TransactionBuilder;\n        const lastBuilderWithItem = lastBuilder.add(item);\n        if (lastBuilderWithItem.fitsInOneTransaction(context)) {\n          builders.push(lastBuilderWithItem);\n        } else {\n          builders.push(lastBuilder);\n          builders.push(lastBuilder.empty().add(item));\n        }\n        return builders;\n      },\n      [this.empty()]\n    );\n  }\n\n  setFeePayer(feePayer: Signer): TransactionBuilder {\n    return new TransactionBuilder(this.items, { ...this.options, feePayer });\n  }\n\n  getFeePayer(context: Pick<Context, 'payer'>): Signer {\n    return this.options.feePayer ?? context.payer;\n  }\n\n  setVersion(version: TransactionVersion): TransactionBuilder {\n    return new TransactionBuilder(this.items, { ...this.options, version });\n  }\n\n  useLegacyVersion(): TransactionBuilder {\n    return this.setVersion('legacy');\n  }\n\n  useV0(): TransactionBuilder {\n    return this.setVersion(0);\n  }\n\n  setAddressLookupTables(\n    addressLookupTables: AddressLookupTableInput[]\n  ): TransactionBuilder {\n    return new TransactionBuilder(this.items, {\n      ...this.options,\n      addressLookupTables,\n    });\n  }\n\n  getBlockhash(): Blockhash | undefined {\n    return typeof this.options.blockhash === 'object'\n      ? this.options.blockhash.blockhash\n      : this.options.blockhash;\n  }\n\n  setBlockhash(\n    blockhash: Blockhash | BlockhashWithExpiryBlockHeight\n  ): TransactionBuilder {\n    return new TransactionBuilder(this.items, { ...this.options, blockhash });\n  }\n\n  async setLatestBlockhash(\n    context: Pick<Context, 'rpc'>,\n    options: RpcGetLatestBlockhashOptions = {}\n  ): Promise<TransactionBuilder> {\n    return this.setBlockhash(await context.rpc.getLatestBlockhash(options));\n  }\n\n  getInstructions(): Instruction[] {\n    return this.items.map((item) => item.instruction);\n  }\n\n  getSigners(context: Pick<Context, 'payer'>): Signer[] {\n    return uniqueSigners([\n      this.getFeePayer(context),\n      ...this.items.flatMap((item) => item.signers),\n    ]);\n  }\n\n  getBytesCreatedOnChain(): number {\n    return this.items.reduce((sum, item) => sum + item.bytesCreatedOnChain, 0);\n  }\n\n  async getRentCreatedOnChain(\n    context: Pick<Context, 'rpc'>\n  ): Promise<SolAmount> {\n    return context.rpc.getRent(this.getBytesCreatedOnChain(), {\n      includesHeaderBytes: true,\n    });\n  }\n\n  getTransactionSize(context: Pick<Context, 'transactions' | 'payer'>): number {\n    return context.transactions.serialize(\n      this.setBlockhash('11111111111111111111111111111111').build(context)\n    ).length;\n  }\n\n  minimumTransactionsRequired(\n    context: Pick<Context, 'transactions' | 'payer'>\n  ): number {\n    return Math.ceil(this.getTransactionSize(context) / TRANSACTION_SIZE_LIMIT);\n  }\n\n  fitsInOneTransaction(\n    context: Pick<Context, 'transactions' | 'payer'>\n  ): boolean {\n    return this.minimumTransactionsRequired(context) === 1;\n  }\n\n  build(context: Pick<Context, 'transactions' | 'payer'>): Transaction {\n    const blockhash = this.getBlockhash();\n    if (!blockhash) {\n      throw new SdkError(\n        'Setting a blockhash is required to build a transaction. ' +\n          'Please use the `setBlockhash` or `setLatestBlockhash` methods.'\n      );\n    }\n    const input: TransactionInput = {\n      version: this.options.version ?? 0,\n      payer: this.getFeePayer(context).publicKey,\n      instructions: this.getInstructions(),\n      blockhash,\n    };\n    if (input.version === 0 && this.options.addressLookupTables) {\n      input.addressLookupTables = this.options.addressLookupTables;\n    }\n    return context.transactions.create(input);\n  }\n\n  async buildWithLatestBlockhash(\n    context: Pick<Context, 'transactions' | 'rpc' | 'payer'>,\n    options: RpcGetLatestBlockhashOptions = {}\n  ): Promise<Transaction> {\n    let builder: TransactionBuilder = this;\n    if (!this.options.blockhash) {\n      builder = await this.setLatestBlockhash(context, options);\n    }\n    return builder.build(context);\n  }\n\n  async buildAndSign(\n    context: Pick<Context, 'transactions' | 'rpc' | 'payer'>\n  ): Promise<Transaction> {\n    return signTransaction(\n      await this.buildWithLatestBlockhash(context),\n      this.getSigners(context)\n    );\n  }\n\n  async send(\n    context: Pick<Context, 'transactions' | 'rpc' | 'payer'>,\n    options: RpcSendTransactionOptions = {}\n  ): Promise<TransactionSignature> {\n    const transaction = await this.buildAndSign(context);\n    return context.rpc.sendTransaction(transaction, options);\n  }\n\n  async confirm(\n    context: Pick<Context, 'transactions' | 'rpc' | 'payer'>,\n    signature: TransactionSignature,\n    options: Partial<RpcConfirmTransactionOptions> = {}\n  ): Promise<RpcConfirmTransactionResult> {\n    let builder: TransactionBuilder = this;\n    if (!this.options.blockhash) {\n      builder = await this.setLatestBlockhash(context);\n    }\n\n    let strategy: RpcConfirmTransactionStrategy;\n    if (options.strategy) {\n      strategy = options.strategy;\n    } else {\n      const blockhash =\n        typeof builder.options.blockhash === 'object'\n          ? builder.options.blockhash\n          : await context.rpc.getLatestBlockhash();\n      strategy = options.strategy ?? { type: 'blockhash', ...blockhash };\n    }\n\n    return context.rpc.confirmTransaction(signature, { ...options, strategy });\n  }\n\n  async sendAndConfirm(\n    context: Pick<Context, 'transactions' | 'rpc' | 'payer'>,\n    options: TransactionBuilderSendAndConfirmOptions = {}\n  ): Promise<{\n    signature: TransactionSignature;\n    result: RpcConfirmTransactionResult;\n  }> {\n    let builder: TransactionBuilder = this;\n    if (!this.options.blockhash) {\n      builder = await this.setLatestBlockhash(context);\n    }\n    const signature = await builder.send(context, options.send);\n    const result = await builder.confirm(context, signature, options.confirm);\n    return { signature, result };\n  }\n\n  protected parseItems(\n    input: TransactionBuilderItemsInput\n  ): WrappedInstruction[] {\n    return (Array.isArray(input) ? input : [input]).flatMap((item) =>\n      'items' in item ? item.items : [item]\n    );\n  }\n}\n\n/**\n * Creates a new transaction builder.\n * @category Transactions\n */\nexport const transactionBuilder = (items: WrappedInstruction[] = []) =>\n  new TransactionBuilder(items);\n","import type { Context } from './Context';\nimport type {\n  RpcConfirmTransactionResult,\n  RpcSendTransactionOptions,\n} from './RpcInterface';\nimport { RpcConfirmTransactionStrategy } from './RpcInterface';\nimport { signAllTransactions } from './Signer';\nimport type {\n  BlockhashWithExpiryBlockHeight,\n  Transaction,\n  TransactionSignature,\n} from './Transaction';\nimport {\n  TransactionBuilder,\n  TransactionBuilderSendAndConfirmOptions,\n} from './TransactionBuilder';\nimport { zipMap } from './utils';\n\nexport type TransactionBuilderGroupOptions = {\n  /** Whether to run the builders in parallel or, if false, sequentially. */\n  parallel?: boolean;\n};\n\nexport class TransactionBuilderGroup {\n  constructor(\n    readonly builders: TransactionBuilder[] = [],\n    readonly options: TransactionBuilderGroupOptions = {}\n  ) {}\n\n  prepend(\n    builder: TransactionBuilder | TransactionBuilder[]\n  ): TransactionBuilderGroup {\n    const newBuilders = Array.isArray(builder) ? builder : [builder];\n    return new TransactionBuilderGroup(\n      [...newBuilders, ...this.builders],\n      this.options\n    );\n  }\n\n  append(\n    builder: TransactionBuilder | TransactionBuilder[]\n  ): TransactionBuilderGroup {\n    const newBuilders = Array.isArray(builder) ? builder : [builder];\n    return new TransactionBuilderGroup(\n      [...this.builders, ...newBuilders],\n      this.options\n    );\n  }\n\n  add(\n    builder: TransactionBuilder | TransactionBuilder[]\n  ): TransactionBuilderGroup {\n    return this.append(builder);\n  }\n\n  sequential(): TransactionBuilderGroup {\n    return new TransactionBuilderGroup(this.builders, {\n      ...this.options,\n      parallel: false,\n    });\n  }\n\n  parallel(): TransactionBuilderGroup {\n    return new TransactionBuilderGroup(this.builders, {\n      ...this.options,\n      parallel: true,\n    });\n  }\n\n  isParallel(): boolean {\n    return this.options.parallel ?? false;\n  }\n\n  merge(): TransactionBuilder {\n    if (this.builders.length === 0) {\n      return new TransactionBuilder();\n    }\n    return this.builders.reduce(\n      (builder, next) => builder.add(next),\n      this.builders[0].empty()\n    );\n  }\n\n  build(context: Pick<Context, 'transactions' | 'payer'>): Transaction[] {\n    return this.builders.map((builder) => builder.build(context));\n  }\n\n  async setLatestBlockhash(\n    context: Pick<Context, 'rpc'>\n  ): Promise<TransactionBuilderGroup> {\n    const hasBlockhashlessBuilder = this.builders.some(\n      (builder) => !builder.options.blockhash\n    );\n    if (!hasBlockhashlessBuilder) return this;\n    const blockhash = await context.rpc.getLatestBlockhash();\n    return this.map((builder) =>\n      builder.options.blockhash ? builder : builder.setBlockhash(blockhash)\n    );\n  }\n\n  async buildWithLatestBlockhash(\n    context: Pick<Context, 'transactions' | 'rpc' | 'payer'>\n  ): Promise<Transaction[]> {\n    return (await this.setLatestBlockhash(context)).build(context);\n  }\n\n  async buildAndSign(\n    context: Pick<Context, 'transactions' | 'rpc' | 'payer'>\n  ): Promise<Transaction[]> {\n    const transactions = await this.buildWithLatestBlockhash(context);\n    const signers = this.builders.map((builder) => builder.getSigners(context));\n    return signAllTransactions(\n      zipMap(transactions, signers, (transaction, txSigners) => ({\n        transaction,\n        signers: txSigners ?? [],\n      }))\n    );\n  }\n\n  async send(\n    context: Pick<Context, 'transactions' | 'rpc' | 'payer'>,\n    options: RpcSendTransactionOptions = {}\n  ): Promise<TransactionSignature[]> {\n    return this.runAll(await this.buildAndSign(context), async (tx) =>\n      context.rpc.sendTransaction(tx, options)\n    );\n  }\n\n  async sendAndConfirm(\n    context: Pick<Context, 'transactions' | 'rpc' | 'payer'>,\n    options: TransactionBuilderSendAndConfirmOptions = {}\n  ): Promise<\n    Array<{\n      signature: TransactionSignature;\n      result: RpcConfirmTransactionResult;\n    }>\n  > {\n    const blockhashWithExpiryBlockHeight = this.builders.find(\n      (builder) => typeof builder.options.blockhash === 'object'\n    )?.options.blockhash as BlockhashWithExpiryBlockHeight | undefined;\n\n    let strategy: RpcConfirmTransactionStrategy;\n    if (options.confirm?.strategy) {\n      strategy = options.confirm.strategy;\n    } else {\n      const blockhash =\n        blockhashWithExpiryBlockHeight ??\n        (await context.rpc.getLatestBlockhash());\n      strategy = options.confirm?.strategy ?? {\n        type: 'blockhash',\n        ...blockhash,\n      };\n    }\n\n    return this.runAll(await this.buildAndSign(context), async (tx) => {\n      const signature = await context.rpc.sendTransaction(tx, options.send);\n      const result = await context.rpc.confirmTransaction(signature, {\n        ...options.confirm,\n        strategy,\n      });\n      return { signature, result };\n    });\n  }\n\n  map(\n    fn: (\n      builder: TransactionBuilder,\n      index: number,\n      array: TransactionBuilder[]\n    ) => TransactionBuilder\n  ): TransactionBuilderGroup {\n    return new TransactionBuilderGroup(this.builders.map(fn));\n  }\n\n  filter(\n    fn: Parameters<Array<TransactionBuilder>['filter']>[0]\n  ): TransactionBuilderGroup {\n    return new TransactionBuilderGroup(this.builders.filter(fn));\n  }\n\n  async runAll<T, U>(\n    array: T[],\n    fn: (item: T, index: number, array: T[]) => Promise<U>\n  ): Promise<U[]> {\n    if (this.isParallel()) {\n      return Promise.all(array.map(fn));\n    }\n    return array.reduce(\n      async (promise, ...args) => [...(await promise), await fn(...args)],\n      Promise.resolve([] as U[])\n    );\n  }\n}\n\nexport function transactionBuilderGroup(\n  builders: TransactionBuilder[] = []\n): TransactionBuilderGroup {\n  return new TransactionBuilderGroup(builders);\n}\n","import { Context, createNullContext } from './Context';\nimport type { UmiPlugin } from './UmiPlugin';\n\n/**\n * A Umi context object that uses all of the interfaces provided by Umi.\n * Once created, the end-user can pass this object to any function that\n * requires some or all of these interfaces.\n *\n * It implements the {@link Context} interface and adds a `use` method\n * that allows plugins to be installed.\n *\n * @category Context and Interfaces\n */\nexport interface Umi extends Context {\n  /** Installs a Umi plugin. */\n  use(plugin: UmiPlugin): Umi;\n}\n\n/**\n * Creates a Umi instance using only Null implementations of the interfaces.\n * The `use` method can then be used to install plugins and replace the\n * Null implementations with real implementations.\n *\n * @category Context and Interfaces\n */\nexport const createUmi = (): Umi => ({\n  ...createNullContext(),\n  use(plugin: UmiPlugin) {\n    plugin.install(this);\n    return this;\n  },\n});\n","import { SdkError } from './SdkError';\n\n/** @category Errors */\nexport class InvalidBaseStringError extends SdkError {\n  readonly name: string = 'InvalidBaseStringError';\n\n  constructor(value: string, base: number, cause?: Error) {\n    const message = `Expected a string of base ${base}, got [${value}].`;\n    super(message, cause);\n  }\n}\n","import type { Program } from '../Program';\nimport { UmiError } from './UmiError';\n\n/** @category Errors */\nexport type UnderlyingProgramError = Error & { code?: number; logs?: string[] };\n\n/** @category Errors */\nexport class ProgramError extends UmiError {\n  readonly name: string = 'ProgramError';\n\n  readonly program: Program;\n\n  readonly logs?: string[];\n\n  constructor(\n    message: string,\n    program: Program,\n    cause?: UnderlyingProgramError\n  ) {\n    super(message, 'program', `${program.name} [${program.publicKey}]`, cause);\n    this.program = program;\n    this.logs = cause?.logs;\n    if (this.logs) {\n      this.message += `\\nProgram Logs:\\n${this.logs\n        .map((log) => `| ${log}`)\n        .join('\\n')}\\n`;\n    }\n  }\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar umiOptions = require('@metaplex-foundation/umi-options');\nvar umiPublicKeys = require('@metaplex-foundation/umi-public-keys');\nvar serializersInternal = require('./serializersInternal.cjs');\nvar Account = require('./Account.cjs');\nvar Amount = require('./Amount.cjs');\nvar BigInt = require('./BigInt.cjs');\nvar Cluster = require('./Cluster.cjs');\nvar Context = require('./Context.cjs');\nvar DateTime = require('./DateTime.cjs');\nvar DownloaderInterface = require('./DownloaderInterface.cjs');\nvar EddsaInterface = require('./EddsaInterface.cjs');\nvar GenericFile = require('./GenericFile.cjs');\nvar GpaBuilder = require('./GpaBuilder.cjs');\nvar HttpInterface = require('./HttpInterface.cjs');\nvar HttpRequest = require('./HttpRequest.cjs');\nvar Keypair = require('./Keypair.cjs');\nvar Program = require('./Program.cjs');\nvar ProgramRepositoryInterface = require('./ProgramRepositoryInterface.cjs');\nvar RpcInterface = require('./RpcInterface.cjs');\nvar SerializerInterface = require('./SerializerInterface.cjs');\nvar Signer = require('./Signer.cjs');\nvar SignerPlugins = require('./SignerPlugins.cjs');\nvar Transaction = require('./Transaction.cjs');\nvar TransactionBuilder = require('./TransactionBuilder.cjs');\nvar TransactionBuilderGroup = require('./TransactionBuilderGroup.cjs');\nvar TransactionFactoryInterface = require('./TransactionFactoryInterface.cjs');\nvar Umi = require('./Umi.cjs');\nvar UploaderInterface = require('./UploaderInterface.cjs');\nvar AccountNotFoundError = require('./errors/AccountNotFoundError.cjs');\nvar AmountMismatchError = require('./errors/AmountMismatchError.cjs');\nvar InterfaceImplementationMissingError = require('./errors/InterfaceImplementationMissingError.cjs');\nvar InvalidBaseStringError = require('./errors/InvalidBaseStringError.cjs');\nvar ProgramError = require('./errors/ProgramError.cjs');\nvar SdkError = require('./errors/SdkError.cjs');\nvar UmiError = require('./errors/UmiError.cjs');\nvar UnexpectedAccountError = require('./errors/UnexpectedAccountError.cjs');\nvar UnexpectedAmountError = require('./errors/UnexpectedAmountError.cjs');\nvar arrays = require('./utils/arrays.cjs');\nvar randomStrings = require('./utils/randomStrings.cjs');\n\n\n\nexports.Endian = serializersInternal.Endian;\nexports.base10 = serializersInternal.base10;\nexports.base16 = serializersInternal.base16;\nexports.base58 = serializersInternal.base58;\nexports.base64 = serializersInternal.base64;\nexports.baseX = serializersInternal.baseX;\nexports.bitArray = serializersInternal.bitArray;\nexports.fixBytes = serializersInternal.fixBytes;\nexports.fixSerializer = serializersInternal.fixSerializer;\nexports.mapSerializer = serializersInternal.mapSerializer;\nexports.mergeBytes = serializersInternal.mergeBytes;\nexports.padBytes = serializersInternal.padBytes;\nexports.padNullCharacters = serializersInternal.padNullCharacters;\nexports.removeNullCharacters = serializersInternal.removeNullCharacters;\nexports.reverseSerializer = serializersInternal.reverseSerializer;\nexports.utf8 = serializersInternal.utf8;\nexports.ACCOUNT_HEADER_SIZE = Account.ACCOUNT_HEADER_SIZE;\nexports.assertAccountExists = Account.assertAccountExists;\nexports.deserializeAccount = Account.deserializeAccount;\nexports.absoluteAmount = Amount.absoluteAmount;\nexports.addAmounts = Amount.addAmounts;\nexports.amountToNumber = Amount.amountToNumber;\nexports.amountToString = Amount.amountToString;\nexports.assertAmount = Amount.assertAmount;\nexports.assertSameAmounts = Amount.assertSameAmounts;\nexports.assertSolAmount = Amount.assertSolAmount;\nexports.compareAmounts = Amount.compareAmounts;\nexports.createAmount = Amount.createAmount;\nexports.createAmountFromDecimals = Amount.createAmountFromDecimals;\nexports.displayAmount = Amount.displayAmount;\nexports.divideAmount = Amount.divideAmount;\nexports.isAmount = Amount.isAmount;\nexports.isEqualToAmount = Amount.isEqualToAmount;\nexports.isGreaterThanAmount = Amount.isGreaterThanAmount;\nexports.isGreaterThanOrEqualToAmount = Amount.isGreaterThanOrEqualToAmount;\nexports.isLessThanAmount = Amount.isLessThanAmount;\nexports.isLessThanOrEqualToAmount = Amount.isLessThanOrEqualToAmount;\nexports.isNegativeAmount = Amount.isNegativeAmount;\nexports.isPositiveAmount = Amount.isPositiveAmount;\nexports.isSolAmount = Amount.isSolAmount;\nexports.isZeroAmount = Amount.isZeroAmount;\nexports.lamports = Amount.lamports;\nexports.mapAmountSerializer = Amount.mapAmountSerializer;\nexports.multiplyAmount = Amount.multiplyAmount;\nexports.percentAmount = Amount.percentAmount;\nexports.sameAmounts = Amount.sameAmounts;\nexports.sol = Amount.sol;\nexports.subtractAmounts = Amount.subtractAmounts;\nexports.tokenAmount = Amount.tokenAmount;\nexports.usd = Amount.usd;\nexports.createBigInt = BigInt.createBigInt;\nexports.resolveClusterFromEndpoint = Cluster.resolveClusterFromEndpoint;\nexports.createNullContext = Context.createNullContext;\nexports.dateTime = DateTime.dateTime;\nexports.formatDateTime = DateTime.formatDateTime;\nexports.mapDateTimeSerializer = DateTime.mapDateTimeSerializer;\nexports.now = DateTime.now;\nexports.createNullDownloader = DownloaderInterface.createNullDownloader;\nexports.createNullEddsa = EddsaInterface.createNullEddsa;\nexports.createBrowserFileFromGenericFile = GenericFile.createBrowserFileFromGenericFile;\nexports.createGenericFile = GenericFile.createGenericFile;\nexports.createGenericFileFromBrowserFile = GenericFile.createGenericFileFromBrowserFile;\nexports.createGenericFileFromJson = GenericFile.createGenericFileFromJson;\nexports.getBytesFromGenericFiles = GenericFile.getBytesFromGenericFiles;\nexports.isGenericFile = GenericFile.isGenericFile;\nexports.parseJsonFromGenericFile = GenericFile.parseJsonFromGenericFile;\nexports.GpaBuilder = GpaBuilder.GpaBuilder;\nexports.gpaBuilder = GpaBuilder.gpaBuilder;\nexports.createNullHttp = HttpInterface.createNullHttp;\nexports.HttpRequestBuilder = HttpRequest.HttpRequestBuilder;\nexports.request = HttpRequest.request;\nexports.createSignerFromKeypair = Keypair.createSignerFromKeypair;\nexports.generateSigner = Keypair.generateSigner;\nexports.isKeypairSigner = Keypair.isKeypairSigner;\nexports.isErrorWithLogs = Program.isErrorWithLogs;\nexports.createNullProgramRepository = ProgramRepositoryInterface.createNullProgramRepository;\nexports.createNullRpc = RpcInterface.createNullRpc;\nexports.createNullSerializer = SerializerInterface.createNullSerializer;\nexports.createNoopSigner = Signer.createNoopSigner;\nexports.createNullSigner = Signer.createNullSigner;\nexports.isSigner = Signer.isSigner;\nexports.signAllTransactions = Signer.signAllTransactions;\nexports.signTransaction = Signer.signTransaction;\nexports.uniqueSigners = Signer.uniqueSigners;\nexports.generatedSignerIdentity = SignerPlugins.generatedSignerIdentity;\nexports.generatedSignerPayer = SignerPlugins.generatedSignerPayer;\nexports.keypairIdentity = SignerPlugins.keypairIdentity;\nexports.keypairPayer = SignerPlugins.keypairPayer;\nexports.signerIdentity = SignerPlugins.signerIdentity;\nexports.signerPayer = SignerPlugins.signerPayer;\nexports.TRANSACTION_SIZE_LIMIT = Transaction.TRANSACTION_SIZE_LIMIT;\nexports.addTransactionSignature = Transaction.addTransactionSignature;\nexports.TransactionBuilder = TransactionBuilder.TransactionBuilder;\nexports.transactionBuilder = TransactionBuilder.transactionBuilder;\nexports.TransactionBuilderGroup = TransactionBuilderGroup.TransactionBuilderGroup;\nexports.transactionBuilderGroup = TransactionBuilderGroup.transactionBuilderGroup;\nexports.createNullTransactionFactory = TransactionFactoryInterface.createNullTransactionFactory;\nexports.createUmi = Umi.createUmi;\nexports.createNullUploader = UploaderInterface.createNullUploader;\nexports.AccountNotFoundError = AccountNotFoundError.AccountNotFoundError;\nexports.AmountMismatchError = AmountMismatchError.AmountMismatchError;\nexports.InterfaceImplementationMissingError = InterfaceImplementationMissingError.InterfaceImplementationMissingError;\nexports.InvalidBaseStringError = InvalidBaseStringError.InvalidBaseStringError;\nexports.ProgramError = ProgramError.ProgramError;\nexports.SdkError = SdkError.SdkError;\nexports.UmiError = UmiError.UmiError;\nexports.UnexpectedAccountError = UnexpectedAccountError.UnexpectedAccountError;\nexports.UnexpectedAmountError = UnexpectedAmountError.UnexpectedAmountError;\nexports.chunk = arrays.chunk;\nexports.uniqueBy = arrays.uniqueBy;\nexports.zipMap = arrays.zipMap;\nexports.generateRandomString = randomStrings.generateRandomString;\nObject.keys(umiOptions).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return umiOptions[k]; }\n\t});\n});\nObject.keys(umiPublicKeys).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return umiPublicKeys[k]; }\n\t});\n});\n//# sourceMappingURL=index.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar umiSerializers = require('@metaplex-foundation/umi-serializers');\n\n\n\nObject.keys(umiSerializers).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return umiSerializers[k]; }\n\t});\n});\n//# sourceMappingURL=serializers.cjs.map\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"export function utf8Count(str: string): number {\n  const strLength = str.length;\n\n  let byteLength = 0;\n  let pos = 0;\n  while (pos < strLength) {\n    let value = str.charCodeAt(pos++);\n\n    if ((value & 0xffffff80) === 0) {\n      // 1-byte\n      byteLength++;\n      continue;\n    } else if ((value & 0xfffff800) === 0) {\n      // 2-bytes\n      byteLength += 2;\n    } else {\n      // handle surrogate pair\n      if (value >= 0xd800 && value <= 0xdbff) {\n        // high surrogate\n        if (pos < strLength) {\n          const extra = str.charCodeAt(pos);\n          if ((extra & 0xfc00) === 0xdc00) {\n            ++pos;\n            value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n          }\n        }\n      }\n\n      if ((value & 0xffff0000) === 0) {\n        // 3-byte\n        byteLength += 3;\n      } else {\n        // 4-byte\n        byteLength += 4;\n      }\n    }\n  }\n  return byteLength;\n}\n\nexport function utf8EncodeJs(str: string, output: Uint8Array, outputOffset: number): void {\n  const strLength = str.length;\n  let offset = outputOffset;\n  let pos = 0;\n  while (pos < strLength) {\n    let value = str.charCodeAt(pos++);\n\n    if ((value & 0xffffff80) === 0) {\n      // 1-byte\n      output[offset++] = value;\n      continue;\n    } else if ((value & 0xfffff800) === 0) {\n      // 2-bytes\n      output[offset++] = ((value >> 6) & 0x1f) | 0xc0;\n    } else {\n      // handle surrogate pair\n      if (value >= 0xd800 && value <= 0xdbff) {\n        // high surrogate\n        if (pos < strLength) {\n          const extra = str.charCodeAt(pos);\n          if ((extra & 0xfc00) === 0xdc00) {\n            ++pos;\n            value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n          }\n        }\n      }\n\n      if ((value & 0xffff0000) === 0) {\n        // 3-byte\n        output[offset++] = ((value >> 12) & 0x0f) | 0xe0;\n        output[offset++] = ((value >> 6) & 0x3f) | 0x80;\n      } else {\n        // 4-byte\n        output[offset++] = ((value >> 18) & 0x07) | 0xf0;\n        output[offset++] = ((value >> 12) & 0x3f) | 0x80;\n        output[offset++] = ((value >> 6) & 0x3f) | 0x80;\n      }\n    }\n\n    output[offset++] = (value & 0x3f) | 0x80;\n  }\n}\n\n// TextEncoder and TextDecoder are standardized in whatwg encoding:\n// https://encoding.spec.whatwg.org/\n// and available in all the modern browsers:\n// https://caniuse.com/textencoder\n// They are available in Node.js since v12 LTS as well:\n// https://nodejs.org/api/globals.html#textencoder\n\nconst sharedTextEncoder = new TextEncoder();\n\n// This threshold should be determined by benchmarking, which might vary in engines and input data.\n// Run `npx ts-node benchmark/encode-string.ts` for details.\nconst TEXT_ENCODER_THRESHOLD = 50;\n\nexport function utf8EncodeTE(str: string, output: Uint8Array, outputOffset: number): void {\n  sharedTextEncoder.encodeInto(str, output.subarray(outputOffset));\n}\n\nexport function utf8Encode(str: string, output: Uint8Array, outputOffset: number): void {\n  if (str.length > TEXT_ENCODER_THRESHOLD) {\n    utf8EncodeTE(str, output, outputOffset);\n  } else {\n    utf8EncodeJs(str, output, outputOffset);\n  }\n}\n\nconst CHUNK_SIZE = 0x1_000;\n\nexport function utf8DecodeJs(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n  let offset = inputOffset;\n  const end = offset + byteLength;\n\n  const units: Array<number> = [];\n  let result = \"\";\n  while (offset < end) {\n    const byte1 = bytes[offset++]!;\n    if ((byte1 & 0x80) === 0) {\n      // 1 byte\n      units.push(byte1);\n    } else if ((byte1 & 0xe0) === 0xc0) {\n      // 2 bytes\n      const byte2 = bytes[offset++]! & 0x3f;\n      units.push(((byte1 & 0x1f) << 6) | byte2);\n    } else if ((byte1 & 0xf0) === 0xe0) {\n      // 3 bytes\n      const byte2 = bytes[offset++]! & 0x3f;\n      const byte3 = bytes[offset++]! & 0x3f;\n      units.push(((byte1 & 0x1f) << 12) | (byte2 << 6) | byte3);\n    } else if ((byte1 & 0xf8) === 0xf0) {\n      // 4 bytes\n      const byte2 = bytes[offset++]! & 0x3f;\n      const byte3 = bytes[offset++]! & 0x3f;\n      const byte4 = bytes[offset++]! & 0x3f;\n      let unit = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4;\n      if (unit > 0xffff) {\n        unit -= 0x10000;\n        units.push(((unit >>> 10) & 0x3ff) | 0xd800);\n        unit = 0xdc00 | (unit & 0x3ff);\n      }\n      units.push(unit);\n    } else {\n      units.push(byte1);\n    }\n\n    if (units.length >= CHUNK_SIZE) {\n      result += String.fromCharCode(...units);\n      units.length = 0;\n    }\n  }\n\n  if (units.length > 0) {\n    result += String.fromCharCode(...units);\n  }\n\n  return result;\n}\n\nconst sharedTextDecoder = new TextDecoder();\n\n// This threshold should be determined by benchmarking, which might vary in engines and input data.\n// Run `npx ts-node benchmark/decode-string.ts` for details.\nconst TEXT_DECODER_THRESHOLD = 200;\n\nexport function utf8DecodeTD(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n  const stringBytes = bytes.subarray(inputOffset, inputOffset + byteLength);\n  return sharedTextDecoder.decode(stringBytes);\n}\n\nexport function utf8Decode(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n  if (byteLength > TEXT_DECODER_THRESHOLD) {\n    return utf8DecodeTD(bytes, inputOffset, byteLength);\n  } else {\n    return utf8DecodeJs(bytes, inputOffset, byteLength);\n  }\n}\n","/**\n * ExtData is used to handle Extension Types that are not registered to ExtensionCodec.\n */\nexport class ExtData {\n  readonly type: number;\n  readonly data: Uint8Array | ((pos: number) => Uint8Array);\n\n  constructor(type: number, data: Uint8Array | ((pos: number) => Uint8Array)) {\n    this.type = type;\n    this.data = data;\n  }\n}\n","export class DecodeError extends Error {\n  constructor(message: string) {\n    super(message);\n\n    // fix the prototype chain in a cross-platform way\n    const proto: typeof DecodeError.prototype = Object.create(DecodeError.prototype);\n    Object.setPrototypeOf(this, proto);\n\n    Object.defineProperty(this, \"name\", {\n      configurable: true,\n      enumerable: false,\n      value: DecodeError.name,\n    });\n  }\n}\n","// Integer Utility\n\nexport const UINT32_MAX = 0xffff_ffff;\n\n// DataView extension to handle int64 / uint64,\n// where the actual range is 53-bits integer (a.k.a. safe integer)\n\nexport function setUint64(view: DataView, offset: number, value: number): void {\n  const high = value / 0x1_0000_0000;\n  const low = value; // high bits are truncated by DataView\n  view.setUint32(offset, high);\n  view.setUint32(offset + 4, low);\n}\n\nexport function setInt64(view: DataView, offset: number, value: number): void {\n  const high = Math.floor(value / 0x1_0000_0000);\n  const low = value; // high bits are truncated by DataView\n  view.setUint32(offset, high);\n  view.setUint32(offset + 4, low);\n}\n\nexport function getInt64(view: DataView, offset: number): number {\n  const high = view.getInt32(offset);\n  const low = view.getUint32(offset + 4);\n  return high * 0x1_0000_0000 + low;\n}\n\nexport function getUint64(view: DataView, offset: number): number {\n  const high = view.getUint32(offset);\n  const low = view.getUint32(offset + 4);\n  return high * 0x1_0000_0000 + low;\n}\n","// https://github.com/msgpack/msgpack/blob/master/spec.md#timestamp-extension-type\nimport { DecodeError } from \"./DecodeError.ts\";\nimport { getInt64, setInt64 } from \"./utils/int.ts\";\n\nexport const EXT_TIMESTAMP = -1;\n\nexport type TimeSpec = {\n  sec: number;\n  nsec: number;\n};\n\nconst TIMESTAMP32_MAX_SEC = 0x100000000 - 1; // 32-bit unsigned int\nconst TIMESTAMP64_MAX_SEC = 0x400000000 - 1; // 34-bit unsigned int\n\nexport function encodeTimeSpecToTimestamp({ sec, nsec }: TimeSpec): Uint8Array {\n  if (sec >= 0 && nsec >= 0 && sec <= TIMESTAMP64_MAX_SEC) {\n    // Here sec >= 0 && nsec >= 0\n    if (nsec === 0 && sec <= TIMESTAMP32_MAX_SEC) {\n      // timestamp 32 = { sec32 (unsigned) }\n      const rv = new Uint8Array(4);\n      const view = new DataView(rv.buffer);\n      view.setUint32(0, sec);\n      return rv;\n    } else {\n      // timestamp 64 = { nsec30 (unsigned), sec34 (unsigned) }\n      const secHigh = sec / 0x100000000;\n      const secLow = sec & 0xffffffff;\n      const rv = new Uint8Array(8);\n      const view = new DataView(rv.buffer);\n      // nsec30 | secHigh2\n      view.setUint32(0, (nsec << 2) | (secHigh & 0x3));\n      // secLow32\n      view.setUint32(4, secLow);\n      return rv;\n    }\n  } else {\n    // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\n    const rv = new Uint8Array(12);\n    const view = new DataView(rv.buffer);\n    view.setUint32(0, nsec);\n    setInt64(view, 4, sec);\n    return rv;\n  }\n}\n\nexport function encodeDateToTimeSpec(date: Date): TimeSpec {\n  const msec = date.getTime();\n  const sec = Math.floor(msec / 1e3);\n  const nsec = (msec - sec * 1e3) * 1e6;\n\n  // Normalizes { sec, nsec } to ensure nsec is unsigned.\n  const nsecInSec = Math.floor(nsec / 1e9);\n  return {\n    sec: sec + nsecInSec,\n    nsec: nsec - nsecInSec * 1e9,\n  };\n}\n\nexport function encodeTimestampExtension(object: unknown): Uint8Array | null {\n  if (object instanceof Date) {\n    const timeSpec = encodeDateToTimeSpec(object);\n    return encodeTimeSpecToTimestamp(timeSpec);\n  } else {\n    return null;\n  }\n}\n\nexport function decodeTimestampToTimeSpec(data: Uint8Array): TimeSpec {\n  const view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n\n  // data may be 32, 64, or 96 bits\n  switch (data.byteLength) {\n    case 4: {\n      // timestamp 32 = { sec32 }\n      const sec = view.getUint32(0);\n      const nsec = 0;\n      return { sec, nsec };\n    }\n    case 8: {\n      // timestamp 64 = { nsec30, sec34 }\n      const nsec30AndSecHigh2 = view.getUint32(0);\n      const secLow32 = view.getUint32(4);\n      const sec = (nsec30AndSecHigh2 & 0x3) * 0x100000000 + secLow32;\n      const nsec = nsec30AndSecHigh2 >>> 2;\n      return { sec, nsec };\n    }\n    case 12: {\n      // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\n\n      const sec = getInt64(view, 4);\n      const nsec = view.getUint32(0);\n      return { sec, nsec };\n    }\n    default:\n      throw new DecodeError(`Unrecognized data size for timestamp (expected 4, 8, or 12): ${data.length}`);\n  }\n}\n\nexport function decodeTimestampExtension(data: Uint8Array): Date {\n  const timeSpec = decodeTimestampToTimeSpec(data);\n  return new Date(timeSpec.sec * 1e3 + timeSpec.nsec / 1e6);\n}\n\nexport const timestampExtension = {\n  type: EXT_TIMESTAMP,\n  encode: encodeTimestampExtension,\n  decode: decodeTimestampExtension,\n};\n","// ExtensionCodec to handle MessagePack extensions\n\nimport { ExtData } from \"./ExtData.ts\";\nimport { timestampExtension } from \"./timestamp.ts\";\n\nexport type ExtensionDecoderType<ContextType> = (\n  data: Uint8Array,\n  extensionType: number,\n  context: ContextType,\n) => unknown;\n\nexport type ExtensionEncoderType<ContextType> = (\n  input: unknown,\n  context: ContextType,\n) => Uint8Array | ((dataPos: number) => Uint8Array) | null;\n\n// immutable interface to ExtensionCodec\nexport type ExtensionCodecType<ContextType> = {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  __brand?: ContextType;\n  tryToEncode(object: unknown, context: ContextType): ExtData | null;\n  decode(data: Uint8Array, extType: number, context: ContextType): unknown;\n};\n\nexport class ExtensionCodec<ContextType = undefined> implements ExtensionCodecType<ContextType> {\n  public static readonly defaultCodec: ExtensionCodecType<undefined> = new ExtensionCodec();\n\n  // ensures ExtensionCodecType<X> matches ExtensionCodec<X>\n  // this will make type errors a lot more clear\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  __brand?: ContextType;\n\n  // built-in extensions\n  private readonly builtInEncoders: Array<ExtensionEncoderType<ContextType> | undefined | null> = [];\n  private readonly builtInDecoders: Array<ExtensionDecoderType<ContextType> | undefined | null> = [];\n\n  // custom extensions\n  private readonly encoders: Array<ExtensionEncoderType<ContextType> | undefined | null> = [];\n  private readonly decoders: Array<ExtensionDecoderType<ContextType> | undefined | null> = [];\n\n  public constructor() {\n    this.register(timestampExtension);\n  }\n\n  public register({\n    type,\n    encode,\n    decode,\n  }: {\n    type: number;\n    encode: ExtensionEncoderType<ContextType>;\n    decode: ExtensionDecoderType<ContextType>;\n  }): void {\n    if (type >= 0) {\n      // custom extensions\n      this.encoders[type] = encode;\n      this.decoders[type] = decode;\n    } else {\n      // built-in extensions\n      const index = -1 - type;\n      this.builtInEncoders[index] = encode;\n      this.builtInDecoders[index] = decode;\n    }\n  }\n\n  public tryToEncode(object: unknown, context: ContextType): ExtData | null {\n    // built-in extensions\n    for (let i = 0; i < this.builtInEncoders.length; i++) {\n      const encodeExt = this.builtInEncoders[i];\n      if (encodeExt != null) {\n        const data = encodeExt(object, context);\n        if (data != null) {\n          const type = -1 - i;\n          return new ExtData(type, data);\n        }\n      }\n    }\n\n    // custom extensions\n    for (let i = 0; i < this.encoders.length; i++) {\n      const encodeExt = this.encoders[i];\n      if (encodeExt != null) {\n        const data = encodeExt(object, context);\n        if (data != null) {\n          const type = i;\n          return new ExtData(type, data);\n        }\n      }\n    }\n\n    if (object instanceof ExtData) {\n      // to keep ExtData as is\n      return object;\n    }\n    return null;\n  }\n\n  public decode(data: Uint8Array, type: number, context: ContextType): unknown {\n    const decodeExt = type < 0 ? this.builtInDecoders[-1 - type] : this.decoders[type];\n    if (decodeExt) {\n      return decodeExt(data, type, context);\n    } else {\n      // decode() does not fail, returns ExtData instead.\n      return new ExtData(type, data);\n    }\n  }\n}\n","function isArrayBufferLike(buffer: unknown): buffer is ArrayBufferLike {\n  return (\n    buffer instanceof ArrayBuffer || (typeof SharedArrayBuffer !== \"undefined\" && buffer instanceof SharedArrayBuffer)\n  );\n}\n\nexport function ensureUint8Array(\n  buffer: ArrayLike<number> | Uint8Array<ArrayBufferLike> | ArrayBufferView | ArrayBufferLike,\n): Uint8Array<ArrayBufferLike> {\n  if (buffer instanceof Uint8Array) {\n    return buffer;\n  } else if (ArrayBuffer.isView(buffer)) {\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n  } else if (isArrayBufferLike(buffer)) {\n    return new Uint8Array(buffer);\n  } else {\n    // ArrayLike<number>\n    return Uint8Array.from(buffer);\n  }\n}\n","import { utf8Count, utf8Encode } from \"./utils/utf8.ts\";\nimport { ExtensionCodec } from \"./ExtensionCodec.ts\";\nimport { setInt64, setUint64 } from \"./utils/int.ts\";\nimport { ensureUint8Array } from \"./utils/typedArrays.ts\";\nimport type { ExtData } from \"./ExtData.ts\";\nimport type { ContextOf } from \"./context.ts\";\nimport type { ExtensionCodecType } from \"./ExtensionCodec.ts\";\n\nexport const DEFAULT_MAX_DEPTH = 100;\nexport const DEFAULT_INITIAL_BUFFER_SIZE = 2048;\n\nexport type EncoderOptions<ContextType = undefined> = Partial<\n  Readonly<{\n    extensionCodec: ExtensionCodecType<ContextType>;\n\n    /**\n     * Encodes bigint as Int64 or Uint64 if it's set to true.\n     * {@link forceIntegerToFloat} does not affect bigint.\n     * Depends on ES2020's {@link DataView#setBigInt64} and\n     * {@link DataView#setBigUint64}.\n     *\n     * Defaults to false.\n     */\n    useBigInt64: boolean;\n\n    /**\n     * The maximum depth in nested objects and arrays.\n     *\n     * Defaults to 100.\n     */\n    maxDepth: number;\n\n    /**\n     * The initial size of the internal buffer.\n     *\n     * Defaults to 2048.\n     */\n    initialBufferSize: number;\n\n    /**\n     * If `true`, the keys of an object is sorted. In other words, the encoded\n     * binary is canonical and thus comparable to another encoded binary.\n     *\n     * Defaults to `false`. If enabled, it spends more time in encoding objects.\n     */\n    sortKeys: boolean;\n    /**\n     * If `true`, non-integer numbers are encoded in float32, not in float64 (the default).\n     *\n     * Only use it if precisions don't matter.\n     *\n     * Defaults to `false`.\n     */\n    forceFloat32: boolean;\n\n    /**\n     * If `true`, an object property with `undefined` value are ignored.\n     * e.g. `{ foo: undefined }` will be encoded as `{}`, as `JSON.stringify()` does.\n     *\n     * Defaults to `false`. If enabled, it spends more time in encoding objects.\n     */\n    ignoreUndefined: boolean;\n\n    /**\n     * If `true`, integer numbers are encoded as floating point numbers,\n     * with the `forceFloat32` option taken into account.\n     *\n     * Defaults to `false`.\n     */\n    forceIntegerToFloat: boolean;\n  }>\n> &\n  ContextOf<ContextType>;\n\nexport class Encoder<ContextType = undefined> {\n  private readonly extensionCodec: ExtensionCodecType<ContextType>;\n  private readonly context: ContextType;\n  private readonly useBigInt64: boolean;\n  private readonly maxDepth: number;\n  private readonly initialBufferSize: number;\n  private readonly sortKeys: boolean;\n  private readonly forceFloat32: boolean;\n  private readonly ignoreUndefined: boolean;\n  private readonly forceIntegerToFloat: boolean;\n\n  private pos: number;\n  private view: DataView;\n  private bytes: Uint8Array;\n\n  private entered = false;\n\n  public constructor(options?: EncoderOptions<ContextType>) {\n    this.extensionCodec = options?.extensionCodec ?? (ExtensionCodec.defaultCodec as ExtensionCodecType<ContextType>);\n    this.context = (options as { context: ContextType } | undefined)?.context as ContextType; // needs a type assertion because EncoderOptions has no context property when ContextType is undefined\n\n    this.useBigInt64 = options?.useBigInt64 ?? false;\n    this.maxDepth = options?.maxDepth ?? DEFAULT_MAX_DEPTH;\n    this.initialBufferSize = options?.initialBufferSize ?? DEFAULT_INITIAL_BUFFER_SIZE;\n    this.sortKeys = options?.sortKeys ?? false;\n    this.forceFloat32 = options?.forceFloat32 ?? false;\n    this.ignoreUndefined = options?.ignoreUndefined ?? false;\n    this.forceIntegerToFloat = options?.forceIntegerToFloat ?? false;\n\n    this.pos = 0;\n    this.view = new DataView(new ArrayBuffer(this.initialBufferSize));\n    this.bytes = new Uint8Array(this.view.buffer);\n  }\n\n  private clone() {\n    // Because of slightly special argument `context`,\n    // type assertion is needed.\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    return new Encoder<ContextType>({\n      extensionCodec: this.extensionCodec,\n      context: this.context,\n      useBigInt64: this.useBigInt64,\n      maxDepth: this.maxDepth,\n      initialBufferSize: this.initialBufferSize,\n      sortKeys: this.sortKeys,\n      forceFloat32: this.forceFloat32,\n      ignoreUndefined: this.ignoreUndefined,\n      forceIntegerToFloat: this.forceIntegerToFloat,\n    } as any);\n  }\n\n  private reinitializeState() {\n    this.pos = 0;\n  }\n\n  /**\n   * This is almost equivalent to {@link Encoder#encode}, but it returns an reference of the encoder's internal buffer and thus much faster than {@link Encoder#encode}.\n   *\n   * @returns Encodes the object and returns a shared reference the encoder's internal buffer.\n   */\n  public encodeSharedRef(object: unknown): Uint8Array {\n    if (this.entered) {\n      const instance = this.clone();\n      return instance.encodeSharedRef(object);\n    }\n\n    try {\n      this.entered = true;\n\n      this.reinitializeState();\n      this.doEncode(object, 1);\n      return this.bytes.subarray(0, this.pos);\n    } finally {\n      this.entered = false;\n    }\n  }\n\n  /**\n   * @returns Encodes the object and returns a copy of the encoder's internal buffer.\n   */\n  public encode(object: unknown): Uint8Array {\n    if (this.entered) {\n      const instance = this.clone();\n      return instance.encode(object);\n    }\n\n    try {\n      this.entered = true;\n\n      this.reinitializeState();\n      this.doEncode(object, 1);\n      return this.bytes.slice(0, this.pos);\n    } finally {\n      this.entered = false;\n    }\n  }\n\n  private doEncode(object: unknown, depth: number): void {\n    if (depth > this.maxDepth) {\n      throw new Error(`Too deep objects in depth ${depth}`);\n    }\n\n    if (object == null) {\n      this.encodeNil();\n    } else if (typeof object === \"boolean\") {\n      this.encodeBoolean(object);\n    } else if (typeof object === \"number\") {\n      if (!this.forceIntegerToFloat) {\n        this.encodeNumber(object);\n      } else {\n        this.encodeNumberAsFloat(object);\n      }\n    } else if (typeof object === \"string\") {\n      this.encodeString(object);\n    } else if (this.useBigInt64 && typeof object === \"bigint\") {\n      this.encodeBigInt64(object);\n    } else {\n      this.encodeObject(object, depth);\n    }\n  }\n\n  private ensureBufferSizeToWrite(sizeToWrite: number) {\n    const requiredSize = this.pos + sizeToWrite;\n\n    if (this.view.byteLength < requiredSize) {\n      this.resizeBuffer(requiredSize * 2);\n    }\n  }\n\n  private resizeBuffer(newSize: number) {\n    const newBuffer = new ArrayBuffer(newSize);\n    const newBytes = new Uint8Array(newBuffer);\n    const newView = new DataView(newBuffer);\n\n    newBytes.set(this.bytes);\n\n    this.view = newView;\n    this.bytes = newBytes;\n  }\n\n  private encodeNil() {\n    this.writeU8(0xc0);\n  }\n\n  private encodeBoolean(object: boolean) {\n    if (object === false) {\n      this.writeU8(0xc2);\n    } else {\n      this.writeU8(0xc3);\n    }\n  }\n\n  private encodeNumber(object: number): void {\n    if (!this.forceIntegerToFloat && Number.isSafeInteger(object)) {\n      if (object >= 0) {\n        if (object < 0x80) {\n          // positive fixint\n          this.writeU8(object);\n        } else if (object < 0x100) {\n          // uint 8\n          this.writeU8(0xcc);\n          this.writeU8(object);\n        } else if (object < 0x10000) {\n          // uint 16\n          this.writeU8(0xcd);\n          this.writeU16(object);\n        } else if (object < 0x100000000) {\n          // uint 32\n          this.writeU8(0xce);\n          this.writeU32(object);\n        } else if (!this.useBigInt64) {\n          // uint 64\n          this.writeU8(0xcf);\n          this.writeU64(object);\n        } else {\n          this.encodeNumberAsFloat(object);\n        }\n      } else {\n        if (object >= -0x20) {\n          // negative fixint\n          this.writeU8(0xe0 | (object + 0x20));\n        } else if (object >= -0x80) {\n          // int 8\n          this.writeU8(0xd0);\n          this.writeI8(object);\n        } else if (object >= -0x8000) {\n          // int 16\n          this.writeU8(0xd1);\n          this.writeI16(object);\n        } else if (object >= -0x80000000) {\n          // int 32\n          this.writeU8(0xd2);\n          this.writeI32(object);\n        } else if (!this.useBigInt64) {\n          // int 64\n          this.writeU8(0xd3);\n          this.writeI64(object);\n        } else {\n          this.encodeNumberAsFloat(object);\n        }\n      }\n    } else {\n      this.encodeNumberAsFloat(object);\n    }\n  }\n\n  private encodeNumberAsFloat(object: number): void {\n    if (this.forceFloat32) {\n      // float 32\n      this.writeU8(0xca);\n      this.writeF32(object);\n    } else {\n      // float 64\n      this.writeU8(0xcb);\n      this.writeF64(object);\n    }\n  }\n\n  private encodeBigInt64(object: bigint): void {\n    if (object >= BigInt(0)) {\n      // uint 64\n      this.writeU8(0xcf);\n      this.writeBigUint64(object);\n    } else {\n      // int 64\n      this.writeU8(0xd3);\n      this.writeBigInt64(object);\n    }\n  }\n\n  private writeStringHeader(byteLength: number) {\n    if (byteLength < 32) {\n      // fixstr\n      this.writeU8(0xa0 + byteLength);\n    } else if (byteLength < 0x100) {\n      // str 8\n      this.writeU8(0xd9);\n      this.writeU8(byteLength);\n    } else if (byteLength < 0x10000) {\n      // str 16\n      this.writeU8(0xda);\n      this.writeU16(byteLength);\n    } else if (byteLength < 0x100000000) {\n      // str 32\n      this.writeU8(0xdb);\n      this.writeU32(byteLength);\n    } else {\n      throw new Error(`Too long string: ${byteLength} bytes in UTF-8`);\n    }\n  }\n\n  private encodeString(object: string) {\n    const maxHeaderSize = 1 + 4;\n\n    const byteLength = utf8Count(object);\n    this.ensureBufferSizeToWrite(maxHeaderSize + byteLength);\n    this.writeStringHeader(byteLength);\n    utf8Encode(object, this.bytes, this.pos);\n    this.pos += byteLength;\n  }\n\n  private encodeObject(object: unknown, depth: number) {\n    // try to encode objects with custom codec first of non-primitives\n    const ext = this.extensionCodec.tryToEncode(object, this.context);\n    if (ext != null) {\n      this.encodeExtension(ext);\n    } else if (Array.isArray(object)) {\n      this.encodeArray(object, depth);\n    } else if (ArrayBuffer.isView(object)) {\n      this.encodeBinary(object);\n    } else if (typeof object === \"object\") {\n      this.encodeMap(object as Record<string, unknown>, depth);\n    } else {\n      // symbol, function and other special object come here unless extensionCodec handles them.\n      throw new Error(`Unrecognized object: ${Object.prototype.toString.apply(object)}`);\n    }\n  }\n\n  private encodeBinary(object: ArrayBufferView) {\n    const size = object.byteLength;\n    if (size < 0x100) {\n      // bin 8\n      this.writeU8(0xc4);\n      this.writeU8(size);\n    } else if (size < 0x10000) {\n      // bin 16\n      this.writeU8(0xc5);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // bin 32\n      this.writeU8(0xc6);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large binary: ${size}`);\n    }\n    const bytes = ensureUint8Array(object);\n    this.writeU8a(bytes);\n  }\n\n  private encodeArray(object: Array<unknown>, depth: number) {\n    const size = object.length;\n    if (size < 16) {\n      // fixarray\n      this.writeU8(0x90 + size);\n    } else if (size < 0x10000) {\n      // array 16\n      this.writeU8(0xdc);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // array 32\n      this.writeU8(0xdd);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large array: ${size}`);\n    }\n    for (const item of object) {\n      this.doEncode(item, depth + 1);\n    }\n  }\n\n  private countWithoutUndefined(object: Record<string, unknown>, keys: ReadonlyArray<string>): number {\n    let count = 0;\n\n    for (const key of keys) {\n      if (object[key] !== undefined) {\n        count++;\n      }\n    }\n\n    return count;\n  }\n\n  private encodeMap(object: Record<string, unknown>, depth: number) {\n    const keys = Object.keys(object);\n    if (this.sortKeys) {\n      keys.sort();\n    }\n\n    const size = this.ignoreUndefined ? this.countWithoutUndefined(object, keys) : keys.length;\n\n    if (size < 16) {\n      // fixmap\n      this.writeU8(0x80 + size);\n    } else if (size < 0x10000) {\n      // map 16\n      this.writeU8(0xde);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // map 32\n      this.writeU8(0xdf);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large map object: ${size}`);\n    }\n\n    for (const key of keys) {\n      const value = object[key];\n\n      if (!(this.ignoreUndefined && value === undefined)) {\n        this.encodeString(key);\n        this.doEncode(value, depth + 1);\n      }\n    }\n  }\n\n  private encodeExtension(ext: ExtData) {\n    if (typeof ext.data === \"function\") {\n      const data = ext.data(this.pos + 6);\n      const size = data.length;\n\n      if (size >= 0x100000000) {\n        throw new Error(`Too large extension object: ${size}`);\n      }\n\n      this.writeU8(0xc9);\n      this.writeU32(size);\n      this.writeI8(ext.type);\n      this.writeU8a(data);\n      return;\n    }\n\n    const size = ext.data.length;\n    if (size === 1) {\n      // fixext 1\n      this.writeU8(0xd4);\n    } else if (size === 2) {\n      // fixext 2\n      this.writeU8(0xd5);\n    } else if (size === 4) {\n      // fixext 4\n      this.writeU8(0xd6);\n    } else if (size === 8) {\n      // fixext 8\n      this.writeU8(0xd7);\n    } else if (size === 16) {\n      // fixext 16\n      this.writeU8(0xd8);\n    } else if (size < 0x100) {\n      // ext 8\n      this.writeU8(0xc7);\n      this.writeU8(size);\n    } else if (size < 0x10000) {\n      // ext 16\n      this.writeU8(0xc8);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // ext 32\n      this.writeU8(0xc9);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large extension object: ${size}`);\n    }\n    this.writeI8(ext.type);\n    this.writeU8a(ext.data);\n  }\n\n  private writeU8(value: number) {\n    this.ensureBufferSizeToWrite(1);\n\n    this.view.setUint8(this.pos, value);\n    this.pos++;\n  }\n\n  private writeU8a(values: ArrayLike<number>) {\n    const size = values.length;\n    this.ensureBufferSizeToWrite(size);\n\n    this.bytes.set(values, this.pos);\n    this.pos += size;\n  }\n\n  private writeI8(value: number) {\n    this.ensureBufferSizeToWrite(1);\n\n    this.view.setInt8(this.pos, value);\n    this.pos++;\n  }\n\n  private writeU16(value: number) {\n    this.ensureBufferSizeToWrite(2);\n\n    this.view.setUint16(this.pos, value);\n    this.pos += 2;\n  }\n\n  private writeI16(value: number) {\n    this.ensureBufferSizeToWrite(2);\n\n    this.view.setInt16(this.pos, value);\n    this.pos += 2;\n  }\n\n  private writeU32(value: number) {\n    this.ensureBufferSizeToWrite(4);\n\n    this.view.setUint32(this.pos, value);\n    this.pos += 4;\n  }\n\n  private writeI32(value: number) {\n    this.ensureBufferSizeToWrite(4);\n\n    this.view.setInt32(this.pos, value);\n    this.pos += 4;\n  }\n\n  private writeF32(value: number) {\n    this.ensureBufferSizeToWrite(4);\n\n    this.view.setFloat32(this.pos, value);\n    this.pos += 4;\n  }\n\n  private writeF64(value: number) {\n    this.ensureBufferSizeToWrite(8);\n\n    this.view.setFloat64(this.pos, value);\n    this.pos += 8;\n  }\n\n  private writeU64(value: number) {\n    this.ensureBufferSizeToWrite(8);\n\n    setUint64(this.view, this.pos, value);\n    this.pos += 8;\n  }\n\n  private writeI64(value: number) {\n    this.ensureBufferSizeToWrite(8);\n\n    setInt64(this.view, this.pos, value);\n    this.pos += 8;\n  }\n\n  private writeBigUint64(value: bigint) {\n    this.ensureBufferSizeToWrite(8);\n\n    this.view.setBigUint64(this.pos, value);\n    this.pos += 8;\n  }\n\n  private writeBigInt64(value: bigint) {\n    this.ensureBufferSizeToWrite(8);\n\n    this.view.setBigInt64(this.pos, value);\n    this.pos += 8;\n  }\n}\n","import { Encoder } from \"./Encoder.ts\";\nimport type { EncoderOptions } from \"./Encoder.ts\";\nimport type { SplitUndefined } from \"./context.ts\";\n\n/**\n * It encodes `value` in the MessagePack format and\n * returns a byte buffer.\n *\n * The returned buffer is a slice of a larger `ArrayBuffer`, so you have to use its `#byteOffset` and `#byteLength` in order to convert it to another typed arrays including NodeJS `Buffer`.\n */\nexport function encode<ContextType = undefined>(\n  value: unknown,\n  options?: EncoderOptions<SplitUndefined<ContextType>>,\n): Uint8Array {\n  const encoder = new Encoder(options);\n  return encoder.encodeSharedRef(value);\n}\n","export function prettyByte(byte: number): string {\n  return `${byte < 0 ? \"-\" : \"\"}0x${Math.abs(byte).toString(16).padStart(2, \"0\")}`;\n}\n","import { utf8DecodeJs } from \"./utils/utf8.ts\";\n\nconst DEFAULT_MAX_KEY_LENGTH = 16;\nconst DEFAULT_MAX_LENGTH_PER_KEY = 16;\n\nexport interface KeyDecoder {\n  canBeCached(byteLength: number): boolean;\n  decode(bytes: Uint8Array, inputOffset: number, byteLength: number): string;\n}\ninterface KeyCacheRecord {\n  readonly bytes: Uint8Array;\n  readonly str: string;\n}\n\nexport class CachedKeyDecoder implements KeyDecoder {\n  hit = 0;\n  miss = 0;\n  private readonly caches: Array<Array<KeyCacheRecord>>;\n  readonly maxKeyLength: number;\n  readonly maxLengthPerKey: number;\n\n  constructor(maxKeyLength = DEFAULT_MAX_KEY_LENGTH, maxLengthPerKey = DEFAULT_MAX_LENGTH_PER_KEY) {\n    this.maxKeyLength = maxKeyLength;\n    this.maxLengthPerKey = maxLengthPerKey;\n\n    // avoid `new Array(N)`, which makes a sparse array,\n    // because a sparse array is typically slower than a non-sparse array.\n    this.caches = [];\n    for (let i = 0; i < this.maxKeyLength; i++) {\n      this.caches.push([]);\n    }\n  }\n\n  public canBeCached(byteLength: number): boolean {\n    return byteLength > 0 && byteLength <= this.maxKeyLength;\n  }\n\n  private find(bytes: Uint8Array, inputOffset: number, byteLength: number): string | null {\n    const records = this.caches[byteLength - 1]!;\n\n    FIND_CHUNK: for (const record of records) {\n      const recordBytes = record.bytes;\n\n      for (let j = 0; j < byteLength; j++) {\n        if (recordBytes[j] !== bytes[inputOffset + j]) {\n          continue FIND_CHUNK;\n        }\n      }\n      return record.str;\n    }\n    return null;\n  }\n\n  private store(bytes: Uint8Array, value: string) {\n    const records = this.caches[bytes.length - 1]!;\n    const record: KeyCacheRecord = { bytes, str: value };\n\n    if (records.length >= this.maxLengthPerKey) {\n      // `records` are full!\n      // Set `record` to an arbitrary position.\n      records[(Math.random() * records.length) | 0] = record;\n    } else {\n      records.push(record);\n    }\n  }\n\n  public decode(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n    const cachedValue = this.find(bytes, inputOffset, byteLength);\n    if (cachedValue != null) {\n      this.hit++;\n      return cachedValue;\n    }\n    this.miss++;\n\n    const str = utf8DecodeJs(bytes, inputOffset, byteLength);\n    // Ensure to copy a slice of bytes because the bytes may be a NodeJS Buffer and Buffer#slice() returns a reference to its internal ArrayBuffer.\n    const slicedCopyOfBytes = Uint8Array.prototype.slice.call(bytes, inputOffset, inputOffset + byteLength);\n    this.store(slicedCopyOfBytes, str);\n    return str;\n  }\n}\n","import { prettyByte } from \"./utils/prettyByte.ts\";\nimport { ExtensionCodec } from \"./ExtensionCodec.ts\";\nimport { getInt64, getUint64, UINT32_MAX } from \"./utils/int.ts\";\nimport { utf8Decode } from \"./utils/utf8.ts\";\nimport { ensureUint8Array } from \"./utils/typedArrays.ts\";\nimport { CachedKeyDecoder } from \"./CachedKeyDecoder.ts\";\nimport { DecodeError } from \"./DecodeError.ts\";\nimport type { ContextOf } from \"./context.ts\";\nimport type { ExtensionCodecType } from \"./ExtensionCodec.ts\";\nimport type { KeyDecoder } from \"./CachedKeyDecoder.ts\";\n\nexport type DecoderOptions<ContextType = undefined> = Readonly<\n  Partial<{\n    extensionCodec: ExtensionCodecType<ContextType>;\n\n    /**\n     * Decodes Int64 and Uint64 as bigint if it's set to true.\n     * Depends on ES2020's {@link DataView#getBigInt64} and\n     * {@link DataView#getBigUint64}.\n     *\n     * Defaults to false.\n     */\n    useBigInt64: boolean;\n\n    /**\n     * By default, string values will be decoded as UTF-8 strings. However, if this option is true,\n     * string values will be returned as Uint8Arrays without additional decoding.\n     *\n     * This is useful if the strings may contain invalid UTF-8 sequences.\n     *\n     * Note that this option only applies to string values, not map keys. Additionally, when\n     * enabled, raw string length is limited by the maxBinLength option.\n     */\n    rawStrings: boolean;\n\n    /**\n     * Maximum string length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxStrLength: number;\n    /**\n     * Maximum binary length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxBinLength: number;\n    /**\n     * Maximum array length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxArrayLength: number;\n    /**\n     * Maximum map length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxMapLength: number;\n    /**\n     * Maximum extension length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxExtLength: number;\n\n    /**\n     * An object key decoder. Defaults to the shared instance of {@link CachedKeyDecoder}.\n     * `null` is a special value to disable the use of the key decoder at all.\n     */\n    keyDecoder: KeyDecoder | null;\n\n    /**\n     * A function to convert decoded map key to a valid JS key type.\n     *\n     * Defaults to a function that throws an error if the key is not a string or a number.\n     */\n    mapKeyConverter: (key: unknown) => MapKeyType;\n  }>\n> &\n  ContextOf<ContextType>;\n\nconst STATE_ARRAY = \"array\";\nconst STATE_MAP_KEY = \"map_key\";\nconst STATE_MAP_VALUE = \"map_value\";\n\ntype MapKeyType = string | number;\n\nconst mapKeyConverter = (key: unknown): MapKeyType => {\n  if (typeof key === \"string\" || typeof key === \"number\") {\n    return key;\n  }\n  throw new DecodeError(\"The type of key must be string or number but \" + typeof key);\n};\n\ntype StackMapState = {\n  type: typeof STATE_MAP_KEY | typeof STATE_MAP_VALUE;\n  size: number;\n  key: MapKeyType | null;\n  readCount: number;\n  map: Record<string, unknown>;\n};\n\ntype StackArrayState = {\n  type: typeof STATE_ARRAY;\n  size: number;\n  array: Array<unknown>;\n  position: number;\n};\n\nclass StackPool {\n  private readonly stack: Array<StackState> = [];\n  private stackHeadPosition = -1;\n\n  public get length(): number {\n    return this.stackHeadPosition + 1;\n  }\n\n  public top(): StackState | undefined {\n    return this.stack[this.stackHeadPosition];\n  }\n\n  public pushArrayState(size: number) {\n    const state = this.getUninitializedStateFromPool() as StackArrayState;\n\n    state.type = STATE_ARRAY;\n    state.position = 0;\n    state.size = size;\n    state.array = new Array(size);\n  }\n\n  public pushMapState(size: number) {\n    const state = this.getUninitializedStateFromPool() as StackMapState;\n\n    state.type = STATE_MAP_KEY;\n    state.readCount = 0;\n    state.size = size;\n    state.map = {};\n  }\n\n  private getUninitializedStateFromPool() {\n    this.stackHeadPosition++;\n\n    if (this.stackHeadPosition === this.stack.length) {\n      const partialState: Partial<StackState> = {\n        type: undefined,\n        size: 0,\n        array: undefined,\n        position: 0,\n        readCount: 0,\n        map: undefined,\n        key: null,\n      };\n\n      this.stack.push(partialState as StackState);\n    }\n\n    return this.stack[this.stackHeadPosition];\n  }\n\n  public release(state: StackState): void {\n    const topStackState = this.stack[this.stackHeadPosition];\n\n    if (topStackState !== state) {\n      throw new Error(\"Invalid stack state. Released state is not on top of the stack.\");\n    }\n\n    if (state.type === STATE_ARRAY) {\n      const partialState = state as Partial<StackArrayState>;\n      partialState.size = 0;\n      partialState.array = undefined;\n      partialState.position = 0;\n      partialState.type = undefined;\n    }\n\n    if (state.type === STATE_MAP_KEY || state.type === STATE_MAP_VALUE) {\n      const partialState = state as Partial<StackMapState>;\n      partialState.size = 0;\n      partialState.map = undefined;\n      partialState.readCount = 0;\n      partialState.type = undefined;\n    }\n\n    this.stackHeadPosition--;\n  }\n\n  public reset(): void {\n    this.stack.length = 0;\n    this.stackHeadPosition = -1;\n  }\n}\n\ntype StackState = StackArrayState | StackMapState;\n\nconst HEAD_BYTE_REQUIRED = -1;\n\nconst EMPTY_VIEW = new DataView<ArrayBufferLike>(new ArrayBuffer(0));\nconst EMPTY_BYTES = new Uint8Array<ArrayBufferLike>(EMPTY_VIEW.buffer);\n\ntry {\n  // IE11: The spec says it should throw RangeError,\n  // IE11: but in IE11 it throws TypeError.\n  EMPTY_VIEW.getInt8(0);\n} catch (e) {\n  if (!(e instanceof RangeError)) {\n    throw new Error(\n      \"This module is not supported in the current JavaScript engine because DataView does not throw RangeError on out-of-bounds access\",\n    );\n  }\n}\n\nconst MORE_DATA = new RangeError(\"Insufficient data\");\n\nconst sharedCachedKeyDecoder = new CachedKeyDecoder();\n\nexport class Decoder<ContextType = undefined> {\n  private readonly extensionCodec: ExtensionCodecType<ContextType>;\n  private readonly context: ContextType;\n  private readonly useBigInt64: boolean;\n  private readonly rawStrings: boolean;\n  private readonly maxStrLength: number;\n  private readonly maxBinLength: number;\n  private readonly maxArrayLength: number;\n  private readonly maxMapLength: number;\n  private readonly maxExtLength: number;\n  private readonly keyDecoder: KeyDecoder | null;\n  private readonly mapKeyConverter: (key: unknown) => MapKeyType;\n\n  private totalPos = 0;\n  private pos = 0;\n\n  private view = EMPTY_VIEW;\n  private bytes = EMPTY_BYTES;\n  private headByte = HEAD_BYTE_REQUIRED;\n  private readonly stack = new StackPool();\n\n  private entered = false;\n\n  public constructor(options?: DecoderOptions<ContextType>) {\n    this.extensionCodec = options?.extensionCodec ?? (ExtensionCodec.defaultCodec as ExtensionCodecType<ContextType>);\n    this.context = (options as { context: ContextType } | undefined)?.context as ContextType; // needs a type assertion because EncoderOptions has no context property when ContextType is undefined\n\n    this.useBigInt64 = options?.useBigInt64 ?? false;\n    this.rawStrings = options?.rawStrings ?? false;\n    this.maxStrLength = options?.maxStrLength ?? UINT32_MAX;\n    this.maxBinLength = options?.maxBinLength ?? UINT32_MAX;\n    this.maxArrayLength = options?.maxArrayLength ?? UINT32_MAX;\n    this.maxMapLength = options?.maxMapLength ?? UINT32_MAX;\n    this.maxExtLength = options?.maxExtLength ?? UINT32_MAX;\n    this.keyDecoder = options?.keyDecoder !== undefined ? options.keyDecoder : sharedCachedKeyDecoder;\n    this.mapKeyConverter = options?.mapKeyConverter ?? mapKeyConverter;\n  }\n\n  private clone(): Decoder<ContextType> {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    return new Decoder({\n      extensionCodec: this.extensionCodec,\n      context: this.context,\n      useBigInt64: this.useBigInt64,\n      rawStrings: this.rawStrings,\n      maxStrLength: this.maxStrLength,\n      maxBinLength: this.maxBinLength,\n      maxArrayLength: this.maxArrayLength,\n      maxMapLength: this.maxMapLength,\n      maxExtLength: this.maxExtLength,\n      keyDecoder: this.keyDecoder,\n    } as any);\n  }\n\n  private reinitializeState() {\n    this.totalPos = 0;\n    this.headByte = HEAD_BYTE_REQUIRED;\n    this.stack.reset();\n\n    // view, bytes, and pos will be re-initialized in setBuffer()\n  }\n\n  private setBuffer(buffer: ArrayLike<number> | ArrayBufferView | ArrayBufferLike): void {\n    const bytes = ensureUint8Array(buffer);\n    this.bytes = bytes;\n    this.view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    this.pos = 0;\n  }\n\n  private appendBuffer(buffer: ArrayLike<number> | ArrayBufferView | ArrayBufferLike): void {\n    if (this.headByte === HEAD_BYTE_REQUIRED && !this.hasRemaining(1)) {\n      this.setBuffer(buffer);\n    } else {\n      const remainingData = this.bytes.subarray(this.pos);\n      const newData = ensureUint8Array(buffer);\n\n      // concat remainingData + newData\n      const newBuffer = new Uint8Array(remainingData.length + newData.length);\n      newBuffer.set(remainingData);\n      newBuffer.set(newData, remainingData.length);\n      this.setBuffer(newBuffer);\n    }\n  }\n\n  private hasRemaining(size: number) {\n    return this.view.byteLength - this.pos >= size;\n  }\n\n  private createExtraByteError(posToShow: number): Error {\n    const { view, pos } = this;\n    return new RangeError(`Extra ${view.byteLength - pos} of ${view.byteLength} byte(s) found at buffer[${posToShow}]`);\n  }\n\n  /**\n   * @throws {@link DecodeError}\n   * @throws {@link RangeError}\n   */\n  public decode(buffer: ArrayLike<number> | ArrayBufferView | ArrayBufferLike): unknown {\n    if (this.entered) {\n      const instance = this.clone();\n      return instance.decode(buffer);\n    }\n\n    try {\n      this.entered = true;\n\n      this.reinitializeState();\n      this.setBuffer(buffer);\n\n      const object = this.doDecodeSync();\n      if (this.hasRemaining(1)) {\n        throw this.createExtraByteError(this.pos);\n      }\n      return object;\n    } finally {\n      this.entered = false;\n    }\n  }\n\n  public *decodeMulti(buffer: ArrayLike<number> | ArrayBufferView | ArrayBufferLike): Generator<unknown, void, unknown> {\n    if (this.entered) {\n      const instance = this.clone();\n      yield* instance.decodeMulti(buffer);\n      return;\n    }\n\n    try {\n      this.entered = true;\n\n      this.reinitializeState();\n      this.setBuffer(buffer);\n\n      while (this.hasRemaining(1)) {\n        yield this.doDecodeSync();\n      }\n    } finally {\n      this.entered = false;\n    }\n  }\n\n  public async decodeAsync(stream: AsyncIterable<ArrayLike<number> | ArrayBufferView | ArrayBufferLike>): Promise<unknown> {\n    if (this.entered) {\n      const instance = this.clone();\n      return instance.decodeAsync(stream);\n    }\n\n    try {\n      this.entered = true;\n\n      let decoded = false;\n      let object: unknown;\n      for await (const buffer of stream) {\n        if (decoded) {\n          this.entered = false;\n          throw this.createExtraByteError(this.totalPos);\n        }\n\n        this.appendBuffer(buffer);\n\n        try {\n          object = this.doDecodeSync();\n          decoded = true;\n        } catch (e) {\n          if (!(e instanceof RangeError)) {\n            throw e; // rethrow\n          }\n          // fallthrough\n        }\n        this.totalPos += this.pos;\n      }\n\n      if (decoded) {\n        if (this.hasRemaining(1)) {\n          throw this.createExtraByteError(this.totalPos);\n        }\n        return object;\n      }\n\n      const { headByte, pos, totalPos } = this;\n      throw new RangeError(\n        `Insufficient data in parsing ${prettyByte(headByte)} at ${totalPos} (${pos} in the current buffer)`,\n      );\n    } finally {\n      this.entered = false;\n    }\n  }\n\n  public decodeArrayStream(\n    stream: AsyncIterable<ArrayLike<number> | ArrayBufferView | ArrayBufferLike>,\n  ): AsyncGenerator<unknown, void, unknown> {\n    return this.decodeMultiAsync(stream, true);\n  }\n\n  public decodeStream(stream: AsyncIterable<ArrayLike<number> | ArrayBufferView | ArrayBufferLike>): AsyncGenerator<unknown, void, unknown> {\n    return this.decodeMultiAsync(stream, false);\n  }\n\n  private async *decodeMultiAsync(stream: AsyncIterable<ArrayLike<number> | ArrayBufferView | ArrayBufferLike>, isArray: boolean): AsyncGenerator<unknown, void, unknown> {\n    if (this.entered) {\n      const instance = this.clone();\n      yield* instance.decodeMultiAsync(stream, isArray);\n      return;\n    }\n\n    try {\n      this.entered = true;\n\n      let isArrayHeaderRequired = isArray;\n      let arrayItemsLeft = -1;\n\n      for await (const buffer of stream) {\n        if (isArray && arrayItemsLeft === 0) {\n          throw this.createExtraByteError(this.totalPos);\n        }\n\n        this.appendBuffer(buffer);\n\n        if (isArrayHeaderRequired) {\n          arrayItemsLeft = this.readArraySize();\n          isArrayHeaderRequired = false;\n          this.complete();\n        }\n\n        try {\n          while (true) {\n            yield this.doDecodeSync();\n            if (--arrayItemsLeft === 0) {\n              break;\n            }\n          }\n        } catch (e) {\n          if (!(e instanceof RangeError)) {\n            throw e; // rethrow\n          }\n          // fallthrough\n        }\n        this.totalPos += this.pos;\n      }\n    } finally {\n      this.entered = false;\n    }\n  }\n\n  private doDecodeSync(): unknown {\n    DECODE: while (true) {\n      const headByte = this.readHeadByte();\n      let object: unknown;\n\n      if (headByte >= 0xe0) {\n        // negative fixint (111x xxxx) 0xe0 - 0xff\n        object = headByte - 0x100;\n      } else if (headByte < 0xc0) {\n        if (headByte < 0x80) {\n          // positive fixint (0xxx xxxx) 0x00 - 0x7f\n          object = headByte;\n        } else if (headByte < 0x90) {\n          // fixmap (1000 xxxx) 0x80 - 0x8f\n          const size = headByte - 0x80;\n          if (size !== 0) {\n            this.pushMapState(size);\n            this.complete();\n            continue DECODE;\n          } else {\n            object = {};\n          }\n        } else if (headByte < 0xa0) {\n          // fixarray (1001 xxxx) 0x90 - 0x9f\n          const size = headByte - 0x90;\n          if (size !== 0) {\n            this.pushArrayState(size);\n            this.complete();\n            continue DECODE;\n          } else {\n            object = [];\n          }\n        } else {\n          // fixstr (101x xxxx) 0xa0 - 0xbf\n          const byteLength = headByte - 0xa0;\n          object = this.decodeString(byteLength, 0);\n        }\n      } else if (headByte === 0xc0) {\n        // nil\n        object = null;\n      } else if (headByte === 0xc2) {\n        // false\n        object = false;\n      } else if (headByte === 0xc3) {\n        // true\n        object = true;\n      } else if (headByte === 0xca) {\n        // float 32\n        object = this.readF32();\n      } else if (headByte === 0xcb) {\n        // float 64\n        object = this.readF64();\n      } else if (headByte === 0xcc) {\n        // uint 8\n        object = this.readU8();\n      } else if (headByte === 0xcd) {\n        // uint 16\n        object = this.readU16();\n      } else if (headByte === 0xce) {\n        // uint 32\n        object = this.readU32();\n      } else if (headByte === 0xcf) {\n        // uint 64\n        if (this.useBigInt64) {\n          object = this.readU64AsBigInt();\n        } else {\n          object = this.readU64();\n        }\n      } else if (headByte === 0xd0) {\n        // int 8\n        object = this.readI8();\n      } else if (headByte === 0xd1) {\n        // int 16\n        object = this.readI16();\n      } else if (headByte === 0xd2) {\n        // int 32\n        object = this.readI32();\n      } else if (headByte === 0xd3) {\n        // int 64\n        if (this.useBigInt64) {\n          object = this.readI64AsBigInt();\n        } else {\n          object = this.readI64();\n        }\n      } else if (headByte === 0xd9) {\n        // str 8\n        const byteLength = this.lookU8();\n        object = this.decodeString(byteLength, 1);\n      } else if (headByte === 0xda) {\n        // str 16\n        const byteLength = this.lookU16();\n        object = this.decodeString(byteLength, 2);\n      } else if (headByte === 0xdb) {\n        // str 32\n        const byteLength = this.lookU32();\n        object = this.decodeString(byteLength, 4);\n      } else if (headByte === 0xdc) {\n        // array 16\n        const size = this.readU16();\n        if (size !== 0) {\n          this.pushArrayState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = [];\n        }\n      } else if (headByte === 0xdd) {\n        // array 32\n        const size = this.readU32();\n        if (size !== 0) {\n          this.pushArrayState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = [];\n        }\n      } else if (headByte === 0xde) {\n        // map 16\n        const size = this.readU16();\n        if (size !== 0) {\n          this.pushMapState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = {};\n        }\n      } else if (headByte === 0xdf) {\n        // map 32\n        const size = this.readU32();\n        if (size !== 0) {\n          this.pushMapState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = {};\n        }\n      } else if (headByte === 0xc4) {\n        // bin 8\n        const size = this.lookU8();\n        object = this.decodeBinary(size, 1);\n      } else if (headByte === 0xc5) {\n        // bin 16\n        const size = this.lookU16();\n        object = this.decodeBinary(size, 2);\n      } else if (headByte === 0xc6) {\n        // bin 32\n        const size = this.lookU32();\n        object = this.decodeBinary(size, 4);\n      } else if (headByte === 0xd4) {\n        // fixext 1\n        object = this.decodeExtension(1, 0);\n      } else if (headByte === 0xd5) {\n        // fixext 2\n        object = this.decodeExtension(2, 0);\n      } else if (headByte === 0xd6) {\n        // fixext 4\n        object = this.decodeExtension(4, 0);\n      } else if (headByte === 0xd7) {\n        // fixext 8\n        object = this.decodeExtension(8, 0);\n      } else if (headByte === 0xd8) {\n        // fixext 16\n        object = this.decodeExtension(16, 0);\n      } else if (headByte === 0xc7) {\n        // ext 8\n        const size = this.lookU8();\n        object = this.decodeExtension(size, 1);\n      } else if (headByte === 0xc8) {\n        // ext 16\n        const size = this.lookU16();\n        object = this.decodeExtension(size, 2);\n      } else if (headByte === 0xc9) {\n        // ext 32\n        const size = this.lookU32();\n        object = this.decodeExtension(size, 4);\n      } else {\n        throw new DecodeError(`Unrecognized type byte: ${prettyByte(headByte)}`);\n      }\n\n      this.complete();\n\n      const stack = this.stack;\n      while (stack.length > 0) {\n        // arrays and maps\n        const state = stack.top()!;\n        if (state.type === STATE_ARRAY) {\n          state.array[state.position] = object;\n          state.position++;\n          if (state.position === state.size) {\n            object = state.array;\n            stack.release(state);\n          } else {\n            continue DECODE;\n          }\n        } else if (state.type === STATE_MAP_KEY) {\n          if (object === \"__proto__\") {\n            throw new DecodeError(\"The key __proto__ is not allowed\");\n          }\n\n          state.key = this.mapKeyConverter(object);\n          state.type = STATE_MAP_VALUE;\n          continue DECODE;\n        } else {\n          // it must be `state.type === State.MAP_VALUE` here\n\n          state.map[state.key!] = object;\n          state.readCount++;\n\n          if (state.readCount === state.size) {\n            object = state.map;\n            stack.release(state);\n          } else {\n            state.key = null;\n            state.type = STATE_MAP_KEY;\n            continue DECODE;\n          }\n        }\n      }\n\n      return object;\n    }\n  }\n\n  private readHeadByte(): number {\n    if (this.headByte === HEAD_BYTE_REQUIRED) {\n      this.headByte = this.readU8();\n      // console.log(\"headByte\", prettyByte(this.headByte));\n    }\n\n    return this.headByte;\n  }\n\n  private complete(): void {\n    this.headByte = HEAD_BYTE_REQUIRED;\n  }\n\n  private readArraySize(): number {\n    const headByte = this.readHeadByte();\n\n    switch (headByte) {\n      case 0xdc:\n        return this.readU16();\n      case 0xdd:\n        return this.readU32();\n      default: {\n        if (headByte < 0xa0) {\n          return headByte - 0x90;\n        } else {\n          throw new DecodeError(`Unrecognized array type byte: ${prettyByte(headByte)}`);\n        }\n      }\n    }\n  }\n\n  private pushMapState(size: number) {\n    if (size > this.maxMapLength) {\n      throw new DecodeError(`Max length exceeded: map length (${size}) > maxMapLengthLength (${this.maxMapLength})`);\n    }\n\n    this.stack.pushMapState(size);\n  }\n\n  private pushArrayState(size: number) {\n    if (size > this.maxArrayLength) {\n      throw new DecodeError(`Max length exceeded: array length (${size}) > maxArrayLength (${this.maxArrayLength})`);\n    }\n\n    this.stack.pushArrayState(size);\n  }\n\n  private decodeString(byteLength: number, headerOffset: number): string | Uint8Array {\n    if (!this.rawStrings || this.stateIsMapKey()) {\n      return this.decodeUtf8String(byteLength, headerOffset);\n    }\n    return this.decodeBinary(byteLength, headerOffset);\n  }\n\n  /**\n   * @throws {@link RangeError}\n   */\n  private decodeUtf8String(byteLength: number, headerOffset: number): string {\n    if (byteLength > this.maxStrLength) {\n      throw new DecodeError(\n        `Max length exceeded: UTF-8 byte length (${byteLength}) > maxStrLength (${this.maxStrLength})`,\n      );\n    }\n\n    if (this.bytes.byteLength < this.pos + headerOffset + byteLength) {\n      throw MORE_DATA;\n    }\n\n    const offset = this.pos + headerOffset;\n    let object: string;\n    if (this.stateIsMapKey() && this.keyDecoder?.canBeCached(byteLength)) {\n      object = this.keyDecoder.decode(this.bytes, offset, byteLength);\n    } else {\n      object = utf8Decode(this.bytes, offset, byteLength);\n    }\n    this.pos += headerOffset + byteLength;\n    return object;\n  }\n\n  private stateIsMapKey(): boolean {\n    if (this.stack.length > 0) {\n      const state = this.stack.top()!;\n      return state.type === STATE_MAP_KEY;\n    }\n    return false;\n  }\n\n  /**\n   * @throws {@link RangeError}\n   */\n  private decodeBinary(byteLength: number, headOffset: number): Uint8Array {\n    if (byteLength > this.maxBinLength) {\n      throw new DecodeError(`Max length exceeded: bin length (${byteLength}) > maxBinLength (${this.maxBinLength})`);\n    }\n\n    if (!this.hasRemaining(byteLength + headOffset)) {\n      throw MORE_DATA;\n    }\n\n    const offset = this.pos + headOffset;\n    const object = this.bytes.subarray(offset, offset + byteLength);\n    this.pos += headOffset + byteLength;\n    return object;\n  }\n\n  private decodeExtension(size: number, headOffset: number): unknown {\n    if (size > this.maxExtLength) {\n      throw new DecodeError(`Max length exceeded: ext length (${size}) > maxExtLength (${this.maxExtLength})`);\n    }\n\n    const extType = this.view.getInt8(this.pos + headOffset);\n    const data = this.decodeBinary(size, headOffset + 1 /* extType */);\n    return this.extensionCodec.decode(data, extType, this.context);\n  }\n\n  private lookU8() {\n    return this.view.getUint8(this.pos);\n  }\n\n  private lookU16() {\n    return this.view.getUint16(this.pos);\n  }\n\n  private lookU32() {\n    return this.view.getUint32(this.pos);\n  }\n\n  private readU8(): number {\n    const value = this.view.getUint8(this.pos);\n    this.pos++;\n    return value;\n  }\n\n  private readI8(): number {\n    const value = this.view.getInt8(this.pos);\n    this.pos++;\n    return value;\n  }\n\n  private readU16(): number {\n    const value = this.view.getUint16(this.pos);\n    this.pos += 2;\n    return value;\n  }\n\n  private readI16(): number {\n    const value = this.view.getInt16(this.pos);\n    this.pos += 2;\n    return value;\n  }\n\n  private readU32(): number {\n    const value = this.view.getUint32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readI32(): number {\n    const value = this.view.getInt32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readU64(): number {\n    const value = getUint64(this.view, this.pos);\n    this.pos += 8;\n    return value;\n  }\n\n  private readI64(): number {\n    const value = getInt64(this.view, this.pos);\n    this.pos += 8;\n    return value;\n  }\n\n  private readU64AsBigInt(): bigint {\n    const value = this.view.getBigUint64(this.pos);\n    this.pos += 8;\n    return value;\n  }\n\n  private readI64AsBigInt(): bigint {\n    const value = this.view.getBigInt64(this.pos);\n    this.pos += 8;\n    return value;\n  }\n\n  private readF32() {\n    const value = this.view.getFloat32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readF64() {\n    const value = this.view.getFloat64(this.pos);\n    this.pos += 8;\n    return value;\n  }\n}\n","import { Decoder } from \"./Decoder.ts\";\nimport type { DecoderOptions } from \"./Decoder.ts\";\nimport type { SplitUndefined } from \"./context.ts\";\n\n/**\n * It decodes a single MessagePack object in a buffer.\n *\n * This is a synchronous decoding function.\n * See other variants for asynchronous decoding: {@link decodeAsync}, {@link decodeMultiStream}, or {@link decodeArrayStream}.\n *\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\nexport function decode<ContextType = undefined>(\n  buffer: ArrayLike<number> | ArrayBufferView | ArrayBufferLike,\n  options?: DecoderOptions<SplitUndefined<ContextType>>,\n): unknown {\n  const decoder = new Decoder(options);\n  return decoder.decode(buffer);\n}\n\n/**\n * It decodes multiple MessagePack objects in a buffer.\n * This is corresponding to {@link decodeMultiStream}.\n *\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\nexport function decodeMulti<ContextType = undefined>(\n  buffer: ArrayLike<number> | BufferSource,\n  options?: DecoderOptions<SplitUndefined<ContextType>>,\n): Generator<unknown, void, unknown> {\n  const decoder = new Decoder(options);\n  return decoder.decodeMulti(buffer);\n}\n","// utility for whatwg streams\n\n// The living standard of whatwg streams says\n// ReadableStream is also AsyncIterable, but\n// as of June 2019, no browser implements it.\n// See https://streams.spec.whatwg.org/ for details\nexport type ReadableStreamLike<T> = AsyncIterable<T> | ReadableStream<T>;\n\nexport function isAsyncIterable<T>(object: ReadableStreamLike<T>): object is AsyncIterable<T> {\n  return (object as any)[Symbol.asyncIterator] != null;\n}\n\nexport async function* asyncIterableFromStream<T>(stream: ReadableStream<T>): AsyncIterable<T> {\n  const reader = stream.getReader();\n\n  try {\n    while (true) {\n      const { done, value } = await reader.read();\n      if (done) {\n        return;\n      }\n      yield value;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function ensureAsyncIterable<T>(streamLike: ReadableStreamLike<T>): AsyncIterable<T> {\n  if (isAsyncIterable(streamLike)) {\n    return streamLike;\n  } else {\n    return asyncIterableFromStream(streamLike);\n  }\n}\n","import { Decoder } from \"./Decoder.ts\";\nimport { ensureAsyncIterable } from \"./utils/stream.ts\";\nimport type { DecoderOptions } from \"./Decoder.ts\";\nimport type { ReadableStreamLike } from \"./utils/stream.ts\";\nimport type { SplitUndefined } from \"./context.ts\";\n\n/**\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\nexport async function decodeAsync<ContextType = undefined>(\n  streamLike: ReadableStreamLike<ArrayLike<number> | BufferSource>,\n  options?: DecoderOptions<SplitUndefined<ContextType>>,\n): Promise<unknown> {\n  const stream = ensureAsyncIterable(streamLike);\n  const decoder = new Decoder(options);\n  return decoder.decodeAsync(stream);\n}\n\n/**\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\nexport function decodeArrayStream<ContextType>(\n  streamLike: ReadableStreamLike<ArrayLike<number> | BufferSource>,\n  options?: DecoderOptions<SplitUndefined<ContextType>>,\n): AsyncGenerator<unknown, void, unknown> {\n  const stream = ensureAsyncIterable(streamLike);\n  const decoder = new Decoder(options);\n  return decoder.decodeArrayStream(stream);\n}\n\n/**\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\nexport function decodeMultiStream<ContextType>(\n  streamLike: ReadableStreamLike<ArrayLike<number> | BufferSource>,\n  options?: DecoderOptions<SplitUndefined<ContextType>>,\n): AsyncGenerator<unknown, void, unknown> {\n  const stream = ensureAsyncIterable(streamLike);\n  const decoder = new Decoder(options);\n  return decoder.decodeStream(stream);\n}\n","// Main Functions:\n\nimport { encode } from \"./encode.ts\";\nexport { encode };\n\nimport { decode, decodeMulti } from \"./decode.ts\";\nexport { decode, decodeMulti };\n\nimport { decodeAsync, decodeArrayStream, decodeMultiStream } from \"./decodeAsync.ts\";\nexport { decodeAsync, decodeArrayStream, decodeMultiStream };\n\nimport { Decoder } from \"./Decoder.ts\";\nexport { Decoder };\nimport type { DecoderOptions } from \"./Decoder.ts\";\nexport type { DecoderOptions };\nimport { DecodeError } from \"./DecodeError.ts\";\nexport { DecodeError };\n\nimport { Encoder } from \"./Encoder.ts\";\nexport { Encoder };\nimport type { EncoderOptions } from \"./Encoder.ts\";\nexport type { EncoderOptions };\n\n// Utilities for Extension Types:\n\nimport { ExtensionCodec } from \"./ExtensionCodec.ts\";\nexport { ExtensionCodec };\nimport type { ExtensionCodecType, ExtensionDecoderType, ExtensionEncoderType } from \"./ExtensionCodec.ts\";\nexport type { ExtensionCodecType, ExtensionDecoderType, ExtensionEncoderType };\nimport { ExtData } from \"./ExtData.ts\";\nexport { ExtData };\n\nimport {\n  EXT_TIMESTAMP,\n  encodeDateToTimeSpec,\n  encodeTimeSpecToTimestamp,\n  decodeTimestampToTimeSpec,\n  encodeTimestampExtension,\n  decodeTimestampExtension,\n} from \"./timestamp.ts\";\nexport {\n  EXT_TIMESTAMP,\n  encodeDateToTimeSpec,\n  encodeTimeSpecToTimestamp,\n  decodeTimestampToTimeSpec,\n  encodeTimestampExtension,\n  decodeTimestampExtension,\n};\n",null,null,null,null,null,null,null,null,null,null,null,null,null,"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=externalPluginAdapterManifest.js.map",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"/**\n * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.\n * @todo re-check https://issues.chromium.org/issues/42212588\n * @module\n */\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\nfunction fromBig(\n  n: bigint,\n  le = false\n): {\n  h: number;\n  l: number;\n} {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false): Uint32Array[] {\n  const len = lst.length;\n  let Ah = new Uint32Array(len);\n  let Al = new Uint32Array(len);\n  for (let i = 0; i < len; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number): bigint => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number): number => h >>> s;\nconst shrSL = (h: number, l: number, s: number): number => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number): number => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number): number => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number): number => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number): number => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number): number => l;\nconst rotr32L = (h: number, _l: number): number => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number): number => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number): number => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number): number => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number): number => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(\n  Ah: number,\n  Al: number,\n  Bh: number,\n  Bl: number\n): {\n  h: number;\n  l: number;\n} {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number): number => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number): number =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number): number =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number): number =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number): number =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number): number =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  add, add3H, add3L, add4H, add4L, add5H, add5L, fromBig, rotlBH, rotlBL, rotlSH, rotlSL, rotr32H, rotr32L, rotrBH, rotrBL, rotrSH, rotrSL, shrSH, shrSL, split, toBig\n};\n// prettier-ignore\nconst u64: { fromBig: typeof fromBig; split: typeof split; toBig: (h: number, l: number) => bigint; shrSH: (h: number, _l: number, s: number) => number; shrSL: (h: number, l: number, s: number) => number; rotrSH: (h: number, l: number, s: number) => number; rotrSL: (h: number, l: number, s: number) => number; rotrBH: (h: number, l: number, s: number) => number; rotrBL: (h: number, l: number, s: number) => number; rotr32H: (_h: number, l: number) => number; rotr32L: (h: number, _l: number) => number; rotlSH: (h: number, l: number, s: number) => number; rotlSL: (h: number, l: number, s: number) => number; rotlBH: (h: number, l: number, s: number) => number; rotlBL: (h: number, l: number, s: number) => number; add: typeof add; add3L: (Al: number, Bl: number, Cl: number) => number; add3H: (low: number, Ah: number, Bh: number, Ch: number) => number; add4L: (Al: number, Bl: number, Cl: number, Dl: number) => number; add4H: (low: number, Ah: number, Bh: number, Ch: number, Dh: number) => number; add5H: (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) => number; add5L: (Al: number, Bl: number, Cl: number, Dl: number, El: number) => number; } = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","/**\n * Internal webcrypto alias.\n * We prefer WebCrypto aka globalThis.crypto, which exists in node.js 16+.\n * Falls back to Node.js built-in crypto for Node.js <=v14.\n * See utils.ts for details.\n * @module\n */\n// @ts-ignore\nimport * as nc from 'node:crypto';\nexport const crypto: any =\n  nc && typeof nc === 'object' && 'webcrypto' in nc\n    ? (nc.webcrypto as any)\n    : nc && typeof nc === 'object' && 'randomBytes' in nc\n      ? nc\n      : undefined;\n","/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\nexport function isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n\n/** Asserts something is positive integer. */\nexport function anumber(n: number): void {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error('positive integer expected, got ' + n);\n}\n\n/** Asserts something is Uint8Array. */\nexport function abytes(b: Uint8Array | undefined, ...lengths: number[]): void {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n\n/** Asserts something is hash */\nexport function ahash(h: IHash): void {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.createHasher');\n  anumber(h.outputLen);\n  anumber(h.blockLen);\n}\n\n/** Asserts a hash instance has not been destroyed / finished */\nexport function aexists(instance: any, checkFinished = true): void {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\n\n/** Asserts output is properly-sized byte array */\nexport function aoutput(out: any, instance: any): void {\n  abytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error('digestInto() expects output buffer of length at least ' + min);\n  }\n}\n\n/** Generic type encompassing 8/16/32-byte arrays - but not 64-byte. */\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n/** Cast u8 / u16 / u32 to u8. */\nexport function u8(arr: TypedArray): Uint8Array {\n  return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n\n/** Cast u8 / u16 / u32 to u32. */\nexport function u32(arr: TypedArray): Uint32Array {\n  return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\nexport function clean(...arrays: TypedArray[]): void {\n  for (let i = 0; i < arrays.length; i++) {\n    arrays[i].fill(0);\n  }\n}\n\n/** Create DataView of an array for easy byte-level manipulation. */\nexport function createView(arr: TypedArray): DataView {\n  return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word: number, shift: number): number {\n  return (word << (32 - shift)) | (word >>> shift);\n}\n\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word: number, shift: number): number {\n  return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE: boolean = /* @__PURE__ */ (() =>\n  new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n\n/** The byte swap operation for uint32 */\nexport function byteSwap(word: number): number {\n  return (\n    ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff)\n  );\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const swap8IfBE: (n: number) => number = isLE\n  ? (n: number) => n\n  : (n: number) => byteSwap(n);\n\n/** @deprecated */\nexport const byteSwapIfBE: typeof swap8IfBE = swap8IfBE;\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr: Uint32Array): Uint32Array {\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = byteSwap(arr[i]);\n  }\n  return arr;\n}\n\nexport const swap32IfBE: (u: Uint32Array) => Uint32Array = isLE\n  ? (u: Uint32Array) => u\n  : byteSwap32;\n\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin: boolean = /* @__PURE__ */ (() =>\n  // @ts-ignore\n  typeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // @ts-ignore\n  if (hasHexBuiltin) return bytes.toHex();\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 } as const;\nfunction asciiToBase16(ch: number): number | undefined {\n  if (ch >= asciis._0 && ch <= asciis._9) return ch - asciis._0; // '2' => 50-48\n  if (ch >= asciis.A && ch <= asciis.F) return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n  if (ch >= asciis.a && ch <= asciis.f) return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n  return;\n}\n\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // @ts-ignore\n  if (hasHexBuiltin) return Uint8Array.fromHex(hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n  }\n  return array;\n}\n\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async (): Promise<void> => {};\n\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(\n  iters: number,\n  tick: number,\n  cb: (i: number) => void\n): Promise<void> {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols, but ts doesn't see them: https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\n/**\n * Converts string to bytes using UTF8 encoding.\n * @example utf8ToBytes('abc') // Uint8Array.from([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error('string expected');\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes: Uint8Array): string {\n  return new TextDecoder().decode(bytes);\n}\n\n/** Accepted input of hash functions. Strings are converted to byte arrays. */\nexport type Input = string | Uint8Array;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/** KDFs can accept string or Uint8Array for user convenience. */\nexport type KDFInput = string | Uint8Array;\n/**\n * Helper for KDFs: consumes uint8array or string.\n * When string is passed, does utf8 decoding, using TextDecoder.\n */\nexport function kdfInputToBytes(data: KDFInput): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/** Copies several Uint8Arrays into one. */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n    throw new Error('options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\n/** Hash interface. */\nexport type IHash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\n\n/** For runtime check if class implements interface */\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  abstract clone(): T;\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n/** Hash function */\nexport type CHash = ReturnType<typeof createHasher>;\n/** Hash function with output */\nexport type CHashO = ReturnType<typeof createOptHasher>;\n/** XOF with output */\nexport type CHashXO = ReturnType<typeof createXOFer>;\n\n/** Wraps hash function, creating an interface on top of it */\nexport function createHasher<T extends Hash<T>>(\n  hashCons: () => Hash<T>\n): {\n  (msg: Input): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(): Hash<T>;\n} {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function createOptHasher<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n): {\n  (msg: Input, opts?: T): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(opts?: T): Hash<H>;\n} {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts?: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function createXOFer<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n): {\n  (msg: Input, opts?: T): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(opts?: T): HashXOF<H>;\n} {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts?: T) => hashCons(opts);\n  return hashC;\n}\nexport const wrapConstructor: typeof createHasher = createHasher;\nexport const wrapConstructorWithOpts: typeof createOptHasher = createOptHasher;\nexport const wrapXOFConstructorWithOpts: typeof createXOFer = createXOFer;\n\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  // Legacy Node.js compatibility\n  if (crypto && typeof crypto.randomBytes === 'function') {\n    return Uint8Array.from(crypto.randomBytes(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","/**\n * SHA3 (keccak) hash function, based on a new \"Sponge function\" design.\n * Different from older hashes, the internal state is bigger than output size.\n *\n * Check out [FIPS-202](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf),\n * [Website](https://keccak.team/keccak.html),\n * [the differences between SHA-3 and Keccak](https://crypto.stackexchange.com/questions/15727/what-are-the-key-differences-between-the-draft-sha-3-standard-and-the-keccak-sub).\n *\n * Check out `sha3-addons` module for cSHAKE, k12, and others.\n * @module\n */\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.ts';\n// prettier-ignore\nimport {\n  abytes, aexists, anumber, aoutput,\n  clean, createHasher, createXOFer, Hash,\n  swap32IfBE,\n  toBytes, u32,\n  type CHash, type CHashXO, type HashXOF, type Input\n} from './utils.ts';\n\n// No __PURE__ annotations in sha3 header:\n// EVERYTHING is in fact used on every export.\n// Various per round constants calculations\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nconst SHA3_PI: number[] = [];\nconst SHA3_ROTL: number[] = [];\nconst _SHA3_IOTA: bigint[] = [];\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n    if (R & _2n) t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n  }\n  _SHA3_IOTA.push(t);\n}\nconst IOTAS = split(_SHA3_IOTA, true);\nconst SHA3_IOTA_H = IOTAS[0];\nconst SHA3_IOTA_L = IOTAS[1];\n\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h: number, l: number, s: number) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h: number, l: number, s: number) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n\n/** `keccakf1600` internal function, additionally allows to adjust round count. */\nexport function keccakP(s: Uint32Array, rounds: number = 24): void {\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta θ\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (ρ) and Pi (π)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (χ)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (ι)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  clean(B);\n}\n\n/** Keccak sponge function. */\nexport class Keccak extends Hash<Keccak> implements HashXOF<Keccak> {\n  protected state: Uint8Array;\n  protected pos = 0;\n  protected posOut = 0;\n  protected finished = false;\n  protected state32: Uint32Array;\n  protected destroyed = false;\n\n  public blockLen: number;\n  public suffix: number;\n  public outputLen: number;\n  protected enableXOF = false;\n  protected rounds: number;\n\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(\n    blockLen: number,\n    suffix: number,\n    outputLen: number,\n    enableXOF = false,\n    rounds: number = 24\n  ) {\n    super();\n    this.blockLen = blockLen;\n    this.suffix = suffix;\n    this.outputLen = outputLen;\n    this.enableXOF = enableXOF;\n    this.rounds = rounds;\n    // Can be passed from user as dkLen\n    anumber(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    // 0 < blockLen < 200\n    if (!(0 < blockLen && blockLen < 200))\n      throw new Error('only keccak-f1600 function is supported');\n    this.state = new Uint8Array(200);\n    this.state32 = u32(this.state);\n  }\n  clone(): Keccak {\n    return this._cloneInto();\n  }\n  protected keccak(): void {\n    swap32IfBE(this.state32);\n    keccakP(this.state32, this.rounds);\n    swap32IfBE(this.state32);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data: Input): this {\n    aexists(this);\n    data = toBytes(data);\n    abytes(data);\n    const { blockLen, state } = this;\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  protected finish(): void {\n    if (this.finished) return;\n    this.finished = true;\n    const { state, suffix, pos, blockLen } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  protected writeInto(out: Uint8Array): Uint8Array {\n    aexists(this, false);\n    abytes(out);\n    this.finish();\n    const bufferOut = this.state;\n    const { blockLen } = this;\n    for (let pos = 0, len = out.length; pos < len; ) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out: Uint8Array): Uint8Array {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes: number): Uint8Array {\n    anumber(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out: Uint8Array): Uint8Array {\n    aoutput(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest(): Uint8Array {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy(): void {\n    this.destroyed = true;\n    clean(this.state);\n  }\n  _cloneInto(to?: Keccak): Keccak {\n    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n    to ||= new Keccak(blockLen, suffix, outputLen, enableXOF, rounds);\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\n\nconst gen = (suffix: number, blockLen: number, outputLen: number) =>\n  createHasher(() => new Keccak(blockLen, suffix, outputLen));\n\n/** SHA3-224 hash function. */\nexport const sha3_224: CHash = /* @__PURE__ */ (() => gen(0x06, 144, 224 / 8))();\n/** SHA3-256 hash function. Different from keccak-256. */\nexport const sha3_256: CHash = /* @__PURE__ */ (() => gen(0x06, 136, 256 / 8))();\n/** SHA3-384 hash function. */\nexport const sha3_384: CHash = /* @__PURE__ */ (() => gen(0x06, 104, 384 / 8))();\n/** SHA3-512 hash function. */\nexport const sha3_512: CHash = /* @__PURE__ */ (() => gen(0x06, 72, 512 / 8))();\n\n/** keccak-224 hash function. */\nexport const keccak_224: CHash = /* @__PURE__ */ (() => gen(0x01, 144, 224 / 8))();\n/** keccak-256 hash function. Different from SHA3-256. */\nexport const keccak_256: CHash = /* @__PURE__ */ (() => gen(0x01, 136, 256 / 8))();\n/** keccak-384 hash function. */\nexport const keccak_384: CHash = /* @__PURE__ */ (() => gen(0x01, 104, 384 / 8))();\n/** keccak-512 hash function. */\nexport const keccak_512: CHash = /* @__PURE__ */ (() => gen(0x01, 72, 512 / 8))();\n\nexport type ShakeOpts = { dkLen?: number };\n\nconst genShake = (suffix: number, blockLen: number, outputLen: number) =>\n  createXOFer<HashXOF<Keccak>, ShakeOpts>(\n    (opts: ShakeOpts = {}) =>\n      new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true)\n  );\n\n/** SHAKE128 XOF with 128-bit security. */\nexport const shake128: CHashXO = /* @__PURE__ */ (() => genShake(0x1f, 168, 128 / 8))();\n/** SHAKE256 XOF with 256-bit security. */\nexport const shake256: CHashXO = /* @__PURE__ */ (() => genShake(0x1f, 136, 256 / 8))();\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"import { Program } from '@coral-xyz/anchor'\nimport { Connection, PublicKey } from '@solana/web3.js'\nimport { ShortxContract } from './types/shortx.js'\nimport fs from 'fs';\nimport Trade from './trade.js'\nimport Config from './config.js'\nimport Position from './position.js'\n\nexport default class ShortXClient {\n  program: Program<ShortxContract>\n  trade: Trade\n  config: Config\n  position: Position\n  ADMIN_KEY: PublicKey\n  FEE_VAULT: PublicKey\n  USDC_MINT: PublicKey\n  constructor(connection: Connection, adminKey: PublicKey, feeVault: PublicKey, usdcMint: PublicKey) {\n    const IDL = JSON.parse(\n      fs.readFileSync(\n        require.resolve('shortx-sdk/idl'),\n        'utf-8'\n      )\n    );\n    this.program = new Program(IDL as ShortxContract,{connection})\n    this.trade = new Trade(this.program, adminKey, feeVault, usdcMint)\n    this.position = new Position(this.program)\n    this.config = new Config(this.program, adminKey, feeVault, usdcMint)\n    this.ADMIN_KEY = adminKey\n    this.FEE_VAULT = feeVault\n    this.USDC_MINT = usdcMint\n  }\n}\n\n\n//export types\nexport * from './types/trade.js'\nexport * from './types/position.js'\nexport * from './types/shortx.js'\nexport * from './types/index.js'\n\n\n","import { Program } from \"@coral-xyz/anchor\";\nimport { ShortxContract } from \"./types/shortx.js\";\nimport * as anchor from \"@coral-xyz/anchor\";\nimport {\n  AddressLookupTableAccount,\n  Connection,\n  PublicKey,\n  TransactionInstruction,\n  VersionedTransaction,\n} from \"@solana/web3.js\";\nimport { CreateMarketArgs, OpenOrderArgs } from \"./types/trade.js\";\nimport { RpcOptions } from \"./types/index.js\";\nimport BN from \"bn.js\";\nimport { encodeString, formatMarket } from \"./utils/helpers.js\";\nimport {\n  getCollectionPDA,\n  getConfigPDA,\n  getMarketPDA,\n  getPositionAccountPDA,\n  getPositionNftPDA,\n  getSubPositionAccountPDA,\n} from \"./utils/pda/index.js\";\nimport createVersionedTransaction from \"./utils/sendVersionedTransaction.js\";\nimport { swap } from \"./utils/swap.js\";\nimport {\n  ASSOCIATED_TOKEN_PROGRAM_ID,\n  getAssociatedTokenAddressSync,\n  TOKEN_PROGRAM_ID,\n} from \"@solana/spl-token\";\nimport { USDC_DECIMALS, METAPLEX_ID } from \"./utils/constants.js\";\nimport Position from \"./position.js\";\nimport { MPL_CORE_PROGRAM_ID } from \"@metaplex-foundation/mpl-core\";\n\nexport default class Trade {\n  METAPLEX_PROGRAM_ID = new PublicKey(METAPLEX_ID);\n  decimals: number = USDC_DECIMALS;\n  position: Position;\n  ADMIN_KEY: PublicKey;\n  FEE_VAULT: PublicKey;\n  USDC_MINT: PublicKey;\n  constructor(\n    private program: Program<ShortxContract>,\n    adminKey: PublicKey,\n    feeVault: PublicKey,\n    usdcMint: PublicKey\n  ) {\n    this.ADMIN_KEY = adminKey;\n    this.FEE_VAULT = feeVault;\n    this.USDC_MINT = usdcMint;\n    this.position = new Position(this.program);\n  }\n\n  /**\n   * Get All Markets\n   *\n   */\n  async getAllMarkets() {\n    try {\n      const marketV2 = await this.program.account.marketState.all();\n      console.log(\"SDK:marketV2\", marketV2);\n      return marketV2.map(({ account, publicKey }) =>\n        formatMarket(account, publicKey)\n      );\n    } catch (error) {\n      console.log(\"SDK: getAllMarkets error\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get Market By ID\n   * @param marketId - The ID of the market\n   *\n   */\n  async getMarketById(marketId: number) {\n    const marketPDA = getMarketPDA(this.program.programId, marketId);\n    const response = await this.program.account.marketState.fetch(marketPDA);\n    return formatMarket(response, marketPDA);\n  }\n\n  /**\n   * Get Market By Address\n   * @param address - The address of the market PDA\n   *\n   */\n  async getMarketByAddress(address: PublicKey) {\n    const account = await this.program.account.marketState.fetch(address);\n    return formatMarket(account, address);\n  }\n\n  /**\n   * Create Market\n   * @param args.marketId - new markert id - length + 1\n   * @param args.startTime - start time\n   * @param args.endTime - end time\n   * @param args.question - question (max 80 characters)\n   * @param args.oraclePubkey - oracle pubkey\n   * @param args.metadataUri - metadata uri\n   * @param args.mintPublicKey - collection mint public key. This needs to sign the transaction.\n   * @param args.payer - payer\n   * @param options - RPC options\n   *\n   */\n  async createMarket(\n    {\n      startTime,\n      endTime,\n      question,\n      oraclePubkey,\n      metadataUri,\n      payer,\n    }: CreateMarketArgs,\n    options?: RpcOptions\n  ) {\n    if (question.length > 80) {\n      throw new Error(\"Question must be less than 80 characters\");\n    }\n\n    const ixs: TransactionInstruction[] = [];\n\n    const configPDA = getConfigPDA(this.program.programId);\n\n    const configAccount = await this.program.account.config.fetch(configPDA);\n\n    const marketIdBN = configAccount.nextMarketId;\n\n    const marketId = marketIdBN.toNumber();\n\n    const marketPDA = getMarketPDA(this.program.programId, marketId);\n\n    const marketPositionsPDA = getPositionAccountPDA(\n      this.program.programId,\n      marketId\n    );\n\n    // Create a new keypair for the collection mint\n    const collectionMintPDA = getCollectionPDA(\n      this.program.programId,\n      marketId\n    );\n\n    try {\n      ixs.push(\n        await this.program.methods\n          .createMarket({\n            question: encodeString(question, 80),\n            marketStart: new BN(startTime),\n            marketEnd: new BN(endTime),\n            metadataUri: metadataUri,\n          })\n          .accountsPartial({\n            payer: payer,\n            feeVault: this.FEE_VAULT,\n            config: configPDA,\n            oraclePubkey: oraclePubkey,\n            market: marketPDA,\n            marketPositionsAccount: marketPositionsPDA,\n            usdcMint: this.USDC_MINT,\n            collection: collectionMintPDA,\n            tokenProgram: TOKEN_PROGRAM_ID,\n            mplCoreProgram: MPL_CORE_PROGRAM_ID,\n            associatedTokenProgram: ASSOCIATED_TOKEN_PROGRAM_ID,\n            systemProgram: anchor.web3.SystemProgram.programId,\n          })\n          .instruction()\n      );\n      const createMarketTx = await createVersionedTransaction(\n        this.program,\n        ixs,\n        payer,\n        options\n      );\n\n      let crankOracleTx: VersionedTransaction | undefined = undefined;\n      try {\n        // if (oraclePubkey) {\n        //   crankOracleTx = await this.crankOracle(oraclePubkey, payer);\n        // }\n      } catch (error) {\n        console.log(\"error cranking oracle\", error);\n        // throw error;\n      }\n\n      let txs: VersionedTransaction[] = [createMarketTx];\n\n      if (crankOracleTx) {\n        txs.unshift(crankOracleTx);\n      }\n      return { txs, marketId };\n    } catch (error) {\n      console.log(\"error\", error);\n      throw error;\n    }\n  }\n\n  // async crankOracle(\n  //   oraclePubkey: PublicKey,\n  //   payer: PublicKey\n  // ): Promise<VersionedTransaction | undefined> {\n  //   if (!oraclePubkey) {\n  //     throw new Error(\"Oracle pubkey is required\");\n  //   }\n\n  //   if (!payer) {\n  //     throw new Error(\"Payer is required\");\n  //   }\n\n  //   const queue = await getDefaultDevnetQueue(\"https://api.devnet.solana.com\");\n\n  //   const connection = new Connection(\"https://api.devnet.solana.com\");\n  //   const pullFeed = new PullFeed(queue.program, oraclePubkey);\n\n  //   console.log(\"Pull Feed:\", pullFeed.pubkey.toBase58(), \"\\n\");\n\n  //   // Use the default crossbar server\n  //   const crossbarClient = CrossbarClient.default();\n\n  //   try {\n  //     const [pullIx, responses, _, luts] = await pullFeed.fetchUpdateIx(\n  //       {\n  //         gateway: \"https://switchboard-oracle.everstake.one/devnet\",\n  //         numSignatures: 3,\n  //         crossbarClient: crossbarClient,\n  //         chain: \"solana\",\n  //         network: \"devnet\",\n  //       },\n  //       false,\n  //       payer\n  //     );\n\n  //     if (!pullIx || pullIx.length === 0) {\n  //       throw new Error(\"Failed to fetch update from local crossbar server.\");\n  //     }\n\n  //     const tx = await asV0Tx({\n  //       connection,\n  //       ixs: pullIx!, // after the pullIx you can add whatever transactions you'd like\n  //       computeUnitPrice: 200_000,\n  //       computeUnitLimitMultiple: 1.3,\n  //       lookupTables: luts,\n  //     });\n\n  //     for (let simulation of responses) {\n  //       console.log(\n  //         `Feed Public Key ${simulation.value} job outputs: ${simulation.value}`\n  //       );\n  //     }\n  //     return tx;\n  //   } catch (error) {\n  //     console.error(\n  //       \"Failed during fetchUpdateIx or transaction submission:\",\n  //       error\n  //     );\n  //   }\n  // }\n\n  /**\n   * Open Order\n   * @param args.marketId - The ID of the Market\n   * @param args.amount - The amount of the Order\n   * @param args.direction - The direction of the Order\n   * @param args.mint - The mint of the Order\n   * @param args.token - The token to use for the Order\n   * @param args.payer - The payer of the Order\n   * @param options - RPC options\n   *\n   */\n  async openPosition(\n    { marketId, amount, direction, mint, token, payer, metadataUri }: OpenOrderArgs,\n    options?: RpcOptions\n  ) {\n    const ixs: TransactionInstruction[] = [];\n    const addressLookupTableAccounts: AddressLookupTableAccount[] = [];\n\n    const { positionAccountPDA, ixs: positionAccountIxs } =\n      await this.position.getPositionAccountIxs(marketId, payer);\n\n    console.log(\n      \"SDK: positions account in trade open\",\n      positionAccountPDA.toString()\n    );\n\n    const marketPDA = getMarketPDA(this.program.programId, marketId);\n\n    const marketAccount = await this.program.account.marketState.fetch(\n      marketPDA\n    );\n\n    const nextPositionId = marketAccount.nextPositionId;\n\n    const configPDA = getConfigPDA(this.program.programId);\n\n    const collectionPDA = getCollectionPDA(this.program.programId, marketId);\n\n    const positionNftPDA = getPositionNftPDA(\n      this.program.programId,\n      marketId,\n      nextPositionId\n    );\n\n    if (positionAccountIxs.length > 0) {\n      ixs.push(...positionAccountIxs);\n    }\n\n    let amountInUSDC = amount * 10 ** USDC_DECIMALS;\n\n    if (token !== this.USDC_MINT.toBase58()) {\n      const {\n        setupInstructions,\n        swapIxs,\n        addressLookupTableAccounts: swapAddressLookupTableAccounts,\n        usdcAmount,\n      } = await swap({\n        connection: this.program.provider.connection,\n        wallet: payer.toBase58(),\n        inToken: token,\n        amount,\n        usdcMint: this.USDC_MINT.toBase58(),\n      });\n\n      amountInUSDC = usdcAmount;\n\n      if (swapIxs.length === 0) {\n        return;\n      }\n\n      ixs.push(...setupInstructions);\n      ixs.push(...swapIxs);\n      addressLookupTableAccounts.push(...swapAddressLookupTableAccounts);\n    }\n\n    try {\n      ixs.push(\n        await this.program.methods\n          .createPosition({\n            amount: new BN(amountInUSDC),\n            direction: direction,\n            metadataUri: metadataUri,\n          })\n          .accountsPartial({\n            signer: payer,\n            feeVault: this.FEE_VAULT,\n            marketPositionsAccount: positionAccountPDA,\n            market: marketPDA,\n            usdcMint: mint,\n            config: configPDA,\n            collection: collectionPDA,\n            mplCoreProgram: MPL_CORE_PROGRAM_ID,\n            positionNftAccount: positionNftPDA,\n            tokenProgram: TOKEN_PROGRAM_ID,\n            associatedTokenProgram: ASSOCIATED_TOKEN_PROGRAM_ID,\n            systemProgram: anchor.web3.SystemProgram.programId,\n          })\n          .instruction()\n      );\n    } catch (error) {\n      console.log(\"error\", error);\n      throw error;\n    }\n    return { ixs, addressLookupTableAccounts };\n  }\n\n  /**\n   * Resolve Market\n   * @param args.marketId - The ID of the Market\n   * @param args.winningDirection - The Winning Direction of the Market\n   *\n   * @param options - RPC options\n   *\n   */\n  async resolveMarket(\n    {\n      marketId,\n      payer,\n    }: {\n      marketId: number;\n      \n      payer: PublicKey;\n    },\n    options?: RpcOptions\n  ) {\n    const marketPDA = getMarketPDA(this.program.programId, marketId);\n    const marketAccount = await this.program.account.marketState.fetch(marketPDA);\n    const oraclePubkey = marketAccount.oraclePubkey;\n\n    if (!oraclePubkey) {\n      throw new Error(\"Market has no oracle pubkey\");\n    }\n\n    const ixs: TransactionInstruction[] = [];\n    try {\n      ixs.push(\n        await this.program.methods\n          .resolveMarket()\n          .accountsPartial({\n            signer: payer,\n            market: marketPDA,\n            oraclePubkey: oraclePubkey,\n          })\n          .instruction()\n      );\n    } catch (error) {\n      console.log(\"error\", error);\n      throw error;\n    }\n    return ixs;\n    // return sendVersionedTransaction(this.program, ixs, options);\n  }\n\n  /**\n   * Close Market and related accounts to collect remaining liquidity\n   * @param marketId - The ID of the market\n   * @param payer - The payer of the Market\n   * @param options - RPC options\n   *\n   */\n  async closeMarket(marketId: number, payer: PublicKey, options?: RpcOptions) {\n    const ixs: TransactionInstruction[] = [];\n\n    const marketIdBN = new BN(marketId);\n\n    const marketPDA = getMarketPDA(this.program.programId, marketId);\n\n    const configPDA = getConfigPDA(this.program.programId);\n\n    const marketPositionsPDA = getPositionAccountPDA(\n      this.program.programId,\n      marketId\n    );\n\n    // close any sub position accounts (need to write code)\n    // const subPositionAccounts = await this.position.getPositionsAccountsForMarket(marketId);\n    // for (const subPositionAccount of subPositionAccounts) {\n    //   ixs.push(\n    //     await this.program.methods\n    //       .closeSubPositionAccount(subPositionAccount.subPositionAccount)\n    //       .accountsPartial({})\n    //       .instruction()\n    //   );\n    // }\n\n    const feeVaultUsdcAta = getAssociatedTokenAddressSync(\n      this.USDC_MINT,\n      this.FEE_VAULT,\n      true,\n      TOKEN_PROGRAM_ID\n    );\n\n    const marketVault = getAssociatedTokenAddressSync(\n      this.USDC_MINT,\n      marketPDA,\n      true,\n      TOKEN_PROGRAM_ID\n    );\n\n    try {\n      ixs.push(\n        await this.program.methods\n          .closeMarket({\n            marketId: marketIdBN,\n          })\n          .accountsPartial({\n            signer: payer,\n            feeVault: this.FEE_VAULT,\n            market: marketPDA,\n            marketPositionsAccount: marketPositionsPDA,\n            config: configPDA,\n            feeVaultUsdcAta: feeVaultUsdcAta,\n            usdcMint: this.USDC_MINT,\n            marketVault: marketVault,\n            tokenProgram: TOKEN_PROGRAM_ID,\n            associatedTokenProgram: ASSOCIATED_TOKEN_PROGRAM_ID,\n            systemProgram: anchor.web3.SystemProgram.programId,\n          })\n          .instruction()\n      );\n    } catch (error) {\n      console.log(\"error\", error);\n      throw error;\n    }\n    return ixs;\n  }\n\n  // /**\n  //  * Payout Order\n  //  * @param args.marketId - The ID of the Market\n  //  * @param args.orderId - The ID of the Order to Payout\n  //  * @param args.userNonce - The nonce of the user\n  //  *\n  //  * @param options - RPC options\n  //  *\n  //  */\n  // async payoutOrder(\n  //   orders: {\n  //     marketId: number;\n  //     orderId: number;\n  //     userNonce: number;\n  //   }[],\n  //   payer: PublicKey,\n  //   options?: RpcOptions\n  // ) {\n  //   const ixs: TransactionInstruction[] = [];\n\n  //   const configPDA = getConfigPDA(this.program.programId);\n\n  //   const marketIdBN = new BN(orders[0].marketId);\n\n  //   const marketPDA = getMarketPDA(this.program.programId, orders[0].marketId);\n\n  //   if (orders.length > 10) {\n  //     throw new Error(\"Max 10 orders per transaction\");\n  //   }\n\n  //   for (const order of orders) {\n  //     let positionAccountPDA = getPositionAccountPDA(\n  //       this.program.programId,\n  //       order.marketId\n  //     );\n\n  //     if (order.userNonce !== 0) {\n  //       const subPositionAccountPDA = getSubPositionAccountPDA(\n  //         this.program.programId,\n  //         order.marketId,\n  //         marketPDA,\n  //         order.userNonce\n  //       );\n\n  //       positionAccountPDA = getPositionAccountPDA(\n  //         this.program.programId,\n  //         order.marketId,\n  //         subPositionAccountPDA\n  //       );\n  //     }\n\n  //     try {\n  //       ixs.push(\n  //         await this.program.methods\n  //           .settlePosition(new BN(order.orderId))\n  //           .accountsPartial({\n  //             signer: payer,\n  //             feeVault: this.FEE_VAULT,\n  //             marketPositionsAccount: positionAccountPDA,\n  //             market: marketPDA,\n  //             usdcMint: this.USDC_MINT,\n  //             config: configPDA,\n  //             tokenProgram: TOKEN_PROGRAM_ID,\n  //             associatedTokenProgram: ASSOCIATED_TOKEN_PROGRAM_ID,\n  //             systemProgram: anchor.web3.SystemProgram.programId,\n  //           })\n  //           .instruction()\n  //       );\n  //     } catch (error) {\n  //       console.log(\"error\", error);\n  //       throw error;\n  //     }\n  //   }\n  //   return ixs;\n  // }\n\n  /**\n   * Update Market\n   * @param marketId - The ID of the market\n   * @param marketEnd - The end time of the market\n   * @param options - RPC options\n   *\n   */\n  async updateMarket(\n    marketId: number,\n    marketEnd: number,\n    payer: PublicKey,\n    options?: RpcOptions\n  ) {\n    const ixs: TransactionInstruction[] = [];\n\n    ixs.push(\n      await this.program.methods\n        .updateMarket({\n          marketId: new BN(marketId),\n          marketEnd: new BN(marketEnd),\n        })\n        .accounts({\n          signer: payer,\n          market: getMarketPDA(this.program.programId, marketId),\n        })\n        .instruction()\n    );\n\n    return ixs;\n  }\n\n  async payoutPosition(\n    marketId: number,\n    payer: PublicKey,\n    positionId: number,\n    positionNonce: number,\n    options?: RpcOptions\n  ) {\n    const ixs: TransactionInstruction[] = [];\n\n    const marketPda = getMarketPDA(this.program.programId, marketId);\n\n    const collectionPda = getCollectionPDA(this.program.programId, marketId);\n\n    const userUsdcAta = getAssociatedTokenAddressSync(\n      this.USDC_MINT,\n      payer,\n      false,\n      TOKEN_PROGRAM_ID\n    );\n\n    const marketVault = getAssociatedTokenAddressSync(\n      this.USDC_MINT,\n      marketPda,\n      true, // allowOwnerOffCurve since marketPda is a PDA\n      TOKEN_PROGRAM_ID\n    );\n\n    let positionAccountPDA = getPositionAccountPDA(\n      this.program.programId,\n      marketId\n    );\n\n    if (positionNonce !== 0) {\n      // if a sub position account\n      const subPositionAccountPDA = getSubPositionAccountPDA(\n        this.program.programId,\n        marketId,\n        marketPda,\n        positionNonce\n      );\n\n      positionAccountPDA = getPositionAccountPDA(\n        this.program.programId,\n        marketId,\n        subPositionAccountPDA\n      );\n    }\n\n    // get the position from the position account\n    const positionAccount = await this.program.account.positionAccount.fetch(\n      positionAccountPDA\n    );\n    const currentPosition = positionAccount.positions.find(\n      (p) => p.positionId.toNumber() === positionId\n    );\n    if (!currentPosition) {\n      throw new Error(\"Position not found in position account\");\n    }\n\n    const nftMint = currentPosition.mint;\n\n    if (!nftMint) {\n      throw new Error(\"Position is not an NFT\");\n    }\n\n    try {\n      ixs.push(\n        await this.program.methods\n          .settlePosition()\n          .accountsPartial({\n            signer: payer,\n            marketPositionsAccount: positionAccountPDA,\n            nftMint: nftMint,\n            userUsdcAta: userUsdcAta,\n            marketUsdcVault: marketVault,\n            usdcMint: this.USDC_MINT,\n            market: marketPda,\n            collection: collectionPda,\n            tokenProgram: TOKEN_PROGRAM_ID,\n            tokenMetadataProgram: METAPLEX_ID,\n            mplCoreProgram: MPL_CORE_PROGRAM_ID,\n            associatedTokenProgram: ASSOCIATED_TOKEN_PROGRAM_ID,\n            systemProgram: anchor.web3.SystemProgram.programId,\n          })\n          .instruction()\n      );\n    } catch (error) {\n      console.log(\"error\", error);\n      throw error;\n    }\n\n    const tx = await createVersionedTransaction(\n      this.program,\n      ixs,\n      payer,\n      options\n    );\n\n    return tx;\n  }\n\n  // /**\n  //  * Create Customer\n  //  * @param args.id - The ID of the customer\n  //  * @param args.name - The name of the customer\n  //  * @param args.authority - The authority of the customer\n  //  *\n  //  * @param options - RPC options\n  //  *\n  //  */\n  // async createCustomer(\n  //   { id, name, authority, feeRecipient }: CreateCustomerArgs,\n  //   options?: RpcOptions\n  // ) {\n  //   const ixs: TransactionInstruction[] = [];\n\n  //   ixs.push(\n  //     await this.program.methods\n  //       .createUser({ id, authority })\n  //       .accounts({\n  //         signer: this.program.provider.publicKey,\n  //       })\n  //       .instruction()\n  //   );\n\n  //   return sendVersionedTransaction(this.program, ixs, options);\n  // }\n}\n","import { PublicKey } from '@solana/web3.js'\n\nexport type Market = {\n  address: string\n  bump: number\n  authority: string\n  oraclePubkey: string\n  nftCollectionMint: string\n  marketUsdcVault: string\n  marketId: string\n  yesLiquidity: string\n  noLiquidity: string\n  volume: string\n  updateTs: string\n  nextPositionId: string\n  marketState: MarketStates\n  marketStart: string\n  marketEnd: string\n  question: string\n  winningDirection: WinningDirection\n}\n\n\nexport enum MarketStates {\n  ACTIVE = 'active',\n  ENDED = 'ended',\n  RESOLVING = 'resolving',\n  RESOLVED = 'resolved'\n}\n\n\nexport enum WinningDirection {\n  NONE = 'None',\n  YES = 'Yes',\n  NO = 'No',\n  DRAW = 'Draw'\n}\n\n\nexport type InitializeMarketArgs = {\n  marketId: number\n  startTime: number\n  endTime: number\n  question: string\n  feeBps: number\n  customer: PublicKey | null\n}\n\nexport type CreateCustomerArgs = {\n  id: number\n  name: string\n  authority: PublicKey\n  feeRecipient: PublicKey\n}\n\nexport type OpenOrderArgs = {\n  marketId: number\n  amount: number\n  token: string\n  direction:\n    | {\n        yes: {}\n      }\n    | {\n        no: {}\n      }\n  mint: PublicKey,\n  payer: PublicKey,\n  feeVaultAccount: PublicKey,\n  usdcMintAddress: PublicKey\n  metadataUri: string\n}\n\nexport type CreateMarketArgs = {\n  startTime: number\n  endTime: number\n  question: string\n  oraclePubkey: PublicKey\n  metadataUri: string\n  payer: PublicKey\n  feeVaultAccount: PublicKey\n  usdcMintAddress: PublicKey\n}","import { PublicKey } from '@solana/web3.js';\n\n/** Address of the SPL Token program */\nexport const TOKEN_PROGRAM_ID = new PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\n\n/** Address of the SPL Token 2022 program */\nexport const TOKEN_2022_PROGRAM_ID = new PublicKey('TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb');\n\n/** Address of the SPL Associated Token Account program */\nexport const ASSOCIATED_TOKEN_PROGRAM_ID = new PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\n\n/** Address of the special mint for wrapped native SOL in spl-token */\nexport const NATIVE_MINT = new PublicKey('So11111111111111111111111111111111111111112');\n\n/** Address of the special mint for wrapped native SOL in spl-token-2022 */\nexport const NATIVE_MINT_2022 = new PublicKey('9pan9bMn5HatX4EJdBwg9VgCa7Uz5HL8N1m5D3NdXejP');\n\n/** Check that the token program provided is not `Tokenkeg...`, useful when using extensions */\nexport function programSupportsExtensions(programId: PublicKey): boolean {\n    if (programId.equals(TOKEN_PROGRAM_ID)) {\n        return false;\n    } else {\n        return true;\n    }\n}\n","import { Layout } from '@solana/buffer-layout';\n\nexport interface EncodeDecode<T> {\n    decode(buffer: Buffer, offset?: number): T;\n    encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nexport const encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n    const decode = layout.decode.bind(layout);\n    const encode = layout.encode.bind(layout);\n    return { decode, encode };\n};\n","import { blob, Layout } from '@solana/buffer-layout';\nimport { toBigIntBE, toBigIntLE, toBufferBE, toBufferLE } from 'bigint-buffer';\nimport { encodeDecode } from './base';\n\nexport const bigInt =\n    (length: number) =>\n    (property?: string): Layout<bigint> => {\n        const layout = blob(length, property);\n        const { encode, decode } = encodeDecode(layout);\n\n        const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n        bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n            const src = decode(buffer, offset);\n            return toBigIntLE(Buffer.from(src));\n        };\n\n        bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n            const src = toBufferLE(bigInt, length);\n            return encode(src, buffer, offset);\n        };\n\n        return bigIntLayout;\n    };\n\nexport const bigIntBE =\n    (length: number) =>\n    (property?: string): Layout<bigint> => {\n        const layout = blob(length, property);\n        const { encode, decode } = encodeDecode(layout);\n\n        const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n        bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n            const src = decode(buffer, offset);\n            return toBigIntBE(Buffer.from(src));\n        };\n\n        bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n            const src = toBufferBE(bigInt, length);\n            return encode(src, buffer, offset);\n        };\n\n        return bigIntLayout;\n    };\n\nexport const u64 = bigInt(8);\n\nexport const u64be = bigIntBE(8);\n\nexport const u128 = bigInt(16);\n\nexport const u128be = bigIntBE(16);\n\nexport const u192 = bigInt(24);\n\nexport const u192be = bigIntBE(24);\n\nexport const u256 = bigInt(32);\n\nexport const u256be = bigIntBE(32);\n","/*\r\n *      bignumber.js v9.3.0\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2025 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\nvar\r\n  isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n  mathceil = Math.ceil,\r\n  mathfloor = Math.floor,\r\n\r\n  bignumberError = '[BigNumber Error] ',\r\n  tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n  BASE = 1e14,\r\n  LOG_BASE = 14,\r\n  MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n  // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n  POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n  SQRT_BASE = 1e7,\r\n\r\n  // EDITABLE\r\n  // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n  // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n  MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n/*\r\n * Create and return a BigNumber constructor.\r\n */\r\nfunction clone(configObject) {\r\n  var div, convertBase, parseNumeric,\r\n    P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n    ONE = new BigNumber(1),\r\n\r\n\r\n    //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n    // The default values below must be integers within the inclusive ranges stated.\r\n    // The values can also be changed at run-time using BigNumber.set.\r\n\r\n    // The maximum number of decimal places for operations involving division.\r\n    DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n    // The rounding mode used when rounding to the above decimal places, and when using\r\n    // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n    // UP         0 Away from zero.\r\n    // DOWN       1 Towards zero.\r\n    // CEIL       2 Towards +Infinity.\r\n    // FLOOR      3 Towards -Infinity.\r\n    // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n    // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n    // The exponent value at and beneath which toString returns exponential notation.\r\n    // Number type: -7\r\n    TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n    // The exponent value at and above which toString returns exponential notation.\r\n    // Number type: 21\r\n    TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n    // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // Number type: -324  (5e-324)\r\n    MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // Number type:  308  (1.7976931348623157e+308)\r\n    // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n    MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    CRYPTO = false,                          // true or false\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN      1 The remainder has the same sign as the dividend.\r\n    //             This modulo mode is commonly known as 'truncated division' and is\r\n    //             equivalent to (a % n) in JavaScript.\r\n    // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n    // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n    //             The remainder is always positive.\r\n    //\r\n    // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n    // modes are commonly used for the modulus operation.\r\n    // Although the other rounding modes can also be used, they may not give useful results.\r\n    MODULO_MODE = 1,                         // 0 to 9\r\n\r\n    // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n    // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n    POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n    // The format specification used by the BigNumber.prototype.toFormat method.\r\n    FORMAT = {\r\n      prefix: '',\r\n      groupSize: 3,\r\n      secondaryGroupSize: 0,\r\n      groupSeparator: ',',\r\n      decimalSeparator: '.',\r\n      fractionGroupSize: 0,\r\n      fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n      suffix: ''\r\n    },\r\n\r\n    // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n    // '-', '.', whitespace, or repeated character.\r\n    // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n    ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n    alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n  //------------------------------------------------------------------------------------------\r\n\r\n\r\n  // CONSTRUCTOR\r\n\r\n\r\n  /*\r\n   * The BigNumber constructor and exported function.\r\n   * Create and return a new instance of a BigNumber object.\r\n   *\r\n   * v {number|string|BigNumber} A numeric value.\r\n   * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n   */\r\n  function BigNumber(v, b) {\r\n    var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n      x = this;\r\n\r\n    // Enable constructor call without `new`.\r\n    if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n    if (b == null) {\r\n\r\n      if (v && v._isBigNumber === true) {\r\n        x.s = v.s;\r\n\r\n        if (!v.c || v.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n        } else if (v.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.c = v.c.slice();\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n        // Use `1 / n` to handle minus zero also.\r\n        x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n        // Fast path for integers, where n < 2147483648 (2**31).\r\n        if (v === ~~v) {\r\n          for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n          if (e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else {\r\n            x.e = e;\r\n            x.c = [v];\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        str = String(v);\r\n      } else {\r\n\r\n        if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n        x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n      // Exponential form?\r\n      if ((i = str.search(/e/i)) > 0) {\r\n\r\n        // Determine exponent.\r\n        if (e < 0) e = i;\r\n        e += +str.slice(i + 1);\r\n        str = str.substring(0, i);\r\n      } else if (e < 0) {\r\n\r\n        // Integer.\r\n        e = str.length;\r\n      }\r\n\r\n    } else {\r\n\r\n      // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n      intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n      // Allow exponential notation to be used with base 10 argument, while\r\n      // also rounding to DECIMAL_PLACES as with other bases.\r\n      if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n        x = new BigNumber(v);\r\n        return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n      }\r\n\r\n      str = String(v);\r\n\r\n      if (isNum = typeof v == 'number') {\r\n\r\n        // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n        if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n        x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n          throw Error\r\n           (tooManyDigits + v);\r\n        }\r\n      } else {\r\n        x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      alphabet = ALPHABET.slice(0, b);\r\n      e = i = 0;\r\n\r\n      // Check that str is a valid base b number.\r\n      // Don't use RegExp, so alphabet can contain special characters.\r\n      for (len = str.length; i < len; i++) {\r\n        if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n          if (c == '.') {\r\n\r\n            // If '.' is not the first character and it has not be found before.\r\n            if (i > e) {\r\n              e = len;\r\n              continue;\r\n            }\r\n          } else if (!caseChanged) {\r\n\r\n            // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n            if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n              caseChanged = true;\r\n              i = -1;\r\n              e = 0;\r\n              continue;\r\n            }\r\n          }\r\n\r\n          return parseNumeric(x, String(v), isNum, b);\r\n        }\r\n      }\r\n\r\n      // Prevent later check for length on converted number.\r\n      isNum = false;\r\n      str = convertBase(str, b, 10, x.s);\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n      else e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n    if (str = str.slice(i, ++len)) {\r\n      len -= i;\r\n\r\n      // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n      if (isNum && BigNumber.DEBUG &&\r\n        len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n          throw Error\r\n           (tooManyDigits + (x.s * v));\r\n      }\r\n\r\n       // Overflow?\r\n      if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        x.c = x.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      } else {\r\n        x.e = e;\r\n        x.c = [];\r\n\r\n        // Transform base\r\n\r\n        // e is the base 10 exponent.\r\n        // i is where to slice str to get the first element of the coefficient array.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n        if (i < len) {\r\n          if (i) x.c.push(+str.slice(0, i));\r\n\r\n          for (len -= LOG_BASE; i < len;) {\r\n            x.c.push(+str.slice(i, i += LOG_BASE));\r\n          }\r\n\r\n          i = LOG_BASE - (str = str.slice(i)).length;\r\n        } else {\r\n          i -= len;\r\n        }\r\n\r\n        for (; i--; str += '0');\r\n        x.c.push(+str);\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    }\r\n  }\r\n\r\n\r\n  // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n  BigNumber.clone = clone;\r\n\r\n  BigNumber.ROUND_UP = 0;\r\n  BigNumber.ROUND_DOWN = 1;\r\n  BigNumber.ROUND_CEIL = 2;\r\n  BigNumber.ROUND_FLOOR = 3;\r\n  BigNumber.ROUND_HALF_UP = 4;\r\n  BigNumber.ROUND_HALF_DOWN = 5;\r\n  BigNumber.ROUND_HALF_EVEN = 6;\r\n  BigNumber.ROUND_HALF_CEIL = 7;\r\n  BigNumber.ROUND_HALF_FLOOR = 8;\r\n  BigNumber.EUCLID = 9;\r\n\r\n\r\n  /*\r\n   * Configure infrequently-changing library-wide settings.\r\n   *\r\n   * Accept an object with the following optional properties (if the value of a property is\r\n   * a number, it must be an integer within the inclusive range stated):\r\n   *\r\n   *   DECIMAL_PLACES   {number}           0 to MAX\r\n   *   ROUNDING_MODE    {number}           0 to 8\r\n   *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n   *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n   *   CRYPTO           {boolean}          true or false\r\n   *   MODULO_MODE      {number}           0 to 9\r\n   *   POW_PRECISION       {number}           0 to MAX\r\n   *   ALPHABET         {string}           A string of two or more unique characters which does\r\n   *                                       not contain '.'.\r\n   *   FORMAT           {object}           An object with some of the following properties:\r\n   *     prefix                 {string}\r\n   *     groupSize              {number}\r\n   *     secondaryGroupSize     {number}\r\n   *     groupSeparator         {string}\r\n   *     decimalSeparator       {string}\r\n   *     fractionGroupSize      {number}\r\n   *     fractionGroupSeparator {string}\r\n   *     suffix                 {string}\r\n   *\r\n   * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n   *\r\n   * E.g.\r\n   * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n   *\r\n   * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n   *\r\n   * Return an object with the properties current values.\r\n   */\r\n  BigNumber.config = BigNumber.set = function (obj) {\r\n    var p, v;\r\n\r\n    if (obj != null) {\r\n\r\n      if (typeof obj == 'object') {\r\n\r\n        // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          DECIMAL_PLACES = v;\r\n        }\r\n\r\n        // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n        // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 8, p);\r\n          ROUNDING_MODE = v;\r\n        }\r\n\r\n        // EXPONENTIAL_AT {number|number[]}\r\n        // Integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n        // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, 0, p);\r\n            intCheck(v[1], 0, MAX, p);\r\n            TO_EXP_NEG = v[0];\r\n            TO_EXP_POS = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n          }\r\n        }\r\n\r\n        // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n        // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n        if (obj.hasOwnProperty(p = 'RANGE')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, -1, p);\r\n            intCheck(v[1], 1, MAX, p);\r\n            MIN_EXP = v[0];\r\n            MAX_EXP = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            if (v) {\r\n              MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' cannot be zero: ' + v);\r\n            }\r\n          }\r\n        }\r\n\r\n        // CRYPTO {boolean} true or false.\r\n        // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n        // '[BigNumber Error] crypto unavailable'\r\n        if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n          v = obj[p];\r\n          if (v === !!v) {\r\n            if (v) {\r\n              if (typeof crypto != 'undefined' && crypto &&\r\n               (crypto.getRandomValues || crypto.randomBytes)) {\r\n                CRYPTO = v;\r\n              } else {\r\n                CRYPTO = !v;\r\n                throw Error\r\n                 (bignumberError + 'crypto unavailable');\r\n              }\r\n            } else {\r\n              CRYPTO = v;\r\n            }\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' not true or false: ' + v);\r\n          }\r\n        }\r\n\r\n        // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n        // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 9, p);\r\n          MODULO_MODE = v;\r\n        }\r\n\r\n        // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          POW_PRECISION = v;\r\n        }\r\n\r\n        // FORMAT {object}\r\n        // '[BigNumber Error] FORMAT not an object: {v}'\r\n        if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n          v = obj[p];\r\n          if (typeof v == 'object') FORMAT = v;\r\n          else throw Error\r\n           (bignumberError + p + ' not an object: ' + v);\r\n        }\r\n\r\n        // ALPHABET {string}\r\n        // '[BigNumber Error] ALPHABET invalid: {v}'\r\n        if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n          v = obj[p];\r\n\r\n          // Disallow if less than two characters,\r\n          // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n          if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n            alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n            ALPHABET = v;\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' invalid: ' + v);\r\n          }\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Object expected: {v}'\r\n        throw Error\r\n         (bignumberError + 'Object expected: ' + obj);\r\n      }\r\n    }\r\n\r\n    return {\r\n      DECIMAL_PLACES: DECIMAL_PLACES,\r\n      ROUNDING_MODE: ROUNDING_MODE,\r\n      EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n      RANGE: [MIN_EXP, MAX_EXP],\r\n      CRYPTO: CRYPTO,\r\n      MODULO_MODE: MODULO_MODE,\r\n      POW_PRECISION: POW_PRECISION,\r\n      FORMAT: FORMAT,\r\n      ALPHABET: ALPHABET\r\n    };\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if v is a BigNumber instance, otherwise return false.\r\n   *\r\n   * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n   *\r\n   * v {any}\r\n   *\r\n   * '[BigNumber Error] Invalid BigNumber: {v}'\r\n   */\r\n  BigNumber.isBigNumber = function (v) {\r\n    if (!v || v._isBigNumber !== true) return false;\r\n    if (!BigNumber.DEBUG) return true;\r\n\r\n    var i, n,\r\n      c = v.c,\r\n      e = v.e,\r\n      s = v.s;\r\n\r\n    out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n      if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n        // If the first element is zero, the BigNumber value must be zero.\r\n        if (c[0] === 0) {\r\n          if (e === 0 && c.length === 1) return true;\r\n          break out;\r\n        }\r\n\r\n        // Calculate number of digits that c[0] should have, based on the exponent.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (i < 1) i += LOG_BASE;\r\n\r\n        // Calculate number of digits of c[0].\r\n        //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n        if (String(c[0]).length == i) {\r\n\r\n          for (i = 0; i < c.length; i++) {\r\n            n = c[i];\r\n            if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n          }\r\n\r\n          // Last element cannot be zero, unless it is the only element.\r\n          if (n !== 0) return true;\r\n        }\r\n      }\r\n\r\n    // Infinity/NaN\r\n    } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n      return true;\r\n    }\r\n\r\n    throw Error\r\n      (bignumberError + 'Invalid BigNumber: ' + v);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.maximum = BigNumber.max = function () {\r\n    return maxOrMin(arguments, -1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.minimum = BigNumber.min = function () {\r\n    return maxOrMin(arguments, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n   * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n   * zeros are produced).\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n   * '[BigNumber Error] crypto unavailable'\r\n   */\r\n  BigNumber.random = (function () {\r\n    var pow2_53 = 0x20000000000000;\r\n\r\n    // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n    // Check if Math.random() produces more than 32 bits of randomness.\r\n    // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n    // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n    var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n     ? function () { return mathfloor(Math.random() * pow2_53); }\r\n     : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n       (Math.random() * 0x800000 | 0); };\r\n\r\n    return function (dp) {\r\n      var a, b, e, k, v,\r\n        i = 0,\r\n        c = [],\r\n        rand = new BigNumber(ONE);\r\n\r\n      if (dp == null) dp = DECIMAL_PLACES;\r\n      else intCheck(dp, 0, MAX);\r\n\r\n      k = mathceil(dp / LOG_BASE);\r\n\r\n      if (CRYPTO) {\r\n\r\n        // Browsers supporting crypto.getRandomValues.\r\n        if (crypto.getRandomValues) {\r\n\r\n          a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n          for (; i < k;) {\r\n\r\n            // 53 bits:\r\n            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n            // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n            //                                     11111 11111111 11111111\r\n            // 0x20000 is 2^21.\r\n            v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n            // Rejection sampling:\r\n            // 0 <= v < 9007199254740992\r\n            // Probability that v >= 9e15, is\r\n            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n            if (v >= 9e15) {\r\n              b = crypto.getRandomValues(new Uint32Array(2));\r\n              a[i] = b[0];\r\n              a[i + 1] = b[1];\r\n            } else {\r\n\r\n              // 0 <= v <= 8999999999999999\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 2;\r\n            }\r\n          }\r\n          i = k / 2;\r\n\r\n        // Node.js supporting crypto.randomBytes.\r\n        } else if (crypto.randomBytes) {\r\n\r\n          // buffer\r\n          a = crypto.randomBytes(k *= 7);\r\n\r\n          for (; i < k;) {\r\n\r\n            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n            // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n            // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n            // 0 <= v < 9007199254740992\r\n            v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n               (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n               (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n            if (v >= 9e15) {\r\n              crypto.randomBytes(7).copy(a, i);\r\n            } else {\r\n\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 7;\r\n            }\r\n          }\r\n          i = k / 7;\r\n        } else {\r\n          CRYPTO = false;\r\n          throw Error\r\n           (bignumberError + 'crypto unavailable');\r\n        }\r\n      }\r\n\r\n      // Use Math.random.\r\n      if (!CRYPTO) {\r\n\r\n        for (; i < k;) {\r\n          v = random53bitInt();\r\n          if (v < 9e15) c[i++] = v % 1e14;\r\n        }\r\n      }\r\n\r\n      k = c[--i];\r\n      dp %= LOG_BASE;\r\n\r\n      // Convert trailing digits to zeros according to dp.\r\n      if (k && dp) {\r\n        v = POWS_TEN[LOG_BASE - dp];\r\n        c[i] = mathfloor(k / v) * v;\r\n      }\r\n\r\n      // Remove trailing elements which are zero.\r\n      for (; c[i] === 0; c.pop(), i--);\r\n\r\n      // Zero?\r\n      if (i < 0) {\r\n        c = [e = 0];\r\n      } else {\r\n\r\n        // Remove leading elements which are zero and adjust exponent accordingly.\r\n        for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n        // Count the digits of the first element of c to determine leading zeros, and...\r\n        for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n        // adjust the exponent accordingly.\r\n        if (i < LOG_BASE) e -= LOG_BASE - i;\r\n      }\r\n\r\n      rand.e = e;\r\n      rand.c = c;\r\n      return rand;\r\n    };\r\n  })();\r\n\r\n\r\n   /*\r\n   * Return a BigNumber whose value is the sum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.sum = function () {\r\n    var i = 1,\r\n      args = arguments,\r\n      sum = new BigNumber(args[0]);\r\n    for (; i < args.length;) sum = sum.plus(args[i++]);\r\n    return sum;\r\n  };\r\n\r\n\r\n  // PRIVATE FUNCTIONS\r\n\r\n\r\n  // Called by BigNumber and BigNumber.prototype.toString.\r\n  convertBase = (function () {\r\n    var decimal = '0123456789';\r\n\r\n    /*\r\n     * Convert string of baseIn to an array of numbers of baseOut.\r\n     * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n     * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n     */\r\n    function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n      var j,\r\n        arr = [0],\r\n        arrL,\r\n        i = 0,\r\n        len = str.length;\r\n\r\n      for (; i < len;) {\r\n        for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n        arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n        for (j = 0; j < arr.length; j++) {\r\n\r\n          if (arr[j] > baseOut - 1) {\r\n            if (arr[j + 1] == null) arr[j + 1] = 0;\r\n            arr[j + 1] += arr[j] / baseOut | 0;\r\n            arr[j] %= baseOut;\r\n          }\r\n        }\r\n      }\r\n\r\n      return arr.reverse();\r\n    }\r\n\r\n    // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n    // If the caller is toString, we are converting from base 10 to baseOut.\r\n    // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n    return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n      var alphabet, d, e, k, r, x, xc, y,\r\n        i = str.indexOf('.'),\r\n        dp = DECIMAL_PLACES,\r\n        rm = ROUNDING_MODE;\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        k = POW_PRECISION;\r\n\r\n        // Unlimited precision.\r\n        POW_PRECISION = 0;\r\n        str = str.replace('.', '');\r\n        y = new BigNumber(baseIn);\r\n        x = y.pow(str.length - i);\r\n        POW_PRECISION = k;\r\n\r\n        // Convert str as if an integer, then restore the fraction part by dividing the\r\n        // result by its base raised to a power.\r\n\r\n        y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n         10, baseOut, decimal);\r\n        y.e = y.c.length;\r\n      }\r\n\r\n      // Convert the number as integer.\r\n\r\n      xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n       ? (alphabet = ALPHABET, decimal)\r\n       : (alphabet = decimal, ALPHABET));\r\n\r\n      // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n      e = k = xc.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xc[--k] == 0; xc.pop());\r\n\r\n      // Zero?\r\n      if (!xc[0]) return alphabet.charAt(0);\r\n\r\n      // Does str represent an integer? If so, no need for the division.\r\n      if (i < 0) {\r\n        --e;\r\n      } else {\r\n        x.c = xc;\r\n        x.e = e;\r\n\r\n        // The sign is needed for correct rounding.\r\n        x.s = sign;\r\n        x = div(x, y, dp, rm, baseOut);\r\n        xc = x.c;\r\n        r = x.r;\r\n        e = x.e;\r\n      }\r\n\r\n      // xc now represents str converted to baseOut.\r\n\r\n      // The index of the rounding digit.\r\n      d = e + dp + 1;\r\n\r\n      // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n      i = xc[d];\r\n\r\n      // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n      k = baseOut / 2;\r\n      r = r || d < 0 || xc[d + 1] != null;\r\n\r\n      r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n            : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n      // If the index of the rounding digit is not greater than zero, or xc represents\r\n      // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n      // such as 0.00001.\r\n      if (d < 1 || !xc[0]) {\r\n\r\n        // 1^-dp or 0\r\n        str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n      } else {\r\n\r\n        // Truncate xc to the required number of decimal places.\r\n        xc.length = d;\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (--baseOut; ++xc[--d] > baseOut;) {\r\n            xc[d] = 0;\r\n\r\n            if (!d) {\r\n              ++e;\r\n              xc = [1].concat(xc);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (k = xc.length; !xc[--k];);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n        // Add leading zeros, decimal point and trailing zeros as required.\r\n        str = toFixedPoint(str, e, alphabet.charAt(0));\r\n      }\r\n\r\n      // The caller will add the sign.\r\n      return str;\r\n    };\r\n  })();\r\n\r\n\r\n  // Perform division in the specified base. Called by div and convertBase.\r\n  div = (function () {\r\n\r\n    // Assume non-zero x and k.\r\n    function multiply(x, k, base) {\r\n      var m, temp, xlo, xhi,\r\n        carry = 0,\r\n        i = x.length,\r\n        klo = k % SQRT_BASE,\r\n        khi = k / SQRT_BASE | 0;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        xlo = x[i] % SQRT_BASE;\r\n        xhi = x[i] / SQRT_BASE | 0;\r\n        m = khi * xlo + xhi * klo;\r\n        temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n        carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n        x[i] = temp % base;\r\n      }\r\n\r\n      if (carry) x = [carry].concat(x);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, cmp;\r\n\r\n      if (aL != bL) {\r\n        cmp = aL > bL ? 1 : -1;\r\n      } else {\r\n\r\n        for (i = cmp = 0; i < aL; i++) {\r\n\r\n          if (a[i] != b[i]) {\r\n            cmp = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return cmp;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n    }\r\n\r\n    // x: dividend, y: divisor.\r\n    return function (x, y, dp, rm, base) {\r\n      var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n        yL, yz,\r\n        s = x.s == y.s ? 1 : -1,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n        return new BigNumber(\r\n\r\n         // Return NaN if either NaN, or both Infinity or 0.\r\n         !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n          // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n          xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n       );\r\n      }\r\n\r\n      q = new BigNumber(s);\r\n      qc = q.c = [];\r\n      e = x.e - y.e;\r\n      s = dp + e + 1;\r\n\r\n      if (!base) {\r\n        base = BASE;\r\n        e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n        s = s / LOG_BASE | 0;\r\n      }\r\n\r\n      // Result exponent may be one less then the current value of e.\r\n      // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n      for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n      if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n      if (s < 0) {\r\n        qc.push(1);\r\n        more = true;\r\n      } else {\r\n        xL = xc.length;\r\n        yL = yc.length;\r\n        i = 0;\r\n        s += 2;\r\n\r\n        // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n        n = mathfloor(base / (yc[0] + 1));\r\n\r\n        // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n        // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n        if (n > 1) {\r\n          yc = multiply(yc, n, base);\r\n          xc = multiply(xc, n, base);\r\n          yL = yc.length;\r\n          xL = xc.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xc.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL; rem[remL++] = 0);\r\n        yz = yc.slice();\r\n        yz = [0].concat(yz);\r\n        yc0 = yc[0];\r\n        if (yc[1] >= base / 2) yc0++;\r\n        // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n        // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n        do {\r\n          n = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yc, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, n.\r\n\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // n is how many times the divisor goes into the current remainder.\r\n            n = mathfloor(rem0 / yc0);\r\n\r\n            //  Algorithm:\r\n            //  product = divisor multiplied by trial digit (n).\r\n            //  Compare product and remainder.\r\n            //  If product is greater than remainder:\r\n            //    Subtract divisor from product, decrement trial digit.\r\n            //  Subtract product from remainder.\r\n            //  If product was less than remainder at the last compare:\r\n            //    Compare new remainder and divisor.\r\n            //    If remainder is greater than divisor:\r\n            //      Subtract divisor from remainder, increment trial digit.\r\n\r\n            if (n > 1) {\r\n\r\n              // n may be > base only when base is 3.\r\n              if (n >= base) n = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiply(yc, n, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              // If product > remainder then trial digit n too high.\r\n              // n is 1 too high about 5% of the time, and is not known to have\r\n              // ever been more than 1 too high.\r\n              while (compare(prod, rem, prodL, remL) == 1) {\r\n                n--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                prodL = prod.length;\r\n                cmp = 1;\r\n              }\r\n            } else {\r\n\r\n              // n is 0 or 1, cmp is -1.\r\n              // If n is 0, there is no need to compare yc and rem again below,\r\n              // so change cmp to 1 to avoid it.\r\n              // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n              if (n == 0) {\r\n\r\n                // divisor < remainder, so n must be at least 1.\r\n                cmp = n = 1;\r\n              }\r\n\r\n              // product = divisor\r\n              prod = yc.slice();\r\n              prodL = prod.length;\r\n            }\r\n\r\n            if (prodL < remL) prod = [0].concat(prod);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n            remL = rem.length;\r\n\r\n             // If product was < remainder.\r\n            if (cmp == -1) {\r\n\r\n              // Compare divisor and new remainder.\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              // Trial digit n too low.\r\n              // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n              while (compare(yc, rem, yL, remL) < 1) {\r\n                n++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                remL = rem.length;\r\n              }\r\n            }\r\n          } else if (cmp === 0) {\r\n            n++;\r\n            rem = [0];\r\n          } // else cmp === 1 and n will be 0\r\n\r\n          // Add the next digit, n, to the result array.\r\n          qc[i++] = n;\r\n\r\n          // Update the remainder.\r\n          if (rem[0]) {\r\n            rem[remL++] = xc[xi] || 0;\r\n          } else {\r\n            rem = [xc[xi]];\r\n            remL = 1;\r\n          }\r\n        } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n        more = rem[0] != null;\r\n\r\n        // Leading zero?\r\n        if (!qc[0]) qc.splice(0, 1);\r\n      }\r\n\r\n      if (base == BASE) {\r\n\r\n        // To calculate q.e, first get the number of digits of qc[0].\r\n        for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n        round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n      // Caller is convertBase.\r\n      } else {\r\n        q.e = e;\r\n        q.r = +more;\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n   * notation rounded to the specified decimal places or significant digits.\r\n   *\r\n   * n: a BigNumber.\r\n   * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n   * rm: the rounding mode.\r\n   * id: 1 (toExponential) or 2 (toPrecision).\r\n   */\r\n  function format(n, i, rm, id) {\r\n    var c0, e, ne, len, str;\r\n\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n\r\n    if (!n.c) return n.toString();\r\n\r\n    c0 = n.c[0];\r\n    ne = n.e;\r\n\r\n    if (i == null) {\r\n      str = coeffToString(n.c);\r\n      str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n       ? toExponential(str, ne)\r\n       : toFixedPoint(str, ne, '0');\r\n    } else {\r\n      n = round(new BigNumber(n), i, rm);\r\n\r\n      // n.e may have changed if the value was rounded up.\r\n      e = n.e;\r\n\r\n      str = coeffToString(n.c);\r\n      len = str.length;\r\n\r\n      // toPrecision returns exponential notation if the number of significant digits\r\n      // specified is less than the number of digits necessary to represent the integer\r\n      // part of the value in fixed-point notation.\r\n\r\n      // Exponential notation.\r\n      if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n        // Append zeros?\r\n        for (; len < i; str += '0', len++);\r\n        str = toExponential(str, e);\r\n\r\n      // Fixed-point notation.\r\n      } else {\r\n        i -= ne;\r\n        str = toFixedPoint(str, e, '0');\r\n\r\n        // Append zeros?\r\n        if (e + 1 > len) {\r\n          if (--i > 0) for (str += '.'; i--; str += '0');\r\n        } else {\r\n          i += e - len;\r\n          if (i > 0) {\r\n            if (e + 1 == len) str += '.';\r\n            for (; i--; str += '0');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n.s < 0 && c0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Handle BigNumber.max and BigNumber.min.\r\n  // If any number is NaN, return NaN.\r\n  function maxOrMin(args, n) {\r\n    var k, y,\r\n      i = 1,\r\n      x = new BigNumber(args[0]);\r\n\r\n    for (; i < args.length; i++) {\r\n      y = new BigNumber(args[i]);\r\n      if (!y.s || (k = compare(x, y)) === n || k === 0 && x.s === n) {\r\n        x = y;\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n   * Called by minus, plus and times.\r\n   */\r\n  function normalise(n, c, e) {\r\n    var i = 1,\r\n      j = c.length;\r\n\r\n     // Remove trailing zeros.\r\n    for (; !c[--j]; c.pop());\r\n\r\n    // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n    for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n    // Overflow?\r\n    if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n      // Infinity.\r\n      n.c = n.e = null;\r\n\r\n    // Underflow?\r\n    } else if (e < MIN_EXP) {\r\n\r\n      // Zero.\r\n      n.c = [n.e = 0];\r\n    } else {\r\n      n.e = e;\r\n      n.c = c;\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n\r\n  // Handle values that fail the validity test in BigNumber.\r\n  parseNumeric = (function () {\r\n    var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n      dotAfter = /^([^.]+)\\.$/,\r\n      dotBefore = /^\\.([^.]+)$/,\r\n      isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n      whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n    return function (x, str, isNum, b) {\r\n      var base,\r\n        s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n      // No exception on ±Infinity or NaN.\r\n      if (isInfinityOrNaN.test(s)) {\r\n        x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n      } else {\r\n        if (!isNum) {\r\n\r\n          // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n          s = s.replace(basePrefix, function (m, p1, p2) {\r\n            base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n            return !b || b == base ? p1 : m;\r\n          });\r\n\r\n          if (b) {\r\n            base = b;\r\n\r\n            // E.g. '1.' to '1', '.1' to '0.1'\r\n            s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n          }\r\n\r\n          if (str != s) return new BigNumber(s, base);\r\n        }\r\n\r\n        // '[BigNumber Error] Not a number: {n}'\r\n        // '[BigNumber Error] Not a base {b} number: {n}'\r\n        if (BigNumber.DEBUG) {\r\n          throw Error\r\n            (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n        }\r\n\r\n        // NaN\r\n        x.s = null;\r\n      }\r\n\r\n      x.c = x.e = null;\r\n    }\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n   * If r is truthy, it is known that there are more digits after the rounding digit.\r\n   */\r\n  function round(x, sd, rm, r) {\r\n    var d, i, j, k, n, ni, rd,\r\n      xc = x.c,\r\n      pows10 = POWS_TEN;\r\n\r\n    // if x is not Infinity or NaN...\r\n    if (xc) {\r\n\r\n      // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n      // ni is the index of n within x.c.\r\n      // d is the number of digits of n.\r\n      // i is the index of rd within n including leading zeros.\r\n      // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n      out: {\r\n\r\n        // Get the number of digits of the first element of xc.\r\n        for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n        i = sd - d;\r\n\r\n        // If the rounding digit is in the first element of xc...\r\n        if (i < 0) {\r\n          i += LOG_BASE;\r\n          j = sd;\r\n          n = xc[ni = 0];\r\n\r\n          // Get the rounding digit at index j of n.\r\n          rd = mathfloor(n / pows10[d - j - 1] % 10);\r\n        } else {\r\n          ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n          if (ni >= xc.length) {\r\n\r\n            if (r) {\r\n\r\n              // Needed by sqrt.\r\n              for (; xc.length <= ni; xc.push(0));\r\n              n = rd = 0;\r\n              d = 1;\r\n              i %= LOG_BASE;\r\n              j = i - LOG_BASE + 1;\r\n            } else {\r\n              break out;\r\n            }\r\n          } else {\r\n            n = k = xc[ni];\r\n\r\n            // Get the number of digits of n.\r\n            for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n            // Get the index of rd within n.\r\n            i %= LOG_BASE;\r\n\r\n            // Get the index of rd within n, adjusted for leading zeros.\r\n            // The number of leading zeros of n is given by LOG_BASE - d.\r\n            j = i - LOG_BASE + d;\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = j < 0 ? 0 : mathfloor(n / pows10[d - j - 1] % 10);\r\n          }\r\n        }\r\n\r\n        r = r || sd < 0 ||\r\n\r\n        // Are there any non-zero digits after the rounding digit?\r\n        // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n        // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n         xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n        r = rm < 4\r\n         ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n         : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n           rm == (x.s < 0 ? 8 : 7));\r\n\r\n        if (sd < 1 || !xc[0]) {\r\n          xc.length = 0;\r\n\r\n          if (r) {\r\n\r\n            // Convert sd to decimal places.\r\n            sd -= x.e + 1;\r\n\r\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n            xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n            x.e = -sd || 0;\r\n          } else {\r\n\r\n            // Zero.\r\n            xc[0] = x.e = 0;\r\n          }\r\n\r\n          return x;\r\n        }\r\n\r\n        // Remove excess digits.\r\n        if (i == 0) {\r\n          xc.length = ni;\r\n          k = 1;\r\n          ni--;\r\n        } else {\r\n          xc.length = ni + 1;\r\n          k = pows10[LOG_BASE - i];\r\n\r\n          // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n          // j > 0 means i > number of leading zeros of n.\r\n          xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n        }\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          for (; ;) {\r\n\r\n            // If the digit to be rounded up is in the first element of xc...\r\n            if (ni == 0) {\r\n\r\n              // i will be the length of xc[0] before k is added.\r\n              for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n              j = xc[0] += k;\r\n              for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n              // if i != k the length has increased.\r\n              if (i != k) {\r\n                x.e++;\r\n                if (xc[0] == BASE) xc[0] = 1;\r\n              }\r\n\r\n              break;\r\n            } else {\r\n              xc[ni] += k;\r\n              if (xc[ni] != BASE) break;\r\n              xc[ni--] = 0;\r\n              k = 1;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (i = xc.length; xc[--i] === 0; xc.pop());\r\n      }\r\n\r\n      // Overflow? Infinity.\r\n      if (x.e > MAX_EXP) {\r\n        x.c = x.e = null;\r\n\r\n      // Underflow? Zero.\r\n      } else if (x.e < MIN_EXP) {\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function valueOf(n) {\r\n    var str,\r\n      e = n.e;\r\n\r\n    if (e === null) return n.toString();\r\n\r\n    str = coeffToString(n.c);\r\n\r\n    str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n      ? toExponential(str, e)\r\n      : toFixedPoint(str, e, '0');\r\n\r\n    return n.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new BigNumber(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   *   0 if they have the same value,\r\n   *   or null if the value of either is NaN.\r\n   */\r\n  P.comparedTo = function (y, b) {\r\n    return compare(this, new BigNumber(y, b));\r\n  };\r\n\r\n\r\n  /*\r\n   * If dp is undefined or null or true or false, return the number of decimal places of the\r\n   * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   *\r\n   * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.decimalPlaces = P.dp = function (dp, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), dp + x.e + 1, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last number.\r\n    if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n    if (n < 0) n = 0;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n   * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.dividedBy = P.div = function (y, b) {\r\n    return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n   * BigNumber by the value of BigNumber(y, b).\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n    return div(this, new BigNumber(y, b), 0, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n   *\r\n   * If m is present, return the result modulo m.\r\n   * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n   *\r\n   * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n   * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n   *\r\n   * n {number|string|BigNumber} The exponent. An integer.\r\n   * [m] {number|string|BigNumber} The modulus.\r\n   *\r\n   * '[BigNumber Error] Exponent not an integer: {n}'\r\n   */\r\n  P.exponentiatedBy = P.pow = function (n, m) {\r\n    var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n      x = this;\r\n\r\n    n = new BigNumber(n);\r\n\r\n    // Allow NaN and ±Infinity, but not other non-integers.\r\n    if (n.c && !n.isInteger()) {\r\n      throw Error\r\n        (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n    }\r\n\r\n    if (m != null) m = new BigNumber(m);\r\n\r\n    // Exponent of MAX_SAFE_INTEGER is 15.\r\n    nIsBig = n.e > 14;\r\n\r\n    // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n    if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n      // The sign of the result of pow when x is negative depends on the evenness of n.\r\n      // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n      y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? n.s * (2 - isOdd(n)) : +valueOf(n)));\r\n      return m ? y.mod(m) : y;\r\n    }\r\n\r\n    nIsNeg = n.s < 0;\r\n\r\n    if (m) {\r\n\r\n      // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n      if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n      isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n      if (isModExp) x = x.mod(m);\r\n\r\n    // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n    // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n    } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n      // [1, 240000000]\r\n      ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n      // [80000000000000]  [99999750000000]\r\n      : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n      // If x is negative and n is odd, k = -0, else k = 0.\r\n      k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n      // If x >= 1, k = ±Infinity.\r\n      if (x.e > -1) k = 1 / k;\r\n\r\n      // If n is negative return ±0, else return ±Infinity.\r\n      return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n    } else if (POW_PRECISION) {\r\n\r\n      // Truncating each coefficient array to a length of k after each multiplication\r\n      // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n      // i.e. there will be a minimum of 28 guard digits retained.\r\n      k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n    }\r\n\r\n    if (nIsBig) {\r\n      half = new BigNumber(0.5);\r\n      if (nIsNeg) n.s = 1;\r\n      nIsOdd = isOdd(n);\r\n    } else {\r\n      i = Math.abs(+valueOf(n));\r\n      nIsOdd = i % 2;\r\n    }\r\n\r\n    y = new BigNumber(ONE);\r\n\r\n    // Performs 54 loop iterations for n of 9007199254740991.\r\n    for (; ;) {\r\n\r\n      if (nIsOdd) {\r\n        y = y.times(x);\r\n        if (!y.c) break;\r\n\r\n        if (k) {\r\n          if (y.c.length > k) y.c.length = k;\r\n        } else if (isModExp) {\r\n          y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (i) {\r\n        i = mathfloor(i / 2);\r\n        if (i === 0) break;\r\n        nIsOdd = i % 2;\r\n      } else {\r\n        n = n.times(half);\r\n        round(n, n.e + 1, 1);\r\n\r\n        if (n.e > 14) {\r\n          nIsOdd = isOdd(n);\r\n        } else {\r\n          i = +valueOf(n);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        }\r\n      }\r\n\r\n      x = x.times(x);\r\n\r\n      if (k) {\r\n        if (x.c && x.c.length > k) x.c.length = k;\r\n      } else if (isModExp) {\r\n        x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n      }\r\n    }\r\n\r\n    if (isModExp) return y;\r\n    if (nIsNeg) y = ONE.div(y);\r\n\r\n    return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n   * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n   */\r\n  P.integerValue = function (rm) {\r\n    var n = new BigNumber(this);\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n    return round(n, n.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isEqualTo = P.eq = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.c;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isGreaterThan = P.gt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n   */\r\n  P.isInteger = function () {\r\n    return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isLessThan = P.lt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is negative, otherwise return false.\r\n   */\r\n  P.isNegative = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is positive, otherwise return false.\r\n   */\r\n  P.isPositive = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.c && this.c[0] == 0;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.minus = function (y, b) {\r\n    var i, j, t, xLTy,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Either Infinity?\r\n      if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n      // Either zero?\r\n      if (!xc[0] || !yc[0]) {\r\n\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n         // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n         ROUNDING_MODE == 3 ? -0 : 0);\r\n      }\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Determine which is the bigger number.\r\n    if (a = xe - ye) {\r\n\r\n      if (xLTy = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      for (b = a; b--; t.push(0));\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n\r\n        if (xc[b] != yc[b]) {\r\n          xLTy = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xLTy) {\r\n      t = xc;\r\n      xc = yc;\r\n      yc = t;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    b = (j = yc.length) - (i = xc.length);\r\n\r\n    // Append zeros to xc if shorter.\r\n    // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n    if (b > 0) for (; b--; xc[i++] = 0);\r\n    b = BASE - 1;\r\n\r\n    // Subtract yc from xc.\r\n    for (; j > a;) {\r\n\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i]; xc[i] = b);\r\n        --xc[i];\r\n        xc[j] += BASE;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n    // Zero?\r\n    if (!xc[0]) {\r\n\r\n      // Following IEEE 754 (2008) 6.3,\r\n      // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n      y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n    // for finite x and y.\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n   * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n   */\r\n  P.modulo = P.mod = function (y, b) {\r\n    var q, s,\r\n      x = this;\r\n\r\n    y = new BigNumber(y, b);\r\n\r\n    // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n    if (!x.c || !y.s || y.c && !y.c[0]) {\r\n      return new BigNumber(NaN);\r\n\r\n    // Return x if y is Infinity or x is zero.\r\n    } else if (!y.c || x.c && !x.c[0]) {\r\n      return new BigNumber(x);\r\n    }\r\n\r\n    if (MODULO_MODE == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // r = x - qy    where  0 <= r < abs(y)\r\n      s = y.s;\r\n      y.s = 1;\r\n      q = div(x, y, 0, 3);\r\n      y.s = s;\r\n      q.s *= s;\r\n    } else {\r\n      q = div(x, y, 0, MODULO_MODE);\r\n    }\r\n\r\n    y = x.minus(q.times(y));\r\n\r\n    // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n    if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n   * of BigNumber(y, b).\r\n   */\r\n  P.multipliedBy = P.times = function (y, b) {\r\n    var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n      base, sqrtBase,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new BigNumber(y, b)).c;\r\n\r\n    // Either NaN, ±Infinity or ±0?\r\n    if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n      // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n      if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n        y.c = y.e = y.s = null;\r\n      } else {\r\n        y.s *= x.s;\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        if (!xc || !yc) {\r\n          y.c = y.e = null;\r\n\r\n        // Return ±0 if either is ±0.\r\n        } else {\r\n          y.c = [0];\r\n          y.e = 0;\r\n        }\r\n      }\r\n\r\n      return y;\r\n    }\r\n\r\n    e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n    y.s *= x.s;\r\n    xcL = xc.length;\r\n    ycL = yc.length;\r\n\r\n    // Ensure xc points to longer array and xcL to its length.\r\n    if (xcL < ycL) {\r\n      zc = xc;\r\n      xc = yc;\r\n      yc = zc;\r\n      i = xcL;\r\n      xcL = ycL;\r\n      ycL = i;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n    base = BASE;\r\n    sqrtBase = SQRT_BASE;\r\n\r\n    for (i = ycL; --i >= 0;) {\r\n      c = 0;\r\n      ylo = yc[i] % sqrtBase;\r\n      yhi = yc[i] / sqrtBase | 0;\r\n\r\n      for (k = xcL, j = i + k; j > i;) {\r\n        xlo = xc[--k] % sqrtBase;\r\n        xhi = xc[k] / sqrtBase | 0;\r\n        m = yhi * xlo + xhi * ylo;\r\n        xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n        c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n        zc[j--] = xlo % base;\r\n      }\r\n\r\n      zc[j] = c;\r\n    }\r\n\r\n    if (c) {\r\n      ++e;\r\n    } else {\r\n      zc.splice(0, 1);\r\n    }\r\n\r\n    return normalise(y, zc, e);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n   * i.e. multiplied by -1.\r\n   */\r\n  P.negated = function () {\r\n    var x = new BigNumber(this);\r\n    x.s = -x.s || null;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.plus = function (y, b) {\r\n    var t,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n     if (a != b) {\r\n      y.s = -b;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Return ±Infinity if either ±Infinity.\r\n      if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n      // Either zero?\r\n      // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n      if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n    if (a = xe - ye) {\r\n      if (a > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        a = -a;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; a--; t.push(0));\r\n      t.reverse();\r\n    }\r\n\r\n    a = xc.length;\r\n    b = yc.length;\r\n\r\n    // Point xc to the longer array, and b to the shorter length.\r\n    if (a - b < 0) {\r\n      t = yc;\r\n      yc = xc;\r\n      xc = t;\r\n      b = a;\r\n    }\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n    for (a = 0; b;) {\r\n      a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n      xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n    }\r\n\r\n    if (a) {\r\n      xc = [a].concat(xc);\r\n      ++ye;\r\n    }\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    // ye = MAX_EXP + 1 possible\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   * If sd is undefined or null or true or false, return the number of significant digits of\r\n   * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   * If sd is true include integer-part trailing zeros in the count.\r\n   *\r\n   * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n   *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.precision = P.sd = function (sd, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (sd != null && sd !== !!sd) {\r\n      intCheck(sd, 1, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), sd, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    v = c.length - 1;\r\n    n = v * LOG_BASE + 1;\r\n\r\n    if (v = c[v]) {\r\n\r\n      // Subtract the number of trailing zeros of the last element.\r\n      for (; v % 10 == 0; v /= 10, n--);\r\n\r\n      // Add the number of digits of the first element.\r\n      for (v = c[0]; v >= 10; v /= 10, n++);\r\n    }\r\n\r\n    if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n   * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n   *\r\n   * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n   */\r\n  P.shiftedBy = function (k) {\r\n    intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n    return this.times('1e' + k);\r\n  };\r\n\r\n\r\n  /*\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N) =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I) =  I\r\n   *  sqrt(0) =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n   * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, r, rep, t,\r\n      x = this,\r\n      c = x.c,\r\n      s = x.s,\r\n      e = x.e,\r\n      dp = DECIMAL_PLACES + 4,\r\n      half = new BigNumber('0.5');\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !c || !c[0]) {\r\n      return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n    }\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+valueOf(x));\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = coeffToString(c);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(+n);\r\n      e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new BigNumber(n);\r\n    } else {\r\n      r = new BigNumber(s + '');\r\n    }\r\n\r\n    // Check for zero.\r\n    // r could be zero if MIN_EXP is changed after the this value was created.\r\n    // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n    // coeffToString to throw.\r\n    if (r.c[0]) {\r\n      e = r.e;\r\n      s = e + dp;\r\n      if (s < 3) s = 0;\r\n\r\n      // Newton-Raphson iteration.\r\n      for (; ;) {\r\n        t = r;\r\n        r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n        if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n          // The exponent of r may here be one less than the final result exponent,\r\n          // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n          // are indexed correctly.\r\n          if (r.e < e) --s;\r\n          n = n.slice(s - 3, s + 1);\r\n\r\n          // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n          // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n          // iteration.\r\n          if (n == '9999' || !rep && n == '4999') {\r\n\r\n            // On the first iteration only, check to see if rounding up gives the\r\n            // exact result as the nines may infinitely repeat.\r\n            if (!rep) {\r\n              round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n              if (t.times(t).eq(x)) {\r\n                r = t;\r\n                break;\r\n              }\r\n            }\r\n\r\n            dp += 4;\r\n            s += 4;\r\n            rep = 1;\r\n          } else {\r\n\r\n            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n            // result. If not, then there are further digits and m will be truthy.\r\n            if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n              // Truncate to the first rounding digit.\r\n              round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n              m = !r.times(r).eq(x);\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in exponential notation and\r\n   * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp++;\r\n    }\r\n    return format(this, dp, rm, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n   * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n   * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp = dp + this.e + 1;\r\n    }\r\n    return format(this, dp, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n   * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n   * of the format or FORMAT object (see BigNumber.set).\r\n   *\r\n   * The formatting object may contain some or all of the properties shown below.\r\n   *\r\n   * FORMAT = {\r\n   *   prefix: '',\r\n   *   groupSize: 3,\r\n   *   secondaryGroupSize: 0,\r\n   *   groupSeparator: ',',\r\n   *   decimalSeparator: '.',\r\n   *   fractionGroupSize: 0,\r\n   *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n   *   suffix: ''\r\n   * };\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   * [format] {object} Formatting options. See FORMAT pbject above.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   * '[BigNumber Error] Argument not an object: {format}'\r\n   */\r\n  P.toFormat = function (dp, rm, format) {\r\n    var str,\r\n      x = this;\r\n\r\n    if (format == null) {\r\n      if (dp != null && rm && typeof rm == 'object') {\r\n        format = rm;\r\n        rm = null;\r\n      } else if (dp && typeof dp == 'object') {\r\n        format = dp;\r\n        dp = rm = null;\r\n      } else {\r\n        format = FORMAT;\r\n      }\r\n    } else if (typeof format != 'object') {\r\n      throw Error\r\n        (bignumberError + 'Argument not an object: ' + format);\r\n    }\r\n\r\n    str = x.toFixed(dp, rm);\r\n\r\n    if (x.c) {\r\n      var i,\r\n        arr = str.split('.'),\r\n        g1 = +format.groupSize,\r\n        g2 = +format.secondaryGroupSize,\r\n        groupSeparator = format.groupSeparator || '',\r\n        intPart = arr[0],\r\n        fractionPart = arr[1],\r\n        isNeg = x.s < 0,\r\n        intDigits = isNeg ? intPart.slice(1) : intPart,\r\n        len = intDigits.length;\r\n\r\n      if (g2) {\r\n        i = g1;\r\n        g1 = g2;\r\n        g2 = i;\r\n        len -= i;\r\n      }\r\n\r\n      if (g1 > 0 && len > 0) {\r\n        i = len % g1 || g1;\r\n        intPart = intDigits.substr(0, i);\r\n        for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n        if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n        if (isNeg) intPart = '-' + intPart;\r\n      }\r\n\r\n      str = fractionPart\r\n       ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n        ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n         '$&' + (format.fractionGroupSeparator || ''))\r\n        : fractionPart)\r\n       : intPart;\r\n    }\r\n\r\n    return (format.prefix || '') + str + (format.suffix || '');\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n   * fraction with an integer numerator and an integer denominator.\r\n   * The denominator will be a positive non-zero value less than or equal to the specified\r\n   * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n   * the lowest value necessary to represent the number exactly.\r\n   *\r\n   * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n   *\r\n   * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n   */\r\n  P.toFraction = function (md) {\r\n    var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n      x = this,\r\n      xc = x.c;\r\n\r\n    if (md != null) {\r\n      n = new BigNumber(md);\r\n\r\n      // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n      if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n        throw Error\r\n          (bignumberError + 'Argument ' +\r\n            (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n      }\r\n    }\r\n\r\n    if (!xc) return new BigNumber(x);\r\n\r\n    d = new BigNumber(ONE);\r\n    n1 = d0 = new BigNumber(ONE);\r\n    d1 = n0 = new BigNumber(ONE);\r\n    s = coeffToString(xc);\r\n\r\n    // Determine initial denominator.\r\n    // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n    e = d.e = s.length - x.e - 1;\r\n    d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n    md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n    exp = MAX_EXP;\r\n    MAX_EXP = 1 / 0;\r\n    n = new BigNumber(s);\r\n\r\n    // n0 = d1 = 0\r\n    n0.c[0] = 0;\r\n\r\n    for (; ;)  {\r\n      q = div(n, d, 0, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.comparedTo(md) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      n1 = n0.plus(q.times(d2 = n1));\r\n      n0 = d2;\r\n      d = n.minus(q.times(d2 = d));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = div(md.minus(d0), d1, 0, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n    e = e * 2;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n    r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n        div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n    MAX_EXP = exp;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this BigNumber converted to a number primitive.\r\n   */\r\n  P.toNumber = function () {\r\n    return +valueOf(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n   * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n   * necessary to represent the integer part of the value in fixed-point notation, then use\r\n   * exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    if (sd != null) intCheck(sd, 1, MAX);\r\n    return format(this, sd, rm, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n   * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n   * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n   * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n   * TO_EXP_NEG, return exponential notation.\r\n   *\r\n   * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n   *\r\n   * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n   */\r\n  P.toString = function (b) {\r\n    var str,\r\n      n = this,\r\n      s = n.s,\r\n      e = n.e;\r\n\r\n    // Infinity or NaN?\r\n    if (e === null) {\r\n      if (s) {\r\n        str = 'Infinity';\r\n        if (s < 0) str = '-' + str;\r\n      } else {\r\n        str = 'NaN';\r\n      }\r\n    } else {\r\n      if (b == null) {\r\n        str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n         ? toExponential(coeffToString(n.c), e)\r\n         : toFixedPoint(coeffToString(n.c), e, '0');\r\n      } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n        n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n        str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n      } else {\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n        str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n      }\r\n\r\n      if (s < 0 && n.c[0]) str = '-' + str;\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return as toString, but do not accept a base argument, and include the minus sign for\r\n   * negative zero.\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    return valueOf(this);\r\n  };\r\n\r\n\r\n  P._isBigNumber = true;\r\n\r\n  P[Symbol.toStringTag] = 'BigNumber';\r\n\r\n  // Node.js v10.12.0+\r\n  P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\r\n\r\n  if (configObject != null) BigNumber.set(configObject);\r\n\r\n  return BigNumber;\r\n}\r\n\r\n\r\n// PRIVATE HELPER FUNCTIONS\r\n\r\n// These functions don't need access to variables,\r\n// e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\nfunction bitFloor(n) {\r\n  var i = n | 0;\r\n  return n > 0 || n === i ? i : i - 1;\r\n}\r\n\r\n\r\n// Return a coefficient array as a string of base 10 digits.\r\nfunction coeffToString(a) {\r\n  var s, z,\r\n    i = 1,\r\n    j = a.length,\r\n    r = a[0] + '';\r\n\r\n  for (; i < j;) {\r\n    s = a[i++] + '';\r\n    z = LOG_BASE - s.length;\r\n    for (; z--; s = '0' + s);\r\n    r += s;\r\n  }\r\n\r\n  // Determine trailing zeros.\r\n  for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n  return r.slice(0, j + 1 || 1);\r\n}\r\n\r\n\r\n// Compare the value of BigNumbers x and y.\r\nfunction compare(x, y) {\r\n  var a, b,\r\n    xc = x.c,\r\n    yc = y.c,\r\n    i = x.s,\r\n    j = y.s,\r\n    k = x.e,\r\n    l = y.e;\r\n\r\n  // Either NaN?\r\n  if (!i || !j) return null;\r\n\r\n  a = xc && !xc[0];\r\n  b = yc && !yc[0];\r\n\r\n  // Either zero?\r\n  if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n  // Signs differ?\r\n  if (i != j) return i;\r\n\r\n  a = i < 0;\r\n  b = k == l;\r\n\r\n  // Either Infinity?\r\n  if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n  // Compare exponents.\r\n  if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n  j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n  // Compare lengths.\r\n  return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n}\r\n\r\n\r\n/*\r\n * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n */\r\nfunction intCheck(n, min, max, name) {\r\n  if (n < min || n > max || n !== mathfloor(n)) {\r\n    throw Error\r\n     (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n       ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n       : ' not a primitive number: ') + String(n));\r\n  }\r\n}\r\n\r\n\r\n// Assumes finite n.\r\nfunction isOdd(n) {\r\n  var k = n.c.length - 1;\r\n  return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n}\r\n\r\n\r\nfunction toExponential(str, e) {\r\n  return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n   (e < 0 ? 'e' : 'e+') + e;\r\n}\r\n\r\n\r\nfunction toFixedPoint(str, e, z) {\r\n  var len, zs;\r\n\r\n  // Negative exponent?\r\n  if (e < 0) {\r\n\r\n    // Prepend zeros.\r\n    for (zs = z + '.'; ++e; zs += z);\r\n    str = zs + str;\r\n\r\n  // Positive exponent\r\n  } else {\r\n    len = str.length;\r\n\r\n    // Append zeros.\r\n    if (++e > len) {\r\n      for (zs = z, e -= len; --e; zs += z);\r\n      str += zs;\r\n    } else if (e < len) {\r\n      str = str.slice(0, e) + '.' + str.slice(e);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// EXPORT\r\n\r\n\r\nexport var BigNumber = clone();\r\n\r\nexport default BigNumber;\r\n","import { Layout } from '@solana/buffer-layout';\nimport BigNumber from 'bignumber.js';\nimport { encodeDecode } from './base';\nimport { u128 } from './bigint';\n\nexport const WAD = new BigNumber('1e+18');\n\nexport const decimal = (property?: string): Layout<BigNumber> => {\n    const layout = u128(property);\n    const { encode, decode } = encodeDecode(layout);\n\n    const decimalLayout = layout as Layout<unknown> as Layout<BigNumber>;\n\n    decimalLayout.decode = (buffer: Buffer, offset: number) => {\n        const src = decode(buffer, offset).toString();\n        return new BigNumber(src).div(WAD);\n    };\n\n    decimalLayout.encode = (decimal: BigNumber, buffer: Buffer, offset: number) => {\n        const src = BigInt(decimal.times(WAD).integerValue().toString());\n        return encode(src, buffer, offset);\n    };\n\n    return decimalLayout;\n};\n","import { Layout, u8 } from '@solana/buffer-layout';\nimport { encodeDecode } from './base';\n\nexport const bool = (property?: string): Layout<boolean> => {\n    const layout = u8(property);\n    const { encode, decode } = encodeDecode(layout);\n\n    const boolLayout = layout as Layout<unknown> as Layout<boolean>;\n\n    boolLayout.decode = (buffer: Buffer, offset: number) => {\n        const src = decode(buffer, offset);\n        return !!src;\n    };\n\n    boolLayout.encode = (bool: boolean, buffer: Buffer, offset: number) => {\n        const src = Number(bool);\n        return encode(src, buffer, offset);\n    };\n\n    return boolLayout;\n};\n","import { blob, Layout } from '@solana/buffer-layout';\nimport { PublicKey } from '@solana/web3.js';\nimport { encodeDecode } from './base';\n\nexport const publicKey = (property?: string): Layout<PublicKey> => {\n    const layout = blob(32, property);\n    const { encode, decode } = encodeDecode(layout);\n\n    const publicKeyLayout = layout as Layout<unknown> as Layout<PublicKey>;\n\n    publicKeyLayout.decode = (buffer: Buffer, offset: number) => {\n        const src = decode(buffer, offset);\n        return new PublicKey(src);\n    };\n\n    publicKeyLayout.encode = (publicKey: PublicKey, buffer: Buffer, offset: number) => {\n        const src = publicKey.toBuffer();\n        return encode(src, buffer, offset);\n    };\n\n    return publicKeyLayout;\n};\n","/** Base class for errors */\nexport abstract class TokenError extends Error {\n    constructor(message?: string) {\n        super(message);\n    }\n}\n\n/** Thrown if an account is not found at the expected address */\nexport class TokenAccountNotFoundError extends TokenError {\n    name = 'TokenAccountNotFoundError';\n}\n\n/** Thrown if a program state account is not a valid Account */\nexport class TokenInvalidAccountError extends TokenError {\n    name = 'TokenInvalidAccountError';\n}\n\n/** Thrown if a program state account does not contain valid data */\nexport class TokenInvalidAccountDataError extends TokenError {\n    name = 'TokenInvalidAccountDataError';\n}\n\n/** Thrown if a program state account is not owned by the expected token program */\nexport class TokenInvalidAccountOwnerError extends TokenError {\n    name = 'TokenInvalidAccountOwnerError';\n}\n\n/** Thrown if the byte length of an program state account doesn't match the expected size */\nexport class TokenInvalidAccountSizeError extends TokenError {\n    name = 'TokenInvalidAccountSizeError';\n}\n\n/** Thrown if the mint of a token account doesn't match the expected mint */\nexport class TokenInvalidMintError extends TokenError {\n    name = 'TokenInvalidMintError';\n}\n\n/** Thrown if the owner of a token account doesn't match the expected owner */\nexport class TokenInvalidOwnerError extends TokenError {\n    name = 'TokenInvalidOwnerError';\n}\n\n/** Thrown if the owner of a token account is a PDA (Program Derived Address) */\nexport class TokenOwnerOffCurveError extends TokenError {\n    name = 'TokenOwnerOffCurveError';\n}\n\n/** Thrown if an instruction's program is invalid */\nexport class TokenInvalidInstructionProgramError extends TokenError {\n    name = 'TokenInvalidInstructionProgramError';\n}\n\n/** Thrown if an instruction's keys are invalid */\nexport class TokenInvalidInstructionKeysError extends TokenError {\n    name = 'TokenInvalidInstructionKeysError';\n}\n\n/** Thrown if an instruction's data is invalid */\nexport class TokenInvalidInstructionDataError extends TokenError {\n    name = 'TokenInvalidInstructionDataError';\n}\n\n/** Thrown if an instruction's type is invalid */\nexport class TokenInvalidInstructionTypeError extends TokenError {\n    name = 'TokenInvalidInstructionTypeError';\n}\n\n/** Thrown if the program does not support the desired instruction */\nexport class TokenUnsupportedInstructionError extends TokenError {\n    name = 'TokenUnsupportedInstructionError';\n}\n\n/** Thrown if the transfer hook extra accounts contains an invalid account index */\nexport class TokenTransferHookAccountNotFound extends TokenError {\n    name = 'TokenTransferHookAccountNotFound';\n}\n\n/** Thrown if the transfer hook extra accounts contains an invalid seed */\nexport class TokenTransferHookInvalidSeed extends TokenError {\n    name = 'TokenTransferHookInvalidSeed';\n}\n\n/** Thrown if account data required by an extra account meta seed config could not be fetched */\nexport class TokenTransferHookAccountDataNotFound extends TokenError {\n    name = 'TokenTransferHookAccountDataNotFound';\n}\n\n/** Thrown if pubkey data extra accounts config is invalid */\nexport class TokenTransferHookInvalidPubkeyData extends TokenError {\n    name = 'TokenTransferHookInvalidPubkeyData';\n}\n\n/** Thrown if pubkey data source is too small for a pubkey */\nexport class TokenTransferHookPubkeyDataTooSmall extends TokenError {\n    name = 'TokenTransferHookPubkeyDataTooSmall';\n}\n","import { struct, u32, u8 } from '@solana/buffer-layout';\nimport { bool, publicKey, u64 } from '@solana/buffer-layout-utils';\nimport type { AccountInfo, Commitment, Connection } from '@solana/web3.js';\nimport { PublicKey } from '@solana/web3.js';\nimport { ASSOCIATED_TOKEN_PROGRAM_ID, TOKEN_PROGRAM_ID } from '../constants.js';\nimport {\n    TokenAccountNotFoundError,\n    TokenInvalidAccountOwnerError,\n    TokenInvalidAccountSizeError,\n    TokenInvalidMintError,\n    TokenOwnerOffCurveError,\n} from '../errors.js';\nimport { ACCOUNT_TYPE_SIZE, AccountType } from '../extensions/accountType.js';\nimport type { ExtensionType } from '../extensions/extensionType.js';\nimport { getMintLen } from '../extensions/extensionType.js';\nimport { ACCOUNT_SIZE } from './account.js';\nimport { MULTISIG_SIZE } from './multisig.js';\n\n/** Information about a mint */\nexport interface Mint {\n    /** Address of the mint */\n    address: PublicKey;\n    /**\n     * Optional authority used to mint new tokens. The mint authority may only be provided during mint creation.\n     * If no mint authority is present then the mint has a fixed supply and no further tokens may be minted.\n     */\n    mintAuthority: PublicKey | null;\n    /** Total supply of tokens */\n    supply: bigint;\n    /** Number of base 10 digits to the right of the decimal place */\n    decimals: number;\n    /** Is this mint initialized */\n    isInitialized: boolean;\n    /** Optional authority to freeze token accounts */\n    freezeAuthority: PublicKey | null;\n    /** Additional data for extension */\n    tlvData: Buffer;\n}\n\n/** Mint as stored by the program */\nexport interface RawMint {\n    mintAuthorityOption: 1 | 0;\n    mintAuthority: PublicKey;\n    supply: bigint;\n    decimals: number;\n    isInitialized: boolean;\n    freezeAuthorityOption: 1 | 0;\n    freezeAuthority: PublicKey;\n}\n\n/** Buffer layout for de/serializing a mint */\nexport const MintLayout = struct<RawMint>([\n    u32('mintAuthorityOption'),\n    publicKey('mintAuthority'),\n    u64('supply'),\n    u8('decimals'),\n    bool('isInitialized'),\n    u32('freezeAuthorityOption'),\n    publicKey('freezeAuthority'),\n]);\n\n/** Byte length of a mint */\nexport const MINT_SIZE = MintLayout.span;\n\n/**\n * Retrieve information about a mint\n *\n * @param connection Connection to use\n * @param address    Mint account\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Mint information\n */\nexport async function getMint(\n    connection: Connection,\n    address: PublicKey,\n    commitment?: Commitment,\n    programId = TOKEN_PROGRAM_ID,\n): Promise<Mint> {\n    const info = await connection.getAccountInfo(address, commitment);\n    return unpackMint(address, info, programId);\n}\n\n/**\n * Unpack a mint\n *\n * @param address   Mint account\n * @param info      Mint account data\n * @param programId SPL Token program account\n *\n * @return Unpacked mint\n */\nexport function unpackMint(address: PublicKey, info: AccountInfo<Buffer> | null, programId = TOKEN_PROGRAM_ID): Mint {\n    if (!info) throw new TokenAccountNotFoundError();\n    if (!info.owner.equals(programId)) throw new TokenInvalidAccountOwnerError();\n    if (info.data.length < MINT_SIZE) throw new TokenInvalidAccountSizeError();\n\n    const rawMint = MintLayout.decode(info.data.slice(0, MINT_SIZE));\n    let tlvData = Buffer.alloc(0);\n    if (info.data.length > MINT_SIZE) {\n        if (info.data.length <= ACCOUNT_SIZE) throw new TokenInvalidAccountSizeError();\n        if (info.data.length === MULTISIG_SIZE) throw new TokenInvalidAccountSizeError();\n        if (info.data[ACCOUNT_SIZE] != AccountType.Mint) throw new TokenInvalidMintError();\n        tlvData = info.data.slice(ACCOUNT_SIZE + ACCOUNT_TYPE_SIZE);\n    }\n\n    return {\n        address,\n        mintAuthority: rawMint.mintAuthorityOption ? rawMint.mintAuthority : null,\n        supply: rawMint.supply,\n        decimals: rawMint.decimals,\n        isInitialized: rawMint.isInitialized,\n        freezeAuthority: rawMint.freezeAuthorityOption ? rawMint.freezeAuthority : null,\n        tlvData,\n    };\n}\n\n/** Get the minimum lamport balance for a mint to be rent exempt\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptMint(\n    connection: Connection,\n    commitment?: Commitment,\n): Promise<number> {\n    return await getMinimumBalanceForRentExemptMintWithExtensions(connection, [], commitment);\n}\n\n/** Get the minimum lamport balance for a rent-exempt mint with extensions\n *\n * @param connection Connection to use\n * @param extensions Extension types included in the mint\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptMintWithExtensions(\n    connection: Connection,\n    extensions: ExtensionType[],\n    commitment?: Commitment,\n): Promise<number> {\n    const mintLen = getMintLen(extensions);\n    return await connection.getMinimumBalanceForRentExemption(mintLen, commitment);\n}\n\n/**\n * Async version of getAssociatedTokenAddressSync\n * For backwards compatibility\n *\n * @param mint                     Token mint account\n * @param owner                    Owner of the new account\n * @param allowOwnerOffCurve       Allow the owner account to be a PDA (Program Derived Address)\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Promise containing the address of the associated token account\n */\nexport async function getAssociatedTokenAddress(\n    mint: PublicKey,\n    owner: PublicKey,\n    allowOwnerOffCurve = false,\n    programId = TOKEN_PROGRAM_ID,\n    associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID,\n): Promise<PublicKey> {\n    if (!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer())) throw new TokenOwnerOffCurveError();\n\n    const [address] = await PublicKey.findProgramAddress(\n        [owner.toBuffer(), programId.toBuffer(), mint.toBuffer()],\n        associatedTokenProgramId,\n    );\n\n    return address;\n}\n\n/**\n * Get the address of the associated token account for a given mint and owner\n *\n * @param mint                     Token mint account\n * @param owner                    Owner of the new account\n * @param allowOwnerOffCurve       Allow the owner account to be a PDA (Program Derived Address)\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Address of the associated token account\n */\nexport function getAssociatedTokenAddressSync(\n    mint: PublicKey,\n    owner: PublicKey,\n    allowOwnerOffCurve = false,\n    programId = TOKEN_PROGRAM_ID,\n    associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID,\n): PublicKey {\n    if (!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer())) throw new TokenOwnerOffCurveError();\n\n    const [address] = PublicKey.findProgramAddressSync(\n        [owner.toBuffer(), programId.toBuffer(), mint.toBuffer()],\n        associatedTokenProgramId,\n    );\n\n    return address;\n}\n","import { PublicKey } from \"@solana/web3.js\";\n\nexport type PositionAccount = {\n  authority: PublicKey;\n  positions: Position[];\n  nonce: number;\n  isSubPosition: boolean;\n  marketId: number;\n};\n\nexport type Position = {\n  ts: string;\n  positionId: string;\n  marketId: string;\n  positionStatus: PositionStatus;\n  amount: string;\n  mint: string;\n  direction: PositionDirection;\n  positionNonce: string;\n  createdAt: string;\n};\n\nexport enum PositionDirection {\n  YES = \"yes\",\n  NO = \"no\",\n}\n\nexport enum PositionStatus {\n  INIT = \"init\",\n  OPEN = \"open\",\n  CLOSED = \"closed\",\n  CLAIMED = \"claimed\",\n  LIQUIDATED = \"liquidated\",\n  WAITING = \"waiting\",\n}\n","import {\n  Market,\n  WinningDirection,\n  MarketStates\n} from '../types/trade.js'\nimport { PublicKey } from '@solana/web3.js'\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token'\nimport { IdlAccounts } from '@coral-xyz/anchor'\nimport { ShortxContract } from '../types/shortx.js'\nimport { PositionAccount, Position, PositionDirection, PositionStatus } from '../types/position.js'\n\nexport const encodeString = (value: string, alloc = 32): number[] => {\n  const buffer = Buffer.alloc(alloc, 32)\n\n  buffer.write(value)\n\n  return Array(...buffer)\n}\n\nexport const decodeString = (bytes: number[]): string => {\n  const buffer = Buffer.from(bytes)\n  return buffer.toString('utf8').trim()\n}\n\nexport const formatMarket = (\n  account: IdlAccounts<ShortxContract>['marketState'],\n  address: PublicKey\n): Market => {\n  return {\n    bump: account.bump,\n    address: address.toString(),\n    authority: account.authority.toString(),\n    marketId: account.marketId.toString(),\n    yesLiquidity: account.yesLiquidity.toString(),\n    noLiquidity: account.noLiquidity.toString(),\n    volume: account.volume.toString(),\n    oraclePubkey: account.oraclePubkey ? account.oraclePubkey.toString() : '',\n    nftCollectionMint: account.nftCollection ? account.nftCollection.toString() : '',\n    marketUsdcVault: account.marketUsdcVault ? account.marketUsdcVault.toString() : '',\n    marketState: getMarketState(account.marketState),\n    updateTs: account.updateTs.toString(),\n    nextPositionId: account.nextPositionId.toString(),\n    marketStart: account.marketStart.toString(),\n    marketEnd: account.marketEnd.toString(),\n    question: Buffer.from(account.question).toString().replace(/\\0+$/, ''),\n    winningDirection: getWinningDirection(account.winningDirection),\n  }\n}\n\nexport const formatPositionAccount = (\n  account: IdlAccounts<ShortxContract>['positionAccount'],\n  marketId?: number\n): PositionAccount => {\n  console.log('formatPositionAccount', account)\n  return {\n    authority: account.authority,\n    marketId: marketId ? marketId : account.marketId ? account.marketId.toNumber() : 0,\n    positions: account.positions.map((position: any) =>\n      formatPosition(position)\n    ),\n    nonce: account.nonce,\n    isSubPosition: account.isSubPosition\n  }\n}\n\nexport const formatPosition = (\n  position: IdlAccounts<ShortxContract>['positionAccount']['positions'][number]\n): Position => {\n  return {\n    ts: position.ts.toString(),\n    positionNonce: position.positionNonce.toString(),\n    createdAt: position.createdAt ? position.createdAt.toString() : '',\n    positionId: position.positionId.toString(),\n    marketId: position.marketId.toString(),\n    mint: position.mint ? position.mint.toString() : '',\n    positionStatus: getPositionStatus(position.positionStatus),\n    direction: getPositionDirection(position.direction),\n    amount: position.amount.toString(),\n  }\n}\n\nexport const getMarketState = (\n  status: IdlAccounts<ShortxContract>['marketState']['marketState']\n): MarketStates => {\n  const currentStatus = Object.keys(status)[0];\n  return currentStatus as unknown as MarketStates;\n}\n\n\n\nexport const getWinningDirection = (\n  direction: IdlAccounts<ShortxContract>['marketState']['winningDirection']\n): WinningDirection => {\n  const key = Object.keys(direction)[0];\n  switch (key) {\n    case 'yes':\n      return WinningDirection.YES;\n    case 'no':\n      return WinningDirection.NO;\n    case 'none':\n      return WinningDirection.NONE;\n    default:\n      const upperKey = key.toUpperCase();\n      if (upperKey in WinningDirection) {\n        return WinningDirection[upperKey as keyof typeof WinningDirection];\n      }\n      throw new Error(`Invalid winning direction variant: ${key}`);\n  }\n};\n\nexport const getTokenProgram = (mint: PublicKey): PublicKey => {\n  \n  return TOKEN_PROGRAM_ID\n}\n\nexport const getPositionDirection = (\n  direction:\n    | {\n        yes: {}\n      }\n    | {\n        no: {}\n      }\n): PositionDirection => {\n  if (Object.keys(direction)[0] === 'yes') {\n    return PositionDirection.YES\n  }\n\n  return PositionDirection.NO\n}\n\nexport const getPositionStatus = (\n  status:\n    | {\n        init: {}\n      }\n    | {\n        open: {}\n      }\n    | {\n        closed: {}\n      }\n    | {\n        claimed: {}\n      }\n    | {\n        liquidated: {}\n      }\n    | {\n        waiting: {}\n      }\n): PositionStatus => {\n  let currentStatus = Object.keys(status)[0]\n\n  switch (currentStatus) {\n    case 'init':\n      return PositionStatus.INIT\n    case 'open':\n      return PositionStatus.OPEN\n    case 'closed':\n      return PositionStatus.CLOSED\n    case 'claimed':\n      return PositionStatus.CLAIMED\n    case 'liquidated':\n      return PositionStatus.LIQUIDATED\n    case 'waiting':\n      return PositionStatus.WAITING\n    default:\n      throw new Error('Invalid order status')\n  }\n}","import { PublicKey } from '@solana/web3.js'\nimport BN from 'bn.js'\nimport {\n  ASSOCIATED_TOKEN_PROGRAM_ID,\n  TOKEN_PROGRAM_ID\n} from '@solana/spl-token'\n\nexport const getTokenATA = (\n  address: PublicKey,\n  Mint: PublicKey,\n  program = TOKEN_PROGRAM_ID\n) => {\n  return PublicKey.findProgramAddressSync(\n    [address.toBytes(), program.toBytes(), Mint.toBytes()],\n    new PublicKey(ASSOCIATED_TOKEN_PROGRAM_ID)\n  )[0]\n}\n\nexport const getMarketPDA = (programId: PublicKey, marketId: number) => {\n  return PublicKey.findProgramAddressSync(\n    [Buffer.from('market'), new BN(marketId).toArrayLike(Buffer, 'le', 8)],\n    programId\n  )[0]\n}\n\nexport const getConfigPDA = (programId: PublicKey) => {\n  return PublicKey.findProgramAddressSync(\n    [Buffer.from('config')],\n    programId\n  )[0]\n}\n\nexport const getCollectionPDA = (programId: PublicKey, marketId: number) => {\n  return PublicKey.findProgramAddressSync(\n    [\n      Buffer.from(\"collection\"), \n      new BN(marketId).toArrayLike(Buffer, \"le\", 8)\n    ],\n    programId\n  )[0];\n}\n\nexport const getPositionNftPDA = (programId: PublicKey, marketId: number, positionId: BN) => {\n  return PublicKey.findProgramAddressSync(\n    [\n      Buffer.from(\"nft\"),\n      new BN(marketId).toArrayLike(Buffer, \"le\", 8),\n      positionId.toArrayLike(Buffer, \"le\", 8),\n    ],\n    programId\n  )[0];\n}\n\nexport const getNftMetadataPDA = (nftMint: PublicKey, metaplexProgramId: PublicKey) => {\n  return PublicKey.findProgramAddressSync(\n    [\n      Buffer.from(\"metadata\"),\n      metaplexProgramId.toBuffer(),\n      nftMint.toBuffer(),\n    ],\n    metaplexProgramId\n  )[0];\n}\n\nexport const getNftMasterEditionPDA = (nftMint: PublicKey, metaplexProgramId: PublicKey) => {\n  return PublicKey.findProgramAddressSync(\n    [\n      Buffer.from(\"metadata\"),\n      metaplexProgramId.toBuffer(),\n      nftMint.toBuffer(),\n      Buffer.from(\"edition\"),\n    ],\n    metaplexProgramId\n  )[0];\n}\n\nexport const getCustomerPDA = (programId: PublicKey, customerId: number) => {\n  return PublicKey.findProgramAddressSync(\n    [Buffer.from('customer'), new BN(customerId).toArrayLike(Buffer, 'le', 8)],\n    programId\n  )[0]\n}\n\nexport const getPositionAccountPDA = (programId: PublicKey, marketId: number, subPositionKey?: PublicKey) => {\n  return subPositionKey ? PublicKey.findProgramAddressSync(\n    [Buffer.from('position'), new BN(marketId).toArrayLike(Buffer, 'le', 8), subPositionKey.toBuffer()],\n    programId\n  )[0] : PublicKey.findProgramAddressSync(\n    [Buffer.from('position'), new BN(marketId).toArrayLike(Buffer, 'le', 8)],\n    programId\n  )[0]\n}\n\nexport const getSubPositionAccountPDA = (\n  programId: PublicKey,\n  marketId: number,\n  sub_position_key: PublicKey,\n  nonce: number\n) => {\n  return PublicKey.findProgramAddressSync(\n    [\n      Buffer.from('sub_position_account'),\n      new BN(marketId).toArrayLike(Buffer, 'le', 8),\n      sub_position_key.toBuffer(),\n      new BN(nonce).toArrayLike(Buffer, 'le', 8)\n    ],\n    programId\n  )[0]\n}\n\nexport const getPoolPDA = (programId: PublicKey, poolId: number) => {\n  return PublicKey.findProgramAddressSync(\n    [Buffer.from('pool'), new BN(poolId).toArrayLike(Buffer, 'le', 8)],\n    programId\n  )[0]\n}","import {\n  TransactionInstruction,\n  TransactionMessage,\n  VersionedTransaction,\n  ComputeBudgetProgram,\n  PublicKey,\n} from \"@solana/web3.js\";\nimport { RpcOptions } from \"../types/index.js\";\nimport { AddressLookupTableAccount } from \"@solana/web3.js\";\nimport { Program } from \"@coral-xyz/anchor\";\nimport getPriorityFee from \"./getPriorityFee.js\";\nimport { ShortxContract } from \"../types/shortx.js\";\n\nconst createVersionedTransaction = async (\n  program: Program<ShortxContract>,\n  ixs: TransactionInstruction[],\n  payer: PublicKey,\n  options?: RpcOptions,\n  addressLookupTableAccounts?: AddressLookupTableAccount[]\n): Promise<VersionedTransaction> => {\n  const payerPublicKey: PublicKey = payer;\n\n  if (options?.microLamports) {\n    ixs.push(\n      ComputeBudgetProgram.setComputeUnitLimit({\n        units: options.microLamports,\n      })\n    );\n  }\n\n  if (!options?.microLamports) {\n    const priorityFee = await getPriorityFee();\n\n    ixs.push(\n      ComputeBudgetProgram.setComputeUnitPrice({\n        microLamports: priorityFee,\n      })\n    );\n  }\n\n  const { blockhash } = await program.provider.connection.getLatestBlockhash();\n\n  const tx = new VersionedTransaction(\n    new TransactionMessage({\n      instructions: ixs,\n      recentBlockhash: blockhash,\n      payerKey: payerPublicKey,\n    }).compileToV0Message(addressLookupTableAccounts)\n  );\n\n  return tx;\n};\n\nexport default createVersionedTransaction;\n","import axios, { AxiosResponse } from 'axios'\n\nconst getPriorityFee = async () => {\n  let fee = 1000\n\n  try {\n    const response: AxiosResponse<\n      Record<'1' | '5' | '15', { priorityTx: number }>\n    > = await axios.get('https://solanacompass.com/api/fees')\n    console.log(\"SDK: fee response\", response.data)\n    fee = response.data[1].priorityTx\n  } catch (e) {\n    fee = 1000\n  }\n\n  return fee\n}\n\nexport default getPriorityFee","import axios from 'axios'\nimport {\n  AddressLookupTableAccount,\n  Connection,\n  PublicKey,\n  TransactionInstruction,\n  ComputeBudgetProgram\n} from '@solana/web3.js'\n\nexport const swap = async ({\n  connection,\n  wallet,\n  inToken,\n  amount,\n  usdcMint\n}: {\n  connection: Connection\n  wallet: string\n  inToken: string\n  amount: number\n  usdcMint: string\n}) => {\n  const token = TOKENS[inToken]\n\n  if (!token) {\n    throw new Error('Token not found')\n  }\n\n  const formattedAmountIn = amount * 10 ** token.decimals\n\n  const quoteResponse = await axios.get(\n    `https://quote-api.jup.ag/v6/quote?inputMint=${inToken}&outputMint=${usdcMint}&amount=${formattedAmountIn}&slippageBps=1000`\n  )\n\n  const { data: quoteData } = quoteResponse\n\n  const swapResponse = await axios.post(\n    'https://quote-api.jup.ag/v6/swap-instructions',\n    {\n      userPublicKey: wallet,\n      wrapAndUnwrapSol: true,\n      quoteResponse: quoteData\n    }\n  )\n\n  const {\n    setupInstructions,\n    swapInstruction,\n    addressLookupTableAddresses,\n    cleanupInstruction\n  } = swapResponse.data\n\n  return {\n    swapIxs: [\n      deserializeInstruction(swapInstruction),\n      ComputeBudgetProgram.setComputeUnitLimit({\n        units: 500000\n      })\n    ],\n    addressLookupTableAccounts: await getAddressLookupTableAccounts(\n      connection,\n      addressLookupTableAddresses\n    ),\n    setupInstructions: setupInstructions.map(deserializeInstruction),\n    cleanupInstruction: deserializeInstruction(cleanupInstruction),\n    usdcAmount: quoteData.outAmount\n  }\n}\n\nconst deserializeInstruction = (instruction: any) => {\n  return new TransactionInstruction({\n    programId: new PublicKey(instruction.programId),\n    keys: instruction.accounts.map((key: any) => ({\n      pubkey: new PublicKey(key.pubkey),\n      isSigner: key.isSigner,\n      isWritable: key.isWritable\n    })),\n    data: Buffer.from(instruction.data, 'base64')\n  })\n}\n\nexport const getAddressLookupTableAccounts = async (\n  connection: Connection,\n  keys: string[]\n): Promise<AddressLookupTableAccount[]> => {\n  const addressLookupTableAccountInfos =\n    await connection.getMultipleAccountsInfo(\n      keys.map((key) => new PublicKey(key))\n    )\n\n  return addressLookupTableAccountInfos.reduce((acc, accountInfo, index) => {\n    const addressLookupTableAddress = keys[index]\n    if (accountInfo) {\n      const addressLookupTableAccount = new AddressLookupTableAccount({\n        key: new PublicKey(addressLookupTableAddress),\n        state: AddressLookupTableAccount.deserialize(accountInfo.data)\n      })\n      acc.push(addressLookupTableAccount)\n    }\n\n    return acc\n  }, new Array<AddressLookupTableAccount>())\n}\n\nconst TOKENS: Record<string, { mint: string; decimals: number }> = {\n  So11111111111111111111111111111111111111112: {\n    mint: 'So11111111111111111111111111111111111111112',\n    decimals: 9\n  },\n  EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v: {\n    mint: 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v',\n    decimals: 6\n  }\n}","export const USDC_DECIMALS = 6;\nexport const METAPLEX_ID = \"metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s\";","import { BN, Program } from \"@coral-xyz/anchor\";\nimport { ShortxContract } from \"./types/shortx.js\";\nimport { formatPositionAccount } from \"./utils/helpers.js\";\nimport {\n  PublicKey,\n  SystemProgram,\n  TransactionInstruction,\n} from \"@solana/web3.js\";\n\nimport {\n  getMarketPDA,\n  getPositionAccountPDA,\n  getSubPositionAccountPDA,\n} from \"./utils/pda/index.js\";\nimport { RpcOptions } from \"./types/index.js\";\nimport { PositionAccount, PositionStatus } from \"./types/position.js\";\nimport { METAPLEX_ID } from \"./utils/constants.js\";\nimport { bs58 } from \"@coral-xyz/anchor/dist/cjs/utils/bytes/index.js\";\n\nexport default class Position {\n  METAPLEX_PROGRAM_ID = new PublicKey(METAPLEX_ID);\n  constructor(private program: Program<ShortxContract>) {}\n\n  /**\n   * Get all Position Accounts for a Market\n   * @param marketId - Market ID\n   *\n   */\n  async getPositionsAccountsForMarket(marketId: number) {\n    const allAccounts = await this.program.account.positionAccount.all();\n    console.log(\n      \"SDK: All position accounts for user for market:\",\n      allAccounts.map((acc) => ({\n        marketId: acc.account.marketId,\n        authority: acc.account.authority.toString(),\n        // log other fields you want to see\n      }))\n    );\n\n    // Then try the filtered query\n    const response = await this.program.account.positionAccount.all([\n      {\n        memcmp: {\n          offset: 8 + 1,\n          bytes: bs58.encode(new BN(marketId).toArray(\"le\", 8)),\n        },\n      },\n    ]);\n\n    return response.map(({ account }) =>\n      formatPositionAccount(account, marketId)\n    );\n  }\n\n  /**\n   * Get all Positions for a user\n   * @param user - User PublicKey\n   *\n   */\n  // async getPositionsForUser(user: PublicKey) {\n  //   // Then try the filtered query\n  //   const allAccounts = await this.program.account.positionAccount.all();\n\n  //   const formattedPositionAccounts = allAccounts.map(({ account }) =>\n  //     formatPositionAccount(account)\n  //   );\n\n  //   const positions = formattedPositionAccounts.flatMap(\n  //     (positionAccount) => positionAccount.positions\n  //   );\n\n  //   const userPositions = positions.filter(\n  //     (position) => position.authority === user.toBase58()\n  //   );\n\n  //   return userPositions;\n  // }\n\n  /**\n   * Get User positions for a particular market\n   * @param user - User PublicKey\n   * @param marketId - Market ID\n   */\n  // async getUserPositionsForMarket(user: PublicKey, marketId: number) {\n  //   const positionAccounts = await this.getPositionsAccountsForMarket(marketId);\n\n  //   const positions = positionAccounts.flatMap(\n  //     (positionAccount) => positionAccount.positions\n  //   );\n\n  //   return positions.filter(\n  //     (position) => position.authority === user.toBase58()\n  //   );\n  // }\n\n  /**\n   * Get the PDA for a position account\n   * @param marketId - Market ID\n   * @param marketAddress - Market Address\n   * @param positionNonce - The nonce of the position account\n   *\n   */\n  async getPositionsAccountPda(marketId: number, positionNonce = 0) {\n    let positionAccountPDA = getPositionAccountPDA(\n      this.program.programId,\n      marketId\n    );\n\n    if (positionNonce !== 0) {\n      const marketAddress = getMarketPDA(this.program.programId, marketId);\n      const subPositionAccountPDA = getSubPositionAccountPDA(\n        this.program.programId,\n        marketId,\n        marketAddress,\n        positionNonce\n      );\n\n      positionAccountPDA = getPositionAccountPDA(\n        this.program.programId,\n        marketId,\n        subPositionAccountPDA\n      );\n    }\n\n    return this.program.account.positionAccount.fetch(positionAccountPDA);\n  }\n\n  /**\n   * Create Sub positions account\n   * @param user - User PublicKey the main user\n   * @param payer - Payer PublicKey\n   * @param options - RPC options\n   *\n   */\n  async createSubPositionAccount(\n    marketId: number,\n    payer: PublicKey,\n    marketAddress: PublicKey,\n    options?: RpcOptions\n  ) {\n    const ixs: TransactionInstruction[] = [];\n\n    const positionAccount = await this.getPositionsAccountPda(marketId);\n\n    const subPositionAccountPDA = getSubPositionAccountPDA(\n      this.program.programId,\n      marketId,\n      marketAddress,\n      positionAccount.nonce + 1\n    );\n\n    const marketPositionsAccount = getPositionAccountPDA(\n      this.program.programId,\n      marketId\n    );\n\n    try {\n      ixs.push(\n        await this.program.methods\n          .createSubPositionAccount(subPositionAccountPDA)\n          .accountsPartial({\n            signer: payer,\n            market: marketAddress,\n            marketPositionsAccount: marketPositionsAccount,\n            subMarketPositions: subPositionAccountPDA,\n            systemProgram: SystemProgram.programId,\n          })\n          .instruction()\n      );\n    } catch (error) {\n      console.log(\"error\", error);\n      throw error;\n    }\n\n    return ixs;\n  }\n\n  /**\n   * Get position account Nonce With Slots\n   * @param positionAccounts - Position Accounts\n   *\n   */\n  getPositionAccountNonceWithSlots(\n    positionAccounts: PositionAccount[],\n    payer: PublicKey\n  ) {\n    const marketId = Number(positionAccounts[0].marketId);\n    const marketAddress = getMarketPDA(this.program.programId, marketId);\n    if (!payer) {\n      throw new Error(\n        \"Payer public key is not available. Wallet might not be connected.\"\n      );\n    }\n    let nonce: number | null = null;\n\n    for (const positionAccount of positionAccounts.reverse()) {\n      if (nonce !== null) {\n        break;\n      }\n\n      console.log(\"SDK: positionAccount\", positionAccount);\n\n      let freeSlots = 0;\n\n      positionAccount.positions.forEach((position) => {\n        if (nonce !== null) {\n          return;\n        }\n\n        if (\n          position.positionStatus !== PositionStatus.OPEN &&\n          position.positionStatus !== PositionStatus.WAITING &&\n          freeSlots >= 2\n        ) {\n          nonce = positionAccount.isSubPosition\n            ? Number(positionAccount.nonce)\n            : 0;\n        }\n\n        if (\n          position.positionStatus !== PositionStatus.OPEN &&\n          position.positionStatus !== PositionStatus.WAITING\n        ) {\n          freeSlots += 1;\n        }\n      });\n    }\n\n    if (nonce === null) {\n      throw new Error(\"No open orders found\");\n    }\n\n    if (nonce === 0) {\n      return getPositionAccountPDA(this.program.programId, Number(marketId));\n    }\n\n    console.log(\"SDK: nonce\", nonce);\n\n    const subPositionAccountPDA = getSubPositionAccountPDA(\n      this.program.programId,\n      Number(marketId),\n      marketAddress,\n      nonce\n    );\n\n    const positionAccountPDA = getPositionAccountPDA(\n      this.program.programId,\n      Number(marketId),\n      subPositionAccountPDA\n    );\n\n    return positionAccountPDA;\n  }\n\n  async getPositionAccountIxs(marketId: number, payer: PublicKey) {\n    if (!payer) {\n      throw new Error(\n        \"Payer public key is not available. Wallet might not be connected.\"\n      );\n    }\n\n    let marketAddress = getMarketPDA(this.program.programId, marketId);\n\n    const marketPositionsAccount = getPositionAccountPDA(\n      this.program.programId,\n      marketId\n    );\n\n    console.log(\"SDK: marketPositionsAccount from positions\", marketPositionsAccount.toString());\n\n    const ixs: TransactionInstruction[] = [];\n\n    let positionAccounts: PositionAccount[] = [];\n\n    positionAccounts = await this.getPositionsAccountsForMarket(marketId);\n\n    console.log(\"SDK: initial positionAccounts\", positionAccounts);\n\n    if (positionAccounts.length === 0) {\n      throw new Error(\n        \"No position accounts found for this market. Something went wrong.\"\n      );\n    }\n\n    try {\n      const positionAccountWithSlots = this.getPositionAccountNonceWithSlots(\n        positionAccounts,\n        payer\n      );\n\n      console.log(\"SDK: returned positionAccountPDA\", positionAccountWithSlots);\n\n      return { positionAccountPDA: positionAccountWithSlots, ixs };\n    } catch {\n      const mainPositionAccount = positionAccounts.find(\n        (positionAccount) => !positionAccount.isSubPosition\n      );\n\n      if (!mainPositionAccount) {\n        throw new Error(\n          \"Main position account not found. Cannot determine next sub-position nonce.\"\n        );\n      }\n\n      const subPositionAccountKey = getSubPositionAccountPDA(\n        this.program.programId,\n        marketId,\n        marketAddress,\n        Number(mainPositionAccount.nonce) + 1\n      );\n\n      console.log(\"SDK: subPositionAccountKey\", subPositionAccountKey.toString());\n\n      const subPositionAccountPDA = getPositionAccountPDA(\n        this.program.programId,\n        marketId,\n        subPositionAccountKey\n      );\n\n      console.log(\"SDK: subPositionAccountPDA\", subPositionAccountPDA.toString());\n\n      ixs.push(\n        await this.program.methods\n          .createSubPositionAccount(subPositionAccountKey)\n          .accountsPartial({\n            signer: payer,\n            market: marketAddress,\n            marketPositionsAccount: marketPositionsAccount,\n            subMarketPositions: subPositionAccountPDA,\n            systemProgram: SystemProgram.programId,\n          })\n          .instruction()\n      );\n\n      return {\n        positionAccountPDA: subPositionAccountPDA,\n        ixs,\n      };\n    }\n  }\n\n  // async mintExistingPosition(\n  //   marketId: number,\n  //   positionId: number,\n  //   positionNonce: number,\n  //   payer: PublicKey,\n  //   metadataUri: string,\n  //   collectionAuthority: PublicKey,\n  //   options?: RpcOptions\n  // ) {\n  //   const ixs: TransactionInstruction[] = [];\n\n  //   const marketPDA = getMarketPDA(this.program.programId, marketId);\n\n  //   let positionAccountPDA = getPositionAccountPDA(\n  //     this.program.programId,\n  //     marketId\n  //   );\n\n  //   if (positionNonce !== 0) {\n  //     const subPositionAccountPDA = getSubPositionAccountPDA(\n  //       this.program.programId,\n  //       marketId,\n  //       marketPDA,\n  //       positionNonce\n  //     );\n\n  //     positionAccountPDA = getPositionAccountPDA(\n  //       this.program.programId,\n  //       marketId,\n  //       subPositionAccountPDA\n  //     );\n  //   }\n\n  //   const marketAccount = await this.program.account.marketState.fetch(\n  //     marketPDA\n  //   );\n\n  //   const nftMintKeypair = Keypair.generate();\n\n  //   // Get the NFT metadata PDA\n  //   const nftMetadataPda = getNftMetadataPDA(\n  //     nftMintKeypair.publicKey,\n  //     this.METAPLEX_PROGRAM_ID\n  //   );\n\n  //   // Get the NFT master edition PDA\n  //   const nftMasterEditionPda = getNftMasterEditionPDA(\n  //     nftMintKeypair.publicKey,\n  //     this.METAPLEX_PROGRAM_ID\n  //   );\n\n  //   // Create the user's NFT token account using ATA program\n  //   const nftTokenAccount = getAssociatedTokenAddressSync(\n  //     nftMintKeypair.publicKey,\n  //     payer, // Create token account for admin since they own the position\n  //     false, // allowOwnerOffCurve\n  //     TOKEN_PROGRAM_ID\n  //   );\n\n  //   if (\n  //     !marketAccount.nftCollectionMint ||\n  //     !marketAccount.nftCollectionMetadata ||\n  //     !marketAccount.nftCollectionMasterEdition\n  //   ) {\n  //     throw new Error(\n  //       \"Market account does not have a collection mint, metadata, or master edition\"\n  //     );\n  //   }\n\n  //   try {\n  //     ixs.push(\n  //       await this.program.methods\n  //         .mintPosition({\n  //           positionId: new BN(positionId),\n  //           metadataUri: metadataUri,\n  //         })\n  //         .accountsPartial({\n  //           signer: payer,\n  //           market: marketPDA,\n  //           marketPositionsAccount: positionAccountPDA,\n  //           nftMint: nftMintKeypair.publicKey,\n  //           nftTokenAccount: nftTokenAccount,\n  //           metadataAccount: nftMetadataPda,\n  //           masterEdition: nftMasterEditionPda,\n  //           collectionMint: marketAccount.nftCollectionMint,\n  //           collectionMetadata: marketAccount.nftCollectionMetadata,\n  //           collectionMasterEdition: marketAccount.nftCollectionMasterEdition,\n  //           collectionAuthority: collectionAuthority, //needs to be the same as market creator and needs to sign.\n  //           tokenProgram: TOKEN_PROGRAM_ID,\n  //           tokenMetadataProgram: this.METAPLEX_PROGRAM_ID,\n  //           associatedTokenProgram: ASSOCIATED_TOKEN_PROGRAM_ID,\n  //           systemProgram: SystemProgram.programId,\n  //           sysvarInstructions: SYSVAR_INSTRUCTIONS_PUBKEY,\n  //         })\n  //         .instruction()\n  //     );\n\n  //     const tx = await createVersionedTransaction(\n  //       this.program,\n  //       ixs,\n  //       payer,\n  //       options\n  //     );\n  //     tx.sign([nftMintKeypair]);\n  //     return tx;\n  //   } catch (error) {\n  //     console.log(\"error\", error);\n  //     throw error;\n  //   }\n  // }\n}\n","import { Program, BN, web3 } from \"@coral-xyz/anchor\";\nimport { ShortxContract } from \"./types/shortx.js\";\nimport { PublicKey, TransactionInstruction } from \"@solana/web3.js\";\nimport { getConfigPDA } from \"./utils/pda/index.js\";\nimport Trade from \"./trade.js\";\n\nexport default class Config {\n  ADMIN_KEY: PublicKey;\n  FEE_VAULT: PublicKey;\n  USDC_MINT: PublicKey;\n  trade: Trade;\n  constructor(private program: Program<ShortxContract>, adminKey: PublicKey, feeVault: PublicKey, usdcMint: PublicKey) {\n    this.ADMIN_KEY = adminKey;\n    this.FEE_VAULT = feeVault;\n    this.USDC_MINT = usdcMint;\n    this.trade = new Trade(this.program, this.ADMIN_KEY, this.FEE_VAULT, this.USDC_MINT);\n  }\n\n  /**\n   * Init a config account to maintain details\n   *\n   */\n  async createConfig(feeAmount: number, payer: PublicKey) {\n    const configPDA = getConfigPDA(this.program.programId);\n    const ixs: TransactionInstruction[] = [];\n    const feeAmountBN = new BN(feeAmount);\n    ixs.push(\n      await this.program.methods\n        .initializeConfig(feeAmountBN)\n        .accountsPartial({\n          signer: payer,\n          feeVault: this.FEE_VAULT,\n          config: configPDA,\n          systemProgram: web3.SystemProgram.programId,\n        })\n        .instruction()\n    );\n    return ixs;\n  }\n\n  /**\n   * Get a config account to maintain details if it exists\n   *\n   */\n  async getConfig() {\n    const configPDA = getConfigPDA(this.program.programId);\n    try {\n      const config = await this.program.account.config.fetch(configPDA);\n      return config;\n    } catch (error) {\n      console.error(\"Error fetching config or config does not exist:\", error);\n      return null;\n    }\n  }\n\n  /**\n   * Update a config account to maintain details\n   *\n   */\n  async updateConfig(\n    payer: PublicKey,\n    feeAmount?: number,\n    authority?: PublicKey,\n    feeVault?: PublicKey\n  ) {\n    const configPDA = getConfigPDA(this.program.programId);\n    const ixs: TransactionInstruction[] = [];\n    const feeAmountBN = feeAmount ? new BN(feeAmount) : null;\n    const authorityBN = authority || null;\n    const feeVaultBN = feeVault || null;\n    ixs.push(\n      await this.program.methods\n        .updateConfig(feeAmountBN, authorityBN, feeVaultBN)\n        .accountsPartial({\n          signer: this.ADMIN_KEY,\n          feeVault: this.FEE_VAULT,\n          config: configPDA,\n          systemProgram: web3.SystemProgram.programId,\n        })\n        .instruction()\n    );\n    return ixs;\n    // sendVersionedTransaction(this.program, ixs, payer);\n  }\n\n  /**\n   * Close a config account\n   * @param payer - PublicKey of the payer\n   * @returns TransactionInstruction[] - Array of TransactionInstruction\n   */\n  async closeConfig(payer: PublicKey) {\n    const configPDA = getConfigPDA(this.program.programId);\n    const markets = await this.trade.getAllMarkets();\n    if(markets.length > 0){\n      throw new Error(\"Cannot close config with active markets\");\n    }\n    const ixs: TransactionInstruction[] = [];\n    try{\n    ixs.push(\n      await this.program.methods.closeConfig().accountsPartial({\n        signer: this.ADMIN_KEY,\n        config: configPDA,\n        systemProgram: web3.SystemProgram.programId,\n      }).instruction()\n    );\n  }catch(error){\n    console.error(\"Error closing config:\", error);\n    throw error;\n  }\n    return ixs;\n  }\n}"],"mappings":"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","names":["module","exports","BN","Buffer","clone","allocate","comb10MulTo","isOdd","prime","span","Boolean","fs","path","i","toBigIntLE","toBigIntBE","toBufferLE","toBufferBE","some","value","__option","none","isOption","input","isSome","option","isNone","unwrapOption","option","fallback","isSome","value","wrapNullable","nullable","some","none","wrapNullish","nullish","undefined","unwrapSome","unwrapSomeOrElse","unwrapOptionRecursively","input","fallback","ArrayBuffer","isView","next","x","isOption","isSome","value","Array","isArray","map","Object","fromEntries","entries","k","v","InvalidBaseStringError","Error","constructor","value","base","cause","message","name","baseX","alphabet","base","length","baseBigInt","BigInt","description","fixedSize","maxSize","serialize","value","match","RegExp","InvalidBaseStringError","Uint8Array","chars","trailIndex","findIndex","c","leadingZeroes","Array","fill","from","tailChars","slice","base10Number","baseXPower","i","indexOf","tailBytes","unshift","Number","concat","deserialize","buffer","offset","bytes","n","repeat","reduce","sum","byte","join","base10","baseX","base16","description","fixedSize","maxSize","serialize","value","lowercaseValue","toLowerCase","match","InvalidBaseStringError","matches","Uint8Array","from","map","byte","parseInt","deserialize","buffer","offset","slice","reduce","str","toString","padStart","length","base58","baseX","mergeBytes","bytesArr","totalLength","reduce","total","arr","length","result","Uint8Array","offset","forEach","set","padBytes","bytes","paddedBytes","fill","fixBytes","slice","DeserializingEmptyBufferError","Error","constructor","serializer","name","NotEnoughBytesError","expected","actual","ExpectedFixedSizeSerializerError","message","fixSerializer","serializer","fixedBytes","description","fixedSize","maxSize","serialize","value","fixBytes","deserialize","buffer","offset","slice","length","NotEnoughBytesError","mapSerializer","serializer","unmap","map","description","fixedSize","maxSize","serialize","value","deserialize","buffer","offset","length","reverseSerializer","serializer","fixedSize","ExpectedFixedSizeSerializerError","serialize","value","reverse","deserialize","bytes","offset","newBytes","mergeBytes","slice","require_cjs","baseXReslice","alphabet","bits","base","length","reslice","input","inputBits","outputBits","useRemainder","output","accumulator","bitsInAccumulator","mask","value","push","description","fixedSize","maxSize","serialize","match","RegExp","InvalidBaseStringError","Uint8Array","charIndices","map","c","indexOf","bytes","from","deserialize","buffer","offset","slice","i","join","base64","mapSerializer","baseXReslice","value","replace","padEnd","Math","ceil","length","removeNullCharacters","value","replace","padNullCharacters","chars","padEnd","utf8","description","fixedSize","maxSize","serialize","value","TextEncoder","encode","deserialize","buffer","offset","TextDecoder","decode","slice","removeNullCharacters","length","require_cjs","InvalidPublicKeyError","Error","constructor","invalidPublicKey","reason","name","PUBLIC_KEY_LENGTH","publicKey","input","assertValidPublicKey","key","toBase58","Array","isArray","base58","deserialize","assertPublicKey","defaultPublicKey","isPublicKey","value","error","isPda","length","InvalidPublicKeyError","publicKeyBytes","uniquePublicKeys","publicKeys","Set","bytes","serialize","base58PublicKey","samePublicKey","left","right","require_cjs","Endian","NumberOutOfRangeError","RangeError","constructor","serializer","min","max","actual","name","numberFactory","input","littleEndian","defaultDescription","name","size","options","endian","Endian","Little","description","fixedSize","maxSize","serialize","value","range","assertRange","buffer","ArrayBuffer","set","DataView","Uint8Array","deserialize","bytes","offset","slice","assertEnoughBytes","view","toDataView","get","toArrayBuffer","array","byteOffset","byteLength","serializer","min","max","NumberOutOfRangeError","expected","length","DeserializingEmptyBufferError","NotEnoughBytesError","f32","options","numberFactory","name","size","set","view","value","le","setFloat32","Number","get","getFloat32","f64","options","numberFactory","name","size","set","view","value","le","setFloat64","Number","get","getFloat64","i8","options","numberFactory","name","size","range","Number","set","view","value","setInt8","get","getInt8","i16","options","numberFactory","name","size","range","Number","set","view","value","le","setInt16","get","getInt16","i32","options","numberFactory","name","size","range","Number","set","view","value","le","setInt32","get","getInt32","i64","options","numberFactory","name","size","range","BigInt","set","view","value","le","setBigInt64","get","getBigInt64","i128","options","numberFactory","name","size","range","BigInt","set","view","value","le","leftOffset","rightOffset","rightMask","setBigInt64","setBigUint64","get","left","getBigInt64","right","getBigUint64","u8","options","numberFactory","name","size","range","Number","set","view","value","setUint8","get","getUint8","u16","options","numberFactory","name","size","range","Number","set","view","value","le","setUint16","get","getUint16","u32","options","numberFactory","name","size","range","Number","set","view","value","le","setUint32","get","getUint32","u64","options","numberFactory","name","size","range","BigInt","set","view","value","le","setBigUint64","get","getBigUint64","u128","options","numberFactory","name","size","range","BigInt","set","view","value","le","leftOffset","rightOffset","rightMask","setBigUint64","get","left","getBigUint64","right","shortU16","options","description","fixedSize","maxSize","serialize","value","assertRange","bytes","ii","alignedValue","nextSevenBits","Uint8Array","deserialize","offset","byteCount","byteIndex","currentByte","require_cjs","u8","u32","u64","u128","InvalidNumberOfItemsError","Error","constructor","serializer","expected","actual","name","InvalidArrayLikeRemainderSizeError","remainderSize","itemSize","UnrecognizedArrayLikeSerializerSizeError","size","JSON","stringify","InvalidDataEnumVariantError","invalidVariant","validVariants","join","InvalidScalarEnumVariantError","min","max","EnumDiscriminatorOutOfRangeError","RangeError","discriminator","sumSerializerSizes","sizes","reduce","all","size","getResolvedSize","size","bytes","offset","deserialize","UnrecognizedArrayLikeSerializerSizeError","getSizeDescription","description","getSizeFromChildren","childrenSizes","childrenSize","sumSerializerSizes","getSizePrefix","realSize","serialize","Uint8Array","array","item","options","size","u32","description","getSizeDescription","fixedSize","getSizeFromChildren","maxSize","serialize","value","length","InvalidNumberOfItemsError","mergeBytes","getSizePrefix","map","v","deserialize","bytes","offset","values","slice","newOffset","push","resolvedSize","getResolvedSize","i","bitArray","size","options","parsedOptions","backward","backwardSuffix","description","fixedSize","maxSize","serialize","value","bytes","i","byte","j","feature","Number","unshift","push","Uint8Array","deserialize","offset","booleans","slice","reverse","length","NotEnoughBytesError","forEach","Boolean","bool","options","size","u8","fixedSize","ExpectedFixedSizeSerializerError","description","maxSize","serialize","value","deserialize","bytes","offset","slice","length","DeserializingEmptyBufferError","vOffset","bytes","options","size","description","getSizeDescription","byteSerializer","fixedSize","maxSize","serialize","value","Uint8Array","deserialize","offset","slice","length","fixSerializer","contentBytes","lengthBytes","mergeBytes","buffer","DeserializingEmptyBufferError","lengthBigInt","lengthOffset","Number","contentBuffer","NotEnoughBytesError","contentOffset","maxSerializerSizes","sizes","reduce","all","size","Math","max","dataEnum","variants","options","prefix","size","u8","fieldDescriptions","map","name","serializer","String","description","join","allVariantHaveTheSameFixedSize","every","one","i","all","fixedSize","fixedVariantSize","maxVariantSize","maxSerializerSizes","field","maxSize","length","sumSerializerSizes","serialize","variant","discriminator","findIndex","key","__kind","InvalidDataEnumVariantError","variantPrefix","variantSerializer","variantBytes","mergeBytes","deserialize","bytes","offset","slice","DeserializingEmptyBufferError","dOffset","variantField","Number","EnumDiscriminatorOutOfRangeError","vOffset","map","key","value","options","size","u32","description","getSizeDescription","fixedSize","getSizeFromChildren","maxSize","serialize","InvalidNumberOfItemsError","itemBytes","Array","from","k","v","mergeBytes","getSizePrefix","deserialize","bytes","offset","Map","slice","length","deserializedKey","kOffset","deserializedValue","vOffset","set","resolvedSize","newOffset","getResolvedSize","i","nullable","item","options","prefix","u8","fixed","descriptionSuffix","getSizeDescription","fixedSize","ExpectedFixedSizeSerializerError","description","maxSize","sumSerializerSizes","serialize","option","prefixByte","Number","itemFixedSize","itemBytes","slice","Uint8Array","fill","mergeBytes","deserialize","bytes","offset","length","fixedOffset","isSome","prefixOffset","value","newOffset","option","item","options","prefix","u8","fixed","descriptionSuffix","getSizeDescription","fixedSize","ExpectedFixedSizeSerializerError","description","maxSize","sumSerializerSizes","serialize","optionOrNullable","isOption","wrapNullable","prefixByte","Number","isSome","itemFixedSize","itemBytes","value","slice","Uint8Array","fill","mergeBytes","deserialize","bytes","offset","length","none","fixedOffset","prefixOffset","newOffset","some","publicKey","options","description","fixedSize","maxSize","serialize","value","publicKeyBytes","toPublicKey","deserialize","bytes","offset","pubkeyBytes","slice","length","DeserializingEmptyBufferError","PUBLIC_KEY_LENGTH","NotEnoughBytesError","scalarEnum","constructor","options","prefix","size","u8","enumKeys","Object","keys","enumValues","values","isNumericEnum","some","v","valueDescriptions","filter","join","minRange","maxRange","length","stringValues","Set","assertValidVariant","variant","isInvalidNumber","isInvalidString","includes","InvalidScalarEnumVariantError","description","fixedSize","maxSize","serialize","value","valueIndex","indexOf","deserialize","bytes","offset","slice","DeserializingEmptyBufferError","newOffset","valueAsNumber","Number","EnumDiscriminatorOutOfRangeError","set","item","options","size","u32","description","getSizeDescription","fixedSize","getSizeFromChildren","maxSize","serialize","InvalidNumberOfItemsError","itemBytes","Array","from","value","mergeBytes","getSizePrefix","deserialize","bytes","offset","Set","slice","length","newOffset","add","resolvedSize","getResolvedSize","i","string","options","size","u32","encoding","utf8","description","getSizeDescription","fixSerializer","fixedSize","maxSize","serialize","value","contentBytes","lengthBytes","length","mergeBytes","deserialize","buffer","offset","slice","DeserializingEmptyBufferError","lengthBigInt","lengthOffset","Number","contentBuffer","NotEnoughBytesError","contentOffset","struct","fields","options","fieldDescriptions","map","name","serializer","String","description","join","fixedSize","sumSerializerSizes","field","maxSize","serialize","fieldBytes","key","mergeBytes","deserialize","bytes","offset","forEach","value","newOffset","tuple","items","options","itemDescriptions","map","item","description","join","fixedSize","sumSerializerSizes","maxSize","serialize","value","length","InvalidNumberOfItemsError","mergeBytes","index","deserialize","bytes","offset","values","forEach","serializer","newValue","newOffset","push","unit","options","description","fixedSize","maxSize","serialize","Uint8Array","deserialize","_bytes","offset","undefined","require_cjs","bool","publicKey","struct","mapSerializer","_mapSerializer","fixSerializer","_fixSerializer","reverseSerializer","_reverseSerializer","mergeBytes","_mergeBytes","padBytes","_padBytes","fixBytes","_fixBytes","utf8","_utf8","baseX","_baseX","base10","_base10","base58","_base58","base64","_base64","base16","_base16","bitArray","_bitArray","removeNullCharacters","_removeNullCharacters","padNullCharacters","_padNullCharacters","Endian","_Endian","UmiError","Error","constructor","message","source","sourceDetails","cause","name","getFullSource","getCapitalizedSource","toUpperCase","slice","capitalizedSource","toString","SdkError","UmiError","constructor","message","cause","undefined","name","UnexpectedAccountError","SdkError","constructor","publicKey","expectedType","cause","message","name","AccountNotFoundError","SdkError","constructor","publicKey","accountType","solution","message","name","ACCOUNT_HEADER_SIZE","deserializeAccount","rawAccount","dataSerializer","data","publicKey","rest","parsedData","deserialize","header","error","UnexpectedAccountError","description","assertAccountExists","account","name","solution","exists","AccountNotFoundError","createBigInt","input","toString","BigInt","UnexpectedAmountError","SdkError","constructor","amount","expectedIdentifier","expectedDecimals","message","identifier","decimals","name","AmountMismatchError","SdkError","constructor","left","right","operation","wrappedOperation","message","identifier","decimals","name","createAmount","basisPoints","identifier","decimals","createBigInt","createAmountFromDecimals","decimalAmount","exponentAmount","BigInt","multiplyAmount","percentAmount","percent","tokenAmount","tokens","lamports","sol","usd","isAmount","amount","isSolAmount","sameAmounts","left","right","assertAmount","UnexpectedAmountError","assertSolAmount","actual","assertSameAmounts","operation","AmountMismatchError","addAmounts","subtractAmounts","multiplier","units","toString","split","multiplierBasisPoints","multiplierExponents","length","divideAmount","divisor","divisorBasisPoints","divisorExponents","absoluteAmount","value","x","compareAmounts","isEqualToAmount","tolerance","delta","isLessThanOrEqualToAmount","isLessThanAmount","isGreaterThanAmount","isGreaterThanOrEqualToAmount","isZeroAmount","isPositiveAmount","isNegativeAmount","amountToString","maxDecimals","text","sign","startsWith","replace","padStart","slice","undefined","amountToNumber","parseFloat","displayAmount","amountAsString","test","mapAmountSerializer","serializer","mapSerializer","Number","MAX_SAFE_INTEGER","MAINNET_BETA_DOMAINS","DEVNET_DOMAINS","TESTNET_DOMAINS","LOCALNET_DOMAINS","resolveClusterFromEndpoint","endpoint","domain","URL","hostname","includes","InterfaceImplementationMissingError","SdkError","constructor","interfaceName","contextVariable","interfaceBasename","replace","message","name","createNullDownloader","errorHandler","InterfaceImplementationMissingError","download","downloadJson","createNullEddsa","errorHandler","InterfaceImplementationMissingError","generateKeypair","createKeypairFromSecretKey","createKeypairFromSeed","createKeypairFromFile","createKeypairFromSolanaConfig","isOnCurve","findPda","sign","verify","createNullHttp","errorHandler","InterfaceImplementationMissingError","send","createNullProgramRepository","errorHandler","InterfaceImplementationMissingError","has","get","getPublicKey","all","add","bind","unbind","clone","resolveError","createNullRpc","errorHandler","InterfaceImplementationMissingError","getEndpoint","getCluster","getAccount","getAccounts","getProgramAccounts","getBlockTime","getBalance","getRent","getSlot","getGenesisHash","getLatestBlockhash","getTransaction","getSignatureStatuses","accountExists","airdrop","call","sendTransaction","simulateTransaction","confirmTransaction","createNullSerializer","errorHandler","InterfaceImplementationMissingError","tuple","array","map","set","option","nullable","struct","enum","dataEnum","string","bool","unit","u8","u16","u32","u64","u128","i8","i16","i32","i64","i128","f32","f64","bytes","publicKey","chunk","array","chunkSize","reduce","chunks","item","index","chunkIndex","Math","floor","push","zipMap","left","right","fn","map","t","uniqueBy","acc","v","some","x","signTransaction","transaction","signers","reduce","promise","signer","unsigned","Promise","resolve","signAllTransactions","transactionsWithSigners","transactions","map","item","signersWithTransactions","all","index","forEach","find","publicKey","indices","push","length","signed","position","isSigner","value","uniqueSigners","uniqueBy","a","b","createNoopSigner","signMessage","message","createNullSigner","error","Error","errorHandler","createNullTransactionFactory","errorHandler","InterfaceImplementationMissingError","create","serialize","deserialize","serializeMessage","deserializeMessage","createNullUploader","errorHandler","InterfaceImplementationMissingError","upload","uploadJson","getUploadPrice","createNullContext","downloader","createNullDownloader","eddsa","createNullEddsa","http","createNullHttp","identity","createNullSigner","payer","programs","createNullProgramRepository","rpc","createNullRpc","serializer","createNullSerializer","transactions","createNullTransactionFactory","uploader","createNullUploader","dateTime","value","isDateObject","date","Date","timestamp","Math","floor","getTime","createBigInt","now","Object","prototype","toString","call","formatDateTime","locales","options","month","day","year","hour","minute","timeZone","Number","toLocaleDateString","mapDateTimeSerializer","serializer","mapSerializer","MAX_SAFE_INTEGER","generateRandomString","length","alphabet","result","alphabetLength","i","charAt","Math","floor","random","createGenericFile","content","fileName","options","buffer","utf8","serialize","displayName","uniqueName","generateRandomString","contentType","extension","getExtension","tags","createGenericFileFromBrowserFile","browserFile","Uint8Array","arrayBuffer","name","createGenericFileFromJson","json","JSON","stringify","createBrowserFileFromGenericFile","file","File","parseJsonFromGenericFile","parse","TextDecoder","decode","getBytesFromGenericFiles","files","reduce","acc","byteLength","isGenericFile","lastDotIndex","lastIndexOf","slice","GpaBuilder","constructor","context","programId","options","reset","fields","deserializeCallback","registerFields","registerFieldsFromStruct","structFields","offset","reduce","acc","field","serializer","fixedSize","deserializeUsing","callback","slice","length","dataSlice","sliceField","effectiveOffset","getField","SdkError","withoutData","addFilter","filters","where","data","bytes","base58","serialize","base10","BigInt","toString","Uint8Array","memcmp","whereField","whereSize","dataSize","sortUsing","sortCallback","get","accounts","rpc","getProgramAccounts","sort","getAndMap","map","getDeserialized","rpcAccounts","getPublicKeys","account","publicKey","getDataAsPublicKeys","error","message","base64","deserialize","fieldName","forcedOffset","undefined","gpaBuilder","request","HttpRequestBuilder","method","data","undefined","headers","url","constructor","asJson","contentType","asMultipart","asForm","accept","withHeader","userAgent","withToken","token","type","key","value","withHeaders","dontFollowRedirects","followRedirects","maxRedirects","withoutTimeout","withTimeout","timeout","withAbortSignal","signal","withEndpoint","withParams","params","URL","newSearch","URLSearchParams","search","searchParams","entries","forEach","val","append","toString","withData","get","post","put","patch","delete","TRANSACTION_SIZE_LIMIT","addTransactionSignature","transaction","signature","signerPublicKey","maxSigners","message","header","numRequiredSignatures","signerPublicKeys","accounts","slice","signerIndex","findIndex","key","Error","newSignatures","signatures","generateSigner","context","createSignerFromKeypair","eddsa","generateKeypair","keypair","publicKey","secretKey","signMessage","message","sign","signTransaction","transaction","serializedMessage","signature","addTransactionSignature","signAllTransactions","transactions","Promise","all","map","isKeypairSigner","signer","undefined","isErrorWithLogs","error","Error","signerIdentity","signer","setPayer","install","umi","identity","payer","signerPayer","generatedSignerIdentity","generateSigner","use","generatedSignerPayer","keypairIdentity","keypair","createSignerFromKeypair","keypairPayer","TransactionBuilder","constructor","items","options","empty","setItems","input","parseItems","prepend","append","add","mapInstructions","fn","map","addRemainingAccounts","accountMeta","instructionIndex","length","metas","Array","isArray","extraKeys","meta","pubkey","signer","publicKey","isSigner","isWritable","extraSigners","flatMap","wrappedInstruction","index","keys","instruction","signers","splitByIndex","slice","unsafeSplitByTransactionSize","context","reduce","builders","item","lastBuilder","pop","lastBuilderWithItem","fitsInOneTransaction","push","setFeePayer","feePayer","getFeePayer","payer","setVersion","version","useLegacyVersion","useV0","setAddressLookupTables","addressLookupTables","getBlockhash","blockhash","setBlockhash","setLatestBlockhash","rpc","getLatestBlockhash","getInstructions","getSigners","uniqueSigners","getBytesCreatedOnChain","sum","bytesCreatedOnChain","getRentCreatedOnChain","getRent","includesHeaderBytes","getTransactionSize","transactions","serialize","build","minimumTransactionsRequired","Math","ceil","TRANSACTION_SIZE_LIMIT","SdkError","instructions","create","buildWithLatestBlockhash","builder","buildAndSign","signTransaction","send","transaction","sendTransaction","confirm","signature","strategy","type","confirmTransaction","sendAndConfirm","result","transactionBuilder","TransactionBuilderGroup","constructor","builders","options","prepend","builder","newBuilders","Array","isArray","append","add","sequential","parallel","isParallel","merge","length","TransactionBuilder","reduce","next","empty","build","context","map","setLatestBlockhash","hasBlockhashlessBuilder","some","blockhash","rpc","getLatestBlockhash","setBlockhash","buildWithLatestBlockhash","buildAndSign","transactions","signers","getSigners","signAllTransactions","zipMap","transaction","txSigners","send","runAll","tx","sendTransaction","sendAndConfirm","blockhashWithExpiryBlockHeight","find","strategy","confirm","type","signature","result","confirmTransaction","fn","filter","array","Promise","all","promise","args","resolve","transactionBuilderGroup","createUmi","createNullContext","use","plugin","install","InvalidBaseStringError","SdkError","constructor","value","base","cause","message","name","ProgramError","UmiError","constructor","message","program","cause","name","publicKey","logs","map","log","join","require_cjs","BigInt","Program","publicKey","DataState","ExternalPluginAdapterSchema","ExternalPluginAdapterType","ExternalValidationResult","HookableLifecycleEvent","Key","PluginType","UpdateType","ValidationResult","encode","decode","size","CheckResult","publicKey","publicKey","publicKey","publicKey","publicKey","u64","u8","u32","LifecycleValidationError","Program","import_bn","PublicKey","MarketStates","WinningDirection","decode","encode","encode","decode","bigInt","BigNumber","compare","format","import_buffer_layout","encode","decode","bool","import_buffer_layout","PublicKey","encode","decode","PublicKey","publicKey","import_buffer_layout","PublicKey","PublicKey","PositionDirection","PositionStatus","PublicKey","PublicKey","BN","PublicKey","BN","axios","PublicKey","TransactionInstruction","ComputeBudgetProgram","BN","PublicKey","PublicKey","BN","PublicKey","publicKey","BN","BN","web3","BN","web3","Program"]}